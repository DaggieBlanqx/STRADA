var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.596,1,1.232]],["body/components/AboutComponent.html",[0,1.056,1,2.093,2,0.17,3,0.193,4,1.467,5,2.16,6,1.467,7,1.166,8,0.099,9,4.308,10,1.338,11,2.392,12,1.467,13,2.891,14,2.474,15,2.192,16,6.56,17,2.192,18,5.802,19,0.23,20,0.587,21,6.592,22,1.427,23,2.56,24,1.245,25,0.846,26,5.802,27,4.308,28,0.715,29,0.013,30,1.296,31,1.126,32,0.311,33,0.818,34,0.74,35,2.542,36,5.068,37,0.31,38,0.74,39,0.099,40,0.006,41,4.806,42,4.584,43,2.446,44,4.223,45,1.73,46,2.644,47,1.296,48,4.584,49,2.192,50,3.763,51,3.763,52,3.935,53,3.935,54,4.584,55,5.068,56,5.068,57,3.763,58,5.068,59,3.006,60,5.068,61,2.755,62,5.802,63,4.223,64,5.068,65,3.636,66,5.802,67,5.068,68,5.802,69,5.068,70,2.922,71,3.489,72,3.404,73,3.25,74,2.338,75,1.887,76,3.763,77,3.478,78,2.743,79,4.308,80,4.308,81,4.308,82,2.875,83,4.223,84,3.149,85,3.935,86,1.627,87,1.687,88,3.763,89,3.763,90,3.763,91,3.404,92,1.204,93,2.922,94,2.743,95,3.763,96,1.059,97,1.976,98,1.57,99,1.91,100,2.39,101,1.467,102,3.404,103,3.404,104,3.404,105,4.308,106,0.836,107,1.467,108,1.328,109,1.467,110,1.328,111,1.837,112,0.932,113,1.467,114,1.328,115,1.636,116,1.467,117,1.328,118,1.418,119,1.467,120,1.328,121,1.467,122,1.328,123,1.372,124,1.976,125,1.285,126,1.467,127,1.328,128,1.467,129,1.328,130,1.328,131,1.467,132,1.467,133,1.328,134,1.467,135,1.285,136,1.467,137,1.328,138,1.166,139,1.976,140,1.328,141,1.328,142,1.328,143,1.467,144,1.328,145,1.467,146,1.285,147,1.467,148,1.285,149,1.467,150,1.328,151,1.467,152,1.328,153,1.467,154,0.008,155,0.008]],["title/components/AppComponent.html",[0,0.596,108,1.273]],["body/components/AppComponent.html",[0,1.097,1,1.444,2,0.184,3,0.142,4,1.648,5,1.594,6,1.648,7,1.31,8,0.111,12,1.648,13,2.918,14,2.526,15,2.367,17,2.367,29,0.013,37,0.335,38,0.831,39,0.111,40,0.007,41,3.991,70,3.283,73,2.399,74,2.628,76,4.229,77,3.105,78,3.083,82,2.399,84,2.628,86,1.829,87,2.453,91,3.825,92,2.128,93,3.283,94,3.083,96,1.19,97,2.134,98,1.696,99,2.063,100,2.502,101,1.648,106,0.903,107,1.648,108,2.264,109,1.648,110,1.492,111,1.89,112,1.047,113,1.648,114,1.492,115,1.7,116,1.648,117,1.492,118,1.594,119,1.648,120,1.492,121,1.648,122,1.492,123,1.542,124,2.134,125,1.444,126,1.648,127,1.492,128,1.648,129,1.492,130,1.492,131,1.648,132,1.648,133,1.492,134,1.648,135,1.444,136,1.648,137,1.492,138,1.31,139,2.134,140,1.492,141,1.492,142,1.492,143,1.648,144,1.492,145,1.648,146,1.444,147,1.648,148,1.444,149,1.648,150,1.492,151,1.648,152,1.492,153,1.648,154,0.009,155,0.009,156,4.842,157,6.949,158,6.949,159,6.267,160,3.083,161,3.825,162,4.229,163,3.524,164,3.283,165,4.131,166,4.842,167,3.524,168,3.283,169,4.842,170,6.267,171,4.229,172,3.246,173,6.267,174,2.761,175,4.229,176,4.842,177,3.524,178,4.842,179,6.267,180,4.229,181,4.842,182,2.911,183,3.825,184,1.648]],["title/modules/AppModule.html",[185,1.232,186,3.008]],["body/modules/AppModule.html",[1,2.318,2,0.141,3,0.141,8,0.11,14,1.475,29,0.013,37,0.453,38,0.822,39,0.142,40,0.007,96,1.177,108,2.555,125,2.318,135,2.318,146,2.318,154,0.009,155,0.009,185,1.855,186,6.266,187,2.372,188,3.752,189,3.752,190,3.028,191,4.182,192,4.182,193,4.182,194,4.182,195,5.272,196,5.272,197,5.272,198,5.272,199,4.561,200,5.272,201,2.954,202,1.069,203,2.48,204,4.788,205,3.083,206,6.222,207,6.222,208,4.916,209,3.485,210,6.222,211,4.788,212,3.783,213,1.255,214,4.182,215,4.182,216,4.788,217,4.182,218,4.182,219,4.182,220,4.182,221,4.788,222,4.788,223,4.788,224,4.788,225,5.434,226,2.018,227,4.788,228,4.788,229,4.788,230,4.788,231,2.731,232,1.808]],["title/classes/AppPreloadingStrategy.html",[40,0.006,233,3.265]],["body/classes/AppPreloadingStrategy.html",[2,0.177,3,0.177,8,0.138,10,1.659,19,0.323,22,1.768,25,0.779,28,1.193,29,0.013,32,0.436,37,0.384,39,0.138,40,0.011,106,0.871,154,0.011,155,0.011,233,5.683,234,5.683,235,6.943,236,6.043,237,6.708,238,7.192,239,4.407,240,7.948,241,3.805,242,6.043,243,0.871,244,0.871,245,3.237,246,3.28,247,2.283,248,6.043,249,6.043,250,3.28]],["title/modules/AppRoutingModule.html",[185,1.232,195,2.802]],["body/modules/AppRoutingModule.html",[0,1.12,1,2.061,2,0.166,3,0.166,8,0.129,14,1.742,29,0.013,37,0.443,38,0.971,39,0.158,40,0.008,45,1.686,47,1.263,125,2.061,135,2.061,146,2.061,154,0.01,155,0.01,185,1.686,190,2.477,195,4.686,205,3.424,217,4.939,218,4.939,219,4.939,220,4.939,233,5.896,234,4.468,235,6.036,237,4.939,246,3.069,251,4.939,252,5.03,253,5.655,254,5.655,255,3.215,256,6.91,257,6.518,258,4.939,259,4.116,260,5.655,261,5.655,262,2.062,263,4.116,264,4.468]],["title/classes/BaseComponent.html",[40,0.006,265,1.962]],["body/classes/BaseComponent.html",[0,1.146,2,0.153,3,0.153,8,0.119,10,1.517,11,2.625,19,0.279,20,0.665,22,1.617,23,2.756,25,1.026,28,1.292,29,0.013,30,1.854,32,0.377,33,0.991,34,0.896,37,0.352,38,0.896,39,0.119,40,0.011,87,2.574,112,1.422,115,1.469,154,0.01,155,0.01,247,1.972,265,3.122,266,5.22,267,1.557,268,4.204,269,5.688,270,3.783,271,3.588,272,3.744,273,3.744,274,3.744,275,5.22,276,5.22,277,5.22,278,5.22,279,3.776,280,1.981,281,3.744,282,5.22,283,5.22,284,2.88,285,4.125,286,4.125]],["title/interfaces/CanComponentDeactivate.html",[287,0.734,288,3.008]],["body/interfaces/CanComponentDeactivate.html",[2,0.177,3,0.177,8,0.138,10,1.392,19,0.323,20,0.727,28,1.001,29,0.013,32,0.436,37,0.41,38,1.036,39,0.164,40,0.009,154,0.011,155,0.011,232,2.279,241,3.56,245,3.235,246,3.275,247,2.279,287,1.276,288,5.586,289,5.27,290,4.092,291,5.27,292,5.993,293,2.813,294,6.277,295,1.945,296,4.092,297,5.27,298,6.277]],["title/guards/CanDeactivateGuard.html",[296,2.802,299,3.265]],["body/guards/CanDeactivateGuard.html",[0,0.85,2,0.173,3,0.173,8,0.135,10,1.36,19,0.315,22,1.743,25,0.76,28,1.176,29,0.013,32,0.426,37,0.406,38,1.012,39,0.162,40,0.009,106,0.85,154,0.01,155,0.01,232,2.227,243,0.85,244,0.85,245,3.323,246,3.2,247,2.227,287,1.047,288,5.738,289,6.19,290,4.806,291,5.15,292,5.87,293,2.774,294,6.637,295,2.057,296,4.806,297,6.19,298,6.19,299,4.658,300,5.896]],["title/components/ChangeOfConditionsComponent.html",[0,0.596,110,1.273]],["body/components/ChangeOfConditionsComponent.html",[0,0.983,1,0.851,2,0.127,3,0.084,4,0.972,5,0.94,6,0.972,7,0.772,8,0.065,10,0.996,11,1.901,12,0.972,13,2.77,14,2.102,15,1.632,17,1.632,19,0.351,20,0.437,22,1.062,23,2.488,24,0.82,25,1.025,28,1.292,29,0.013,30,1.706,31,1.171,32,0.508,33,0.82,34,1.325,37,0.413,38,0.49,39,0.065,40,0.004,47,0.965,49,1.632,71,2.598,73,2.14,74,2.345,75,1.892,77,2.14,78,1.817,82,1.414,86,1.632,87,2.572,92,1.625,96,0.702,97,1.471,98,1.169,99,1.422,100,1.979,101,0.972,106,0.947,107,0.972,108,0.879,109,0.972,110,1.791,111,1.799,112,1.611,113,0.972,114,0.879,115,1.467,116,0.972,117,0.879,118,0.94,119,0.972,120,0.879,121,0.972,122,0.879,123,0.909,124,1.471,125,0.851,126,0.972,127,0.879,128,0.972,129,0.879,130,0.879,131,0.972,132,0.972,133,0.879,134,0.972,135,0.851,136,0.972,137,0.879,138,0.772,139,1.471,140,0.879,141,1.331,142,0.879,143,0.972,144,0.879,145,0.972,146,0.851,147,0.972,148,0.851,149,0.972,150,0.879,151,0.972,152,0.879,153,0.972,154,0.006,155,0.006,165,2.345,168,2.93,172,1.478,182,3.495,184,1.471,202,0.637,213,0.748,226,1.203,243,0.838,244,0.838,265,3.416,267,2.035,268,3.481,270,2.846,271,2.475,272,3.381,273,3.255,274,3.381,279,2.475,280,1.132,281,2.14,284,1.25,301,7.64,302,6.674,303,2.854,304,2.238,305,2.051,306,5.212,307,4.32,308,4.32,309,4.32,310,4.32,311,3.755,312,4.103,313,3.144,314,3.278,315,2.255,316,5.191,317,3.24,318,2.76,319,2.197,320,3.155,321,2.649,322,3.495,323,4.973,324,3.701,325,2.854,326,2.854,327,2.854,328,2.854,329,5.077,330,2.854,331,5.212,332,6.244,333,2.854,334,2.14,335,0.49,336,2.854,337,2.854,338,2.854,339,2.854,340,2.854,341,2.854,342,1.478,343,1.478,344,1.478,345,1.478,346,1.478,347,4.593,348,2.854,349,1.478,350,2.493,351,2.854,352,4.593,353,2.077,354,1.549,355,1.628,356,1.628,357,1.628,358,1.716,359,2.255,360,2.493,361,1.549,362,1.355,363,3.319,364,2.493,365,2.077,366,2.077,367,1.078,368,1.078,369,1.478,370,3.773,371,1.778,372,1.478,373,1.817,374,1.478,375,1.478,376,2.051,377,2.345,378,2.493,379,1.713,380,4.32,381,2.854,382,2.854,383,2.854,384,2.854,385,2.854,386,2.854,387,2.854,388,2.854,389,2.854,390,2.854,391,2.854,392,1.716,393,2.854,394,2.854,395,2.854,396,1.25,397,1.478,398,1.892,399,1.716,400,4.32,401,2.854,402,1.414,403,2.077,404,2.493,405,2.854,406,2.854,407,2.345,408,2.345,409,3.773,410,3.773,411,7.333,412,3.773,413,5.077,414,2.93,415,2.751,416,2.255,417,3.413,418,3.413,419,2.077,420,2.077,421,2.854,422,1.935,423,2.493]],["title/components/ChartsComponent.html",[0,0.596,114,1.273]],["body/components/ChartsComponent.html",[0,0.983,1,0.851,2,0.127,3,0.084,4,0.972,5,0.94,6,0.972,7,0.772,8,0.065,10,0.996,11,1.901,12,0.972,13,2.77,14,2.102,15,1.632,17,1.632,19,0.153,20,0.437,22,1.062,23,2.488,24,0.82,25,1.056,28,1.302,29,0.013,30,1.84,31,0.742,32,0.557,33,0.542,34,0.895,35,2.283,37,0.392,38,0.49,39,0.065,40,0.004,43,2.197,45,1.554,47,1.467,75,1.25,87,2.572,92,1.625,96,0.702,97,1.471,98,1.169,99,1.422,100,1.979,101,0.972,106,0.751,107,0.972,108,0.879,109,0.972,110,0.879,111,1.625,112,0.934,113,0.972,114,1.791,115,1.569,116,0.972,117,0.879,118,0.94,119,0.972,120,0.879,121,0.972,122,0.879,123,0.909,124,1.471,125,0.851,126,0.972,127,0.879,128,0.972,129,0.879,130,0.879,131,0.972,132,0.972,133,0.879,134,0.972,135,0.851,136,0.972,137,0.879,138,0.772,139,1.471,140,0.879,141,1.331,142,0.879,143,0.972,144,0.879,145,0.972,146,0.851,147,0.972,148,0.851,149,0.972,150,0.879,151,0.972,152,0.879,153,0.972,154,0.006,155,0.006,160,2.751,164,1.935,175,2.493,183,4.118,213,0.748,226,1.203,232,1.969,243,0.411,244,0.838,247,1.078,262,1.041,265,3.416,268,3.481,269,4.118,270,3.202,271,3.24,272,3.381,273,3.381,274,3.381,279,2.475,280,1.132,281,2.14,284,1.25,285,2.255,286,2.255,304,2.238,317,3.24,342,1.478,343,1.478,344,1.478,345,1.478,346,1.478,349,1.478,361,1.549,362,1.355,367,1.078,368,1.632,369,1.478,371,1.411,372,1.478,374,1.478,375,1.478,392,1.716,396,1.25,397,1.478,398,1.25,402,1.414,424,2.854,425,4.118,426,7.64,427,5.212,428,4.32,429,5.813,430,5.813,431,5.813,432,5.813,433,5.813,434,5.813,435,3.701,436,5.813,437,4.593,438,5.813,439,5.813,440,5.813,441,5.813,442,2.255,443,4.782,444,3.701,445,4.32,446,2.854,447,2.854,448,2.854,449,2.854,450,2.854,451,2.854,452,2.854,453,2.854,454,2.854,455,2.854,456,2.854,457,2.854,458,7.194,459,2.854,460,2.854,461,2.854,462,2.854,463,2.854,464,2.493,465,2.255,466,2.077,467,4.553,468,3.773,469,3.773,470,2.854,471,4.32,472,2.854,473,4.32,474,2.854,475,4.32,476,2.854,477,2.077,478,2.493,479,2.493,480,2.854,481,2.854,482,2.854,483,2.854,484,2.854,485,2.854,486,2.854,487,2.854,488,4.32,489,3.747,490,5.212,491,4.32,492,2.854,493,2.854,494,2.854,495,2.854,496,2.255,497,2.854,498,5.212,499,2.854,500,2.854,501,2.854,502,2.854,503,2.854,504,2.493,505,2.854,506,2.854,507,2.854,508,2.493,509,2.854,510,2.854,511,2.854,512,2.854,513,1.041,514,2.854,515,4.32,516,4.32,517,2.854,518,4.32,519,2.493,520,3.773,521,2.854,522,5.813,523,4.32,524,1.754,525,4.32,526,4.32,527,4.32,528,3.773,529,4.32,530,2.854,531,3.144,532,2.493,533,3.413,534,2.255,535,2.854,536,2.854,537,1.817,538,2.854,539,2.854,540,2.854,541,2.854,542,2.854,543,2.854,544,2.854,545,2.854,546,2.854,547,2.854,548,2.854,549,2.854]],["title/injectables/ClockService.html",[293,1.618,550,2.485]],["body/injectables/ClockService.html",[2,0.09,3,0.09,8,0.07,19,0.164,20,0.462,22,1.122,24,0.866,25,1.042,28,1.273,29,0.013,30,1.812,31,1.317,32,0.565,33,1.034,34,0.935,37,0.384,38,0.527,39,0.104,40,0.004,45,2.352,49,2.641,92,2.008,106,0.658,141,0.946,154,0.007,155,0.007,202,1.347,213,0.805,243,0.658,244,0.658,245,2.542,247,1.16,262,2.199,270,3.274,279,1.458,293,2.132,295,1.632,317,3.206,362,1.458,367,1.16,368,1.16,371,2.311,376,3.06,379,1.087,396,1.345,398,2.958,399,4.061,402,3.346,444,3.84,550,2.745,551,2.683,552,4.764,553,5.676,554,6.03,555,5.676,556,6.274,557,5.628,558,6.03,559,1.748,560,6.03,561,5.335,562,3.987,563,5.898,564,5.898,565,4.32,566,2.713,567,4.061,568,6.03,569,1.847,570,4.564,571,3.071,572,3.071,573,3.071,574,3.987,575,3.071,576,3.071,577,3.071,578,3.071,579,3.071,580,3.071,581,3.987,582,3.987,583,3.071,584,3.071,585,3.071,586,3.071,587,4.564,588,3.071,589,4.564,590,4.304,591,3.322,592,3.071,593,3.071,594,3.987,595,3.071,596,4.564,597,2.235,598,2.683,599,2.235,600,1.847,601,3.071,602,1.591,603,1.082,604,3.071,605,4.758,606,1.591,607,6.274,608,6.701,609,4.564,610,4.564,611,2.08,612,6.03,613,4.758,614,7.183,615,3.071,616,5.447,617,3.071,618,3.071,619,3.071,620,3.071,621,3.071,622,3.071,623,3.071,624,3.071,625,3.071,626,3.071,627,2.683,628,6.753,629,1.591,630,3.071,631,3.071,632,4.564,633,6.444,634,3.071,635,2.683,636,1.685,637,5.628,638,3.84,639,2.937,640,1.956,641,4.564,642,5.447,643,4.564,644,4.564,645,3.071,646,4.564,647,3.071]],["title/interfaces/Counts.html",[287,0.734,648,1.883]],["body/interfaces/Counts.html",[2,0.174,3,0.174,8,0.136,19,0.318,20,0.72,29,0.013,31,1.459,32,0.514,39,0.174,45,2.357,47,1.59,154,0.01,155,0.01,287,1.404,335,1.309,513,2.167,537,3.783,567,3.573,648,3.683,649,4.694,650,3.783,651,6.245,652,6.245,653,4.828,654,4.324,655,4.029,656,4.324,657,4.029,658,2.821,659,4.324]],["title/modules/DemandModule.html",[185,1.232,196,2.802]],["body/modules/DemandModule.html",[2,0.182,3,0.182,8,0.142,29,0.013,37,0.415,38,1.064,39,0.167,40,0.009,96,1.524,154,0.011,155,0.011,185,2.177,187,3.071,188,3.963,189,3.364,190,3.4,196,5.618,201,3.467,202,1.384,203,3.211,205,3.617,324,5.275,660,5.414,661,5.414,662,6.198,663,6.198]],["title/injectables/DemandService.html",[293,1.618,324,2.631]],["body/injectables/DemandService.html",[2,0.088,3,0.088,8,0.069,19,0.341,20,0.454,22,1.103,24,0.569,25,1.005,28,1.348,29,0.013,30,1.495,31,1.465,32,0.536,33,0.851,34,0.77,37,0.358,38,0.515,39,0.069,40,0.004,43,1.891,49,2.029,61,3.179,92,2.157,106,1.028,118,2.204,154,0.007,155,0.007,202,1.331,226,1.265,232,1.133,241,2.222,243,1.028,244,1.028,245,2.264,247,1.133,250,1.628,255,2.333,262,1.094,267,1.996,293,2.103,295,1.214,319,2.512,320,3.235,323,5.432,324,2.856,329,5.847,334,3.783,358,1.804,365,2.183,367,1.133,368,1.133,371,2.155,379,1.519,513,2.441,524,2.181,534,6.032,559,1.934,565,3.23,582,3.917,602,1.554,611,1.367,664,3,665,3.757,666,4.229,667,5.96,668,4.485,669,5.96,670,4.485,671,4.485,672,5.96,673,5.96,674,5.96,675,4.485,676,7.133,677,3,678,4.485,679,4.485,680,4.264,681,7.634,682,3,683,5.371,684,2.782,685,3.468,686,4.031,687,3,688,3.235,689,4.485,690,3,691,4.485,692,3,693,3,694,3,695,6.938,696,3,697,3,698,4.485,699,3.818,700,3,701,3.264,702,4.485,703,2.558,704,5.96,705,4.485,706,3,707,3.544,708,4.485,709,3,710,4.485,711,3,712,2.558,713,3.305,714,3,715,2.222,716,1.554,717,2.183,718,5.96,719,2.044,720,3,721,3,722,3,723,1.91,724,5.371,725,3,726,3,727,3,728,3.324,729,2.434,730,3,731,3,732,5.96,733,4.485,734,3,735,1.628,736,3,737,3,738,3,739,3,740,4.485,741,5.96,742,3]],["title/classes/Edge.html",[40,0.006,513,1.507]],["body/classes/Edge.html",[2,0.051,3,0.109,7,0.466,8,0.039,19,0.092,20,0.377,22,0.71,24,0.327,25,0.97,28,1.271,29,0.013,30,1.401,31,1.444,32,0.543,33,0.707,34,1.043,35,0.755,37,0.281,39,0.139,40,0.007,43,1.836,46,0.785,47,1.083,59,0.892,61,3.132,65,0.892,86,1.09,92,2.151,98,0.781,106,0.628,138,0.781,154,0.004,155,0.004,184,1.99,226,0.726,231,0.982,232,1.832,239,0.935,243,0.803,244,0.699,245,1.836,247,0.651,250,1.566,255,2.981,262,1.358,267,0.861,287,0.774,295,1.508,305,1.37,314,2.664,319,0.726,321,1.315,334,2.6,335,1.21,355,0.982,356,0.982,367,0.651,368,0.651,371,1.582,379,1.7,407,1.566,408,2.364,489,2.993,513,2.833,524,2.263,559,2.017,602,0.892,603,0.607,629,2.512,648,1.697,658,2.068,665,2.491,666,2.021,680,2.848,684,1.495,685,3.738,686,1.566,688,3.956,699,0.982,703,0.982,712,1.646,713,0.892,715,1.845,716,0.892,719,1.697,728,2.938,729,3.581,735,0.935,743,0.982,744,2.364,745,2.619,746,3.758,747,3.155,748,3.465,749,3.499,750,3.155,751,3.486,752,2.619,753,3.654,754,2.619,755,2.766,756,3.173,757,3.839,758,3.155,759,2.619,760,2.886,761,3.763,762,2.239,763,2.886,764,2.619,765,2.619,766,1.735,767,1.723,768,1.723,769,1.723,770,1.723,771,3.155,772,2.124,773,1.735,774,1.723,775,1.723,776,1.723,777,2.124,778,1.735,779,1.735,780,1.315,781,1.723,782,1.723,783,1.723,784,2.124,785,2.848,786,1.723,787,1.723,788,1.566,789,1.723,790,1.495,791,1.723,792,1.723,793,1.723,794,1.735,795,1.723,796,1.735,797,1.723,798,1.315,799,2.512,800,2.021,801,1.735,802,2.619,803,2.256,804,1.723,805,1.735,806,1.723,807,1.566,808,1.723,809,1.723,810,2.619,811,1.735,812,0.95,813,0.982,814,2.718,815,3.179,816,3.01,817,0.935,818,0.982,819,3.025,820,1.646,821,1.735,822,1.036,823,1.036,824,0.982,825,1.036,826,0.982,827,1.036,828,2.484,829,1.036,830,1.036,831,1.036,832,1.036,833,1.036,834,1.036,835,1.036,836,0.982,837,0.982,838,2.239,839,0.935,840,1.036,841,1.036,842,1.036,843,1.735,844,1.735,845,1.036,846,1.036,847,1.036,848,1.735,849,1.735,850,1.735,851,1.036,852,1.036,853,1.036,854,1.566,855,2.239,856,2.619,857,2.619,858,1.646,859,1.735,860,2.619,861,2.239,862,2.619,863,2.619,864,1.036,865,1.735,866,1.735,867,1.735,868,1.036,869,1.735,870,1.036,871,1.735,872,1.036,873,1.036,874,1.036,875,1.036,876,2.766,877,0.982,878,0.935,879,1.036,880,0.982,881,1.735,882,1.036,883,1.036,884,1.631,885,1.036,886,2.239,887,1.036,888,1.036,889,1.735,890,1.036,891,1.036,892,1.036,893,1.036,894,1.036,895,0.982,896,1.735,897,1.735,898,1.036,899,1.735,900,1.036,901,1.036,902,1.036,903,1.036,904,1.036,905,1.036,906,1.036,907,1.036,908,1.036,909,1.036,910,1.735,911,1.036,912,1.036,913,1.036,914,1.495,915,1.036,916,2.239,917,2.239,918,1.036,919,2.239,920,1.036,921,1.036,922,1.036,923,1.735,924,1.036,925,1.036,926,1.036,927,1.036,928,1.036,929,1.036,930,1.036,931,1.735,932,1.036,933,1.646,934,1.036,935,1.036,936,1.036,937,0.935,938,2.124,939,0.982,940,1.036,941,1.735,942,1.735,943,1.036,944,1.735,945,1.735,946,1.036,947,1.036,948,1.036,949,2.239,950,1.036,951,1.036,952,2.239,953,1.036,954,0.982,955,1.036,956,1.036,957,1.036,958,1.036,959,1.036,960,0.892,961,2.021,962,1.036,963,1.566,964,1.036,965,1.036,966,1.036,967,1.646,968,1.036,969,1.036,970,1.036,971,1.735,972,1.036,973,1.036,974,0.982,975,0.892,976,1.036,977,1.036,978,1.036,979,1.036,980,1.036,981,0.892,982,1.036,983,1.036,984,0.853,985,1.036,986,1.036,987,1.036,988,1.036,989,1.036,990,1.036,991,1.036,992,1.036,993,1.036,994,1.036,995,1.036,996,1.036,997,1.036,998,1.036,999,1.036,1000,0.982,1001,0.982,1002,1.036,1003,0.982,1004,0.982,1005,0.853,1006,1.036,1007,1.735,1008,1.036,1009,0.982,1010,1.036,1011,0.818,1012,0.935,1013,1.036,1014,1.036,1015,1.036,1016,1.036,1017,1.036,1018,1.036,1019,1.036,1020,1.036,1021,0.818,1022,1.036,1023,1.036]],["title/classes/EnumValues.html",[40,0.006,366,3.008]],["body/classes/EnumValues.html",[2,0.152,3,0.152,8,0.119,19,0.278,22,1.611,25,0.845,28,1.366,29,0.013,31,1.335,32,0.545,34,0.891,39,0.178,40,0.01,49,2.475,92,1.832,106,0.945,154,0.01,155,0.01,241,3.558,243,1.035,244,0.945,335,1.384,366,4.77,524,2.661,559,1.561,591,4.77,715,2.573,728,2.987,1000,3.738,1021,2.465,1024,4.102,1025,6.275,1026,6.553,1027,6.553,1028,6.553,1029,5.192,1030,6.553,1031,5.192,1032,7.542,1033,4.535,1034,5.192,1035,5.192,1036,5.192,1037,5.192,1038,4.535,1039,6.588,1040,5.724,1041,5.724,1042,3.521,1043,4.535,1044,6.553,1045,5.724,1046,6.553,1047,5.724,1048,4.102,1049,4.535,1050,6.553,1051,5.192,1052,5.192,1053,5.192]],["title/components/EstimateOfDemandComponent.html",[0,0.596,117,1.273]],["body/components/EstimateOfDemandComponent.html",[0,0.953,1,0.779,2,0.119,3,0.077,4,0.89,5,0.86,6,0.89,7,0.707,8,0.06,10,0.931,11,1.8,12,0.89,13,2.738,14,2.038,15,1.525,17,1.525,19,0.297,20,0.409,22,0.993,23,2.412,24,0.767,25,1.017,28,1.258,29,0.013,30,1.78,31,1.136,32,0.507,33,0.496,34,0.693,37,0.39,38,0.449,39,0.06,40,0.004,47,0.584,71,2.428,73,2.001,74,2.192,75,1.769,77,2.001,78,1.664,82,1.295,86,1.525,87,2.484,92,1.91,96,0.643,97,1.375,98,1.093,99,1.329,100,1.89,101,0.89,106,0.953,107,0.89,108,0.805,109,0.89,110,0.805,111,1.763,112,1.067,113,0.89,114,0.805,115,1.417,116,0.89,117,1.711,118,2.25,119,0.89,120,0.805,121,0.89,122,0.805,123,0.832,124,1.375,125,0.779,126,0.89,127,0.805,128,0.89,129,0.805,130,0.805,131,0.89,132,0.89,133,0.805,134,0.89,135,0.779,136,0.89,137,0.805,138,0.707,139,1.375,140,0.805,141,1.521,142,0.805,143,0.89,144,0.805,145,0.89,146,0.779,147,0.89,148,0.779,149,0.89,150,0.805,151,0.89,152,0.805,153,0.89,154,0.006,155,0.006,165,2.192,168,2.739,172,1.354,182,2.428,184,1.375,202,0.584,213,0.685,226,1.102,243,0.865,244,0.865,255,2.173,265,3.33,268,3.385,270,2.735,271,2.343,272,3.277,273,3.277,274,3.277,279,2.343,280,1.059,281,2.001,284,1.145,304,2.092,311,3.609,312,3.816,313,2.939,314,3.196,315,2.065,316,5.013,317,3.141,318,2.636,319,2.34,320,3.014,323,2.739,334,2.751,335,1.204,342,1.354,343,1.354,344,1.354,345,1.354,346,1.354,349,1.354,350,2.282,352,5.849,353,2.939,354,1.418,357,1.49,358,1.571,361,1.418,362,1.241,365,1.902,366,1.902,367,0.987,368,0.987,369,1.354,370,4.85,371,1.503,372,1.354,373,1.664,374,1.354,375,1.354,376,2.636,377,1.418,378,2.282,379,1.429,392,1.571,396,1.145,397,1.354,398,1.145,399,3.978,402,1.295,403,1.902,407,2.192,408,2.192,409,3.527,410,3.527,414,2.739,415,2.571,416,2.065,417,3.191,418,3.191,419,1.902,420,1.902,422,1.772,423,2.282,524,1.061,566,1.525,611,2.53,636,1.38,665,2.343,707,4.742,746,3.462,748,4,756,4.156,790,1.354,812,2.25,819,3.888,933,3.167,1054,7.583,1055,6.623,1056,2.613,1057,4.935,1058,4.038,1059,4.038,1060,4.038,1061,4.038,1062,4.038,1063,2.613,1064,2.613,1065,2.613,1066,4.038,1067,2.613,1068,4.038,1069,2.613,1070,4.038,1071,2.613,1072,2.613,1073,2.613,1074,2.613,1075,4.038,1076,2.613,1077,2.613,1078,2.613,1079,2.613,1080,1.739,1081,2.065,1082,2.613,1083,2.613,1084,2.613,1085,4.038,1086,4.038,1087,2.282,1088,2.613,1089,2.613,1090,2.282,1091,4.038,1092,4.038,1093,2.613,1094,1.902,1095,4.038,1096,2.613,1097,2.613,1098,4.935,1099,2.613,1100,4.038,1101,2.282,1102,2.282,1103,4.311,1104,4.038,1105,4.038,1106,4.935,1107,2.613,1108,2.613,1109,2.613,1110,2.613,1111,2.613,1112,2.613,1113,2.613,1114,2.613,1115,2.613,1116,2.613,1117,2.613,1118,2.613,1119,4.038,1120,2.065]],["title/components/FooterComponent.html",[0,0.596,120,1.273]],["body/components/FooterComponent.html",[0,1.077,1,1.364,2,0.177,3,0.134,4,1.557,5,1.988,6,1.557,7,1.238,8,0.105,10,1.392,11,2.465,12,1.557,13,2.905,14,2.477,15,2.28,17,2.28,19,0.244,20,0.611,21,6.705,22,1.484,23,2.621,25,0.779,28,0.759,29,0.013,30,1.348,31,1.16,32,0.33,33,0.868,34,0.785,35,2.645,36,5.273,37,0.323,38,0.785,39,0.105,40,0.007,50,3.994,51,3.994,52,4.094,53,4.094,61,2.171,70,3.101,71,3.631,72,4.77,73,3.349,74,2.482,75,2.003,77,2.266,82,2.266,84,3.277,85,3.101,86,1.727,87,1.79,88,3.994,89,3.994,90,3.994,91,4.77,92,1.688,93,4.584,94,2.912,96,1.124,97,2.056,98,1.634,99,1.988,100,2.448,101,1.557,102,3.613,103,3.613,104,3.613,106,0.87,107,1.557,108,1.409,109,1.557,110,1.409,111,1.864,112,0.989,113,1.557,114,1.409,115,1.669,116,1.557,117,1.409,118,1.505,119,1.557,120,2.215,121,1.557,122,1.409,123,1.456,124,2.056,125,1.364,126,1.557,127,1.409,128,1.557,129,1.409,130,1.409,131,1.557,132,1.557,133,1.409,134,1.557,135,1.364,136,1.557,137,1.409,138,1.238,139,2.056,140,1.409,141,1.409,142,1.409,143,1.557,144,1.409,145,1.557,146,1.364,147,1.557,148,1.364,149,1.557,150,1.409,151,1.557,152,1.409,153,1.557,154,0.009,155,0.009,171,3.994,172,2.369,174,2.608,177,3.328,263,4.394,264,4.77,377,3.277,1120,4.77,1121,4.573,1122,7.473,1123,6.759,1124,6.037,1125,4.573,1126,4.573,1127,3.328,1128,4.573,1129,4.573,1130,4.573]],["title/classes/GoOn.html",[40,0.006,1131,2.243]],["body/classes/GoOn.html",[2,0.144,3,0.144,8,0.112,10,1.805,19,0.374,20,0.64,24,0.932,25,0.902,29,0.013,31,1.201,32,0.611,33,0.932,34,0.843,37,0.338,39,0.182,40,0.011,106,0.708,111,1.864,112,1.062,115,1.096,154,0.009,155,0.009,202,1.65,213,1.287,243,0.708,244,0.708,280,2.114,295,1.329,335,1.399,559,1.941,566,3.047,603,1.729,636,1.372,639,3.714,773,4.442,812,1.616,1131,4.01,1132,2.952,1133,3.945,1134,2.432,1135,6.323,1136,4.909,1137,3.802,1138,1.993,1139,2.8,1140,3.99,1141,3.99,1142,3.99,1143,2.432,1144,3.126,1145,2.952,1146,3.63,1147,2.952,1148,2.952,1149,2.8,1150,2.952,1151,2.952]],["title/components/GoogleMapComponent.html",[0,0.596,122,1.273]],["body/components/GoogleMapComponent.html",[0,0.973,1,1.028,2,0.146,3,0.101,4,1.691,5,2.315,6,1.173,7,0.933,8,0.079,10,1.145,11,2.123,12,1.173,13,2.83,14,2.233,19,0.184,20,0.502,22,1.221,23,2.323,24,0.654,25,1.029,28,0.966,29,0.013,30,1.571,31,1.297,32,0.587,33,1.408,37,0.265,38,0.592,39,0.079,40,0.005,75,3.361,96,0.847,97,1.691,98,1.575,99,1.635,100,2.169,101,1.173,106,0.973,107,1.173,108,1.062,109,1.173,110,1.062,111,1.726,112,1.378,113,1.173,114,1.062,115,1.619,116,1.173,117,1.062,118,1.134,119,1.173,120,1.062,121,1.173,122,1.963,123,1.854,124,1.691,125,1.028,126,1.173,127,1.062,128,1.173,129,1.062,130,1.062,131,1.173,132,1.173,133,1.062,134,1.173,135,1.028,136,1.173,137,1.062,138,0.933,139,1.691,140,1.062,141,1.062,142,1.062,143,1.173,144,1.062,145,1.173,146,1.028,147,1.173,148,1.028,149,1.173,150,1.062,151,1.173,152,1.062,153,1.173,154,0.007,155,0.007,201,3.79,243,0.839,244,0.839,295,1.724,311,4.72,335,1.094,371,1.724,376,2.358,379,0.821,399,2.986,443,5.276,533,3.923,559,1.182,629,2.572,684,2.572,713,2.572,719,1.57,723,4.056,773,2.986,790,2.572,975,3.643,984,2.46,1080,2.95,1146,1.636,1152,8.037,1153,3.446,1154,5.821,1155,4.965,1156,4.965,1157,5.564,1158,5.564,1159,5.564,1160,6.143,1161,5.564,1162,5.564,1163,3.446,1164,4.769,1165,4.965,1166,5.033,1167,3.614,1168,3.446,1169,6.37,1170,3.446,1171,4.965,1172,4.965,1173,3.446,1174,4.965,1175,4.965,1176,3.446,1177,4.965,1178,4.337,1179,3.446,1180,4.636,1181,3.446,1182,3.446,1183,4.965,1184,3.923,1185,3.446,1186,4.965,1187,5.033,1188,3.446,1189,4.337,1190,4.965,1191,3.446,1192,3.446,1193,4.337,1194,3.446,1195,4.965,1196,3.01,1197,3.446,1198,3.446,1199,3.446,1200,3.446,1201,3.446,1202,3.446,1203,3.446,1204,3.446,1205,3.01,1206,3.01,1207,3.01,1208,3.01,1209,3.01,1210,3.01,1211,3.01,1212,3.01,1213,3.01]],["title/classes/Heap.html",[40,0.006,814,2.14]],["body/classes/Heap.html",[2,0.14,3,0.14,8,0.109,19,0.332,20,0.627,22,1.525,25,0.977,28,1.312,29,0.013,30,1.631,31,1.3,32,0.498,33,0.904,34,0.818,37,0.255,39,0.142,40,0.009,47,1.385,106,0.894,154,0.009,155,0.009,167,4.514,184,1.622,243,0.894,244,0.894,255,3.391,267,2.056,287,0.846,371,1.866,379,1.135,513,2.663,559,1.961,701,3.468,728,2.826,746,3.596,814,4.235,816,3.972,878,3.366,884,2.087,914,3.213,960,3.783,961,3.964,963,4.11,981,3.213,1214,6.781,1215,4.161,1216,6.895,1217,6.38,1218,6.202,1219,6.202,1220,4.764,1221,5.417,1222,4.764,1223,4.764,1224,5.417,1225,4.764,1226,5.417,1227,4.764,1228,4.161,1229,5.417,1230,4.161,1231,4.161,1232,4.161,1233,4.161,1234,4.161,1235,4.161,1236,3.764,1237,4.161]],["title/components/HomeComponent.html",[0,0.596,125,1.232]],["body/components/HomeComponent.html",[0,1.007,1,1.124,2,0.205,3,0.111,4,1.283,5,1.24,6,1.283,7,1.02,8,0.086,10,1.22,11,2.23,12,1.283,13,2.856,14,2.378,15,1.998,17,1.998,19,0.201,20,0.535,22,1.301,23,2.418,24,0.715,25,0.855,28,1.1,29,0.013,30,1.481,32,0.382,33,0.715,34,0.647,37,0.354,38,0.647,39,0.086,40,0.006,41,3.369,42,4.18,43,2.795,44,3.851,45,1.978,46,2.411,47,1.481,48,4.18,49,1.998,70,2.555,71,3.677,73,3.461,74,2.045,75,1.65,77,3.03,78,2.399,82,2.621,83,2.742,84,2.045,85,2.555,86,2.638,87,1.475,92,2.157,94,3.894,96,0.926,97,1.801,98,1.655,99,1.742,100,2.258,101,1.283,106,0.881,107,1.283,108,1.161,109,1.283,110,1.161,111,1.772,112,0.815,113,1.283,114,1.161,115,1.56,116,1.283,117,1.161,118,1.24,119,1.283,120,1.161,121,1.283,122,1.161,123,1.2,124,1.801,125,1.978,126,1.283,127,1.161,128,1.283,129,1.161,130,1.161,131,1.283,132,1.283,133,1.161,134,1.283,135,1.124,136,1.283,137,1.161,138,1.02,139,1.801,140,1.161,141,1.161,142,1.161,143,1.283,144,1.161,145,1.283,146,1.124,147,1.283,148,1.124,149,1.283,150,1.161,151,1.283,152,1.161,153,1.283,154,0.008,155,0.008,160,3.369,161,2.977,162,5.341,163,2.742,164,2.555,168,2.555,172,2.741,174,2.149,183,5.24,184,2.378,232,1.423,243,0.543,244,0.543,257,4.621,262,1.929,295,1.655,335,0.908,379,1.663,416,2.977,425,4.832,437,5.24,442,2.977,443,5.272,537,3.369,565,3.182,717,2.742,756,2.045,880,3.018,1011,1.789,1102,3.291,1103,4.621,1180,3.851,1187,2.977,1189,4.621,1238,3.767,1239,6.115,1240,5.291,1241,5.792,1242,5.291,1243,3.767,1244,3.767,1245,5.792,1246,3.291,1247,4.621,1248,3.767,1249,3.767,1250,7.439,1251,3.767,1252,3.767,1253,6.115,1254,3.767,1255,5.291,1256,3.767,1257,5.291,1258,6.631,1259,3.291,1260,3.767,1261,4.832,1262,3.767,1263,4.621,1264,4.621,1265,4.621,1266,3.767,1267,3.767,1268,3.291,1269,3.767,1270,5.291,1271,3.767,1272,5.291,1273,3.767,1274,3.767,1275,3.767,1276,3.291,1277,5.291,1278,5.291,1279,3.767,1280,3.767,1281,3.767,1282,3.767,1283,3.291,1284,3.767,1285,3.767]],["title/components/InfoDialogComponent.html",[0,0.596,127,1.273]],["body/components/InfoDialogComponent.html",[0,1.1,1,1.457,2,0.233,3,0.143,4,2.146,5,1.608,6,1.663,7,1.322,8,0.112,12,1.663,13,2.92,14,2.45,19,0.261,20,0.638,24,1.196,25,0.9,29,0.013,32,0.504,37,0.337,38,0.839,39,0.112,40,0.007,47,1.818,84,2.651,96,1.201,97,2.146,98,1.706,99,2.075,100,2.51,101,1.663,106,1.006,107,1.663,108,1.505,109,1.663,110,1.505,111,1.894,112,1.056,113,1.663,114,1.505,115,1.705,116,1.663,117,1.505,118,1.608,119,1.663,120,1.505,121,1.663,122,1.505,123,1.555,124,2.146,125,1.457,126,1.663,127,2.272,128,1.663,129,1.505,130,1.505,131,1.663,132,1.663,133,1.505,134,1.663,135,1.457,136,1.663,137,1.505,138,1.322,139,2.146,140,1.505,141,1.505,142,1.505,143,1.663,144,1.505,145,1.663,146,1.457,147,1.663,148,1.457,149,1.663,150,1.505,151,1.663,152,1.505,153,1.663,154,0.009,155,0.009,243,0.704,244,0.704,293,1.912,559,1.861,1286,7.373,1287,4.884,1288,5.505,1289,5.079,1290,6.667,1291,4.884,1292,7.816,1293,4.884,1294,6.303,1295,4.884,1296,4.884,1297,4.884,1298,2.937]],["title/interfaces/LinkFlow.html",[287,0.734,680,2.243]],["body/interfaces/LinkFlow.html",[2,0.059,3,0.122,7,0.543,8,0.046,19,0.107,20,0.419,25,0.259,28,1.258,29,0.013,30,1.332,31,1.419,32,0.346,34,1.068,35,0.879,37,0.302,39,0.147,40,0.007,43,1.38,46,0.914,47,1.068,59,1.039,61,2.953,65,1.039,86,0.758,92,2.203,98,0.886,138,0.886,154,0.005,155,0.005,184,2.117,226,0.846,231,1.144,232,1.807,239,1.089,243,0.598,244,0.289,245,2.017,247,0.758,250,1.777,255,3.058,262,1.512,287,0.936,295,1.426,305,0.953,314,2.834,319,0.846,321,0.914,334,2.801,335,1.186,355,1.144,356,1.144,367,0.758,368,0.758,371,1.683,379,1.76,407,1.777,408,2.597,489,2.365,513,2.862,524,2.421,559,1.971,602,1.039,603,0.707,629,2.73,648,1.89,658,1.554,665,2.684,666,2.25,680,2.861,684,1.696,685,3.427,686,1.777,688,3.971,699,1.144,703,1.144,712,1.867,713,1.039,715,1.622,716,1.039,719,1.492,728,3.086,729,3.75,735,1.089,743,1.144,744,2.25,745,2.493,746,3.772,747,2.877,748,3.224,749,3.237,750,2.493,751,3.221,752,1.207,753,3.169,754,1.207,755,1.867,756,2.861,757,3.547,758,2.493,759,1.207,761,3.547,762,1.207,764,1.207,765,1.207,766,1.207,771,2.493,772,1.867,777,1.867,778,1.207,779,1.207,780,0.914,784,1.867,785,2.597,788,1.089,790,1.039,794,1.207,796,1.207,798,0.914,799,2.148,800,1.777,801,1.207,802,1.968,803,1.696,805,1.207,807,1.089,810,3.586,811,1.207,812,0.661,813,1.144,814,2.928,815,3.401,816,3.187,817,1.089,818,1.144,819,3.237,820,1.867,821,2.493,822,1.968,823,1.207,824,1.144,825,1.207,826,1.144,827,1.207,828,2.728,829,1.207,830,1.207,831,1.207,832,1.207,833,1.207,834,1.207,835,1.207,836,1.144,837,1.144,838,2.493,839,1.089,840,1.207,841,1.207,842,1.207,843,1.968,844,1.968,845,1.207,846,1.207,847,1.207,848,1.968,849,1.968,850,1.968,851,1.207,852,1.207,853,1.207,854,1.777,855,2.493,856,2.877,857,2.877,858,1.867,859,1.968,860,2.877,861,2.493,862,2.877,863,2.877,864,1.207,865,1.968,866,1.968,867,1.968,868,1.207,869,1.968,870,1.207,871,1.968,872,1.207,873,1.207,874,1.207,875,1.207,876,3.006,877,1.144,878,1.089,879,1.207,880,1.144,881,1.968,882,1.207,883,1.207,884,1.816,885,1.207,886,2.493,887,1.207,888,1.207,889,1.968,890,1.207,891,1.207,892,1.207,893,1.207,894,1.207,895,1.144,896,1.968,897,1.968,898,1.207,899,1.968,900,1.207,901,1.207,902,1.207,903,1.207,904,1.207,905,1.207,906,1.207,907,1.207,908,1.207,909,1.207,910,1.968,911,1.207,912,1.207,913,1.207,914,1.696,915,1.207,916,2.493,917,2.493,918,1.207,919,2.493,920,1.207,921,1.207,922,1.207,923,1.968,924,1.207,925,1.207,926,1.207,927,1.207,928,1.207,929,1.207,930,1.207,931,1.968,932,1.207,933,1.867,934,1.207,935,1.207,936,1.207,937,1.089,938,2.365,939,1.144,940,1.207,941,1.968,942,1.968,943,1.207,944,1.968,945,1.968,946,1.207,947,1.207,948,1.207,949,2.493,950,1.207,951,1.207,952,2.493,953,1.207,954,1.144,955,1.207,956,1.207,957,1.207,958,1.207,959,1.207,960,1.039,961,2.25,962,1.207,963,1.777,964,1.207,965,1.207,966,1.207,967,1.867,968,1.207,969,1.207,970,1.207,971,1.968,972,1.207,973,1.207,974,1.144,975,1.039,976,1.207,977,1.207,978,1.207,979,1.207,980,1.207,981,1.039,982,1.207,983,1.207,984,0.994,985,1.207,986,1.207,987,1.207,988,1.207,989,1.207,990,1.207,991,1.207,992,1.207,993,1.207,994,1.207,995,1.207,996,1.207,997,1.207,998,1.207,999,1.207,1000,1.144,1001,1.144,1002,1.207,1003,1.144,1004,1.144,1005,0.994,1006,1.207,1007,1.968,1008,1.207,1009,1.144,1010,1.207,1011,0.953,1012,1.089,1013,1.207,1014,1.207,1015,1.207,1016,1.207,1017,1.207,1018,1.207,1019,1.207,1020,1.207,1021,0.953,1022,1.207,1023,1.207]],["title/modules/LocationModule.html",[185,1.232,197,2.802]],["body/modules/LocationModule.html",[2,0.182,3,0.182,8,0.142,29,0.013,37,0.415,38,1.064,39,0.167,40,0.009,96,1.524,154,0.011,155,0.011,185,2.177,187,3.071,188,3.963,189,3.364,190,3.4,197,5.618,201,3.467,202,1.384,203,3.211,205,3.617,1299,5.414,1300,5.414,1301,4.982,1302,6.198,1303,6.198]],["title/injectables/LocationService.html",[293,1.618,1301,2.485]],["body/injectables/LocationService.html",[2,0.128,3,0.128,8,0.1,19,0.233,20,0.592,22,1.735,24,1.254,25,1.014,28,1.305,29,0.013,30,1.576,32,0.51,35,1.913,37,0.353,38,0.75,39,0.1,40,0.006,45,1.746,75,2.565,106,0.844,123,2.103,154,0.01,155,0.009,160,3.728,202,1.576,243,0.844,244,0.844,245,3.447,247,1.649,267,1.302,293,2.586,335,1.134,371,2.051,377,3.831,559,1.979,611,1.99,812,1.438,817,2.37,818,2.49,836,3.339,837,3.339,937,3.178,1001,2.49,1080,2.327,1167,5.633,1301,3.521,1304,4.367,1305,4.626,1306,5.855,1307,5.114,1308,5.114,1309,4.494,1310,5.855,1311,7.143,1312,6.759,1313,7.576,1314,5.855,1315,6.429,1316,7.057,1317,5.855,1318,5.855,1319,5.855,1320,4.367,1321,7.057,1322,5.514,1323,5.219,1324,4.367,1325,5.855,1326,4.367,1327,4.367,1328,5.855,1329,4.367,1330,4.367,1331,7.057,1332,4.367,1333,4.367,1334,6.605,1335,5.855,1336,5.855,1337,4.367,1338,3.814,1339,5.855,1340,3.814,1341,4.367,1342,4.367,1343,5.855,1344,4.367,1345,4.367,1346,4.367,1347,3.814,1348,4.367]],["title/interfaces/Map.html",[287,0.734,1080,1.456]],["body/interfaces/Map.html",[2,0.18,3,0.18,8,0.14,19,0.328,20,0.734,29,0.013,32,0.443,39,0.177,47,1.878,154,0.011,155,0.011,267,1.828,284,2.685,287,1.372,379,1.46,566,3.016,650,3.903,723,3.903,1005,3.828,1080,2.911,1349,4.843]],["title/classes/MapChanged.html",[40,0.006,1350,2.802]],["body/classes/MapChanged.html",[2,0.162,3,0.162,8,0.126,10,1.7,19,0.294,20,0.687,24,1.044,25,0.951,29,0.013,32,0.613,33,1.044,34,0.945,37,0.363,39,0.176,40,0.011,106,0.793,112,1.19,115,1.229,154,0.01,155,0.01,202,1.72,213,1.442,243,0.793,244,0.793,280,2.073,335,1.322,559,1.919,603,1.938,636,1.538,639,3.672,773,4.63,1080,2.876,1133,3.815,1134,2.726,1138,2.234,1146,3.226,1350,5.222,1351,4.005,1352,6.795,1353,5.502,1354,5.369,1355,4.005,1356,4.347,1357,4.005]],["title/components/MapComponent.html",[0,0.596,129,1.273]],["body/components/MapComponent.html",[0,1.012,1,0.928,2,0.135,3,0.091,4,1.059,5,2.133,6,1.059,7,0.842,8,0.071,10,1.063,11,2.001,12,1.059,13,2.798,14,2.163,15,1.74,17,1.74,19,0.166,20,0.466,22,1.133,23,2.56,24,0.875,25,1.053,28,1.222,29,0.013,30,1.736,31,1.334,32,0.556,33,0.59,34,0.534,37,0.4,38,0.534,39,0.071,40,0.005,75,2.972,87,2.656,92,1.288,96,0.765,97,1.569,98,1.247,99,1.517,100,2.066,101,1.059,106,0.791,107,1.059,108,0.958,109,1.059,110,0.958,111,1.672,112,0.996,113,1.059,114,0.958,115,1.61,116,1.059,117,0.958,118,1.024,119,1.059,120,0.958,121,1.059,122,0.958,123,0.991,124,1.569,125,0.928,126,1.059,127,0.958,128,1.059,129,1.87,130,0.958,131,1.059,132,1.059,133,0.958,134,1.059,135,0.928,136,1.059,137,0.958,138,0.842,139,1.569,140,0.958,141,1.42,142,0.958,143,1.059,144,0.958,145,1.059,146,0.928,147,1.059,148,0.928,149,1.059,150,0.958,151,1.059,152,0.958,153,1.059,154,0.007,155,0.007,172,1.611,184,1.059,201,3.076,213,0.815,232,1.175,243,0.448,244,0.664,255,1.804,262,1.134,265,3.496,268,3.572,270,2.952,271,2.606,272,3.479,273,3.479,274,3.479,279,2.606,280,1.439,281,2.283,284,1.363,295,1.836,304,2.387,314,2.765,317,3.221,319,2.313,320,3.293,335,0.942,342,1.611,343,1.611,344,1.611,345,1.611,346,1.611,349,1.611,358,1.871,361,1.688,362,1.477,365,2.264,367,1.175,368,1.175,369,1.611,371,1.485,372,1.611,374,1.611,375,1.611,376,1.477,379,1.307,392,1.871,396,2.018,397,3.514,398,3.158,402,3.572,524,1.871,566,1.74,569,1.871,629,2.387,636,0.869,665,2.188,723,2.934,746,2.188,884,1.363,975,1.611,1021,2.188,1080,2.677,1081,2.458,1157,5.3,1158,5.3,1159,5.3,1160,5.3,1161,5.3,1162,5.3,1164,4.115,1166,3.641,1167,3.995,1178,4.794,1184,4.336,1196,2.717,1205,4.794,1206,2.717,1207,2.717,1208,2.717,1209,2.717,1210,2.717,1211,2.717,1212,2.717,1213,4.794,1241,4.025,1358,3.111,1359,3.641,1360,3.641,1361,5.488,1362,4.608,1363,4.608,1364,3.111,1365,3.111,1366,3.111,1367,3.111,1368,3.111,1369,3.111,1370,3.111,1371,3.111,1372,3.111,1373,3.111,1374,3.111,1375,3.111,1376,3.111,1377,2.458,1378,4.025,1379,3.111,1380,3.111,1381,3.111,1382,3.125,1383,3.111,1384,4.608,1385,4.608,1386,4.608,1387,3.111,1388,4.608,1389,2.264,1390,2.717,1391,3.111,1392,3.111,1393,4.608,1394,3.111,1395,3.111,1396,3.111,1397,3.111,1398,3.111,1399,3.111,1400,2.458,1401,3.111,1402,3.111,1403,3.111,1404,3.111,1405,3.111,1406,3.111,1407,3.111,1408,4.608,1409,3.111,1410,3.111,1411,3.111,1412,4.608,1413,3.111,1414,3.111]],["title/interfaces/MapState.html",[287,0.734,1415,3.008]],["body/interfaces/MapState.html",[2,0.166,3,0.166,8,0.129,19,0.301,20,0.698,28,1.237,29,0.013,32,0.407,33,1.07,37,0.398,39,0.178,115,1.259,154,0.01,155,0.01,241,2.794,267,1.681,280,1.478,287,1.225,379,1.643,396,2.47,398,3.022,611,2.57,636,2.294,1080,3.005,1138,2.289,1354,4.455,1355,4.104,1356,4.455,1357,5.021,1415,5.974,1416,4.455,1417,4.678,1418,4.455,1419,4.455,1420,5.638,1421,4.925,1422,3.06,1423,4.925,1424,6.898,1425,4.455,1426,5.45,1427,5.638,1428,5.638,1429,4.925]],["title/modules/MaterialModule.html",[185,1.232,1430,2.631]],["body/modules/MaterialModule.html",[2,0.173,3,0.173,8,0.135,29,0.013,37,0.421,38,1.012,39,0.162,40,0.009,63,4.291,154,0.01,155,0.01,185,1.758,205,3.511,208,4.658,209,4.291,379,1.404,1298,3.545,1430,5.136,1431,5.15,1432,6.19,1433,6.19,1434,6.19,1435,7.087,1436,6.19,1437,6.19,1438,6.19,1439,6.19,1440,6.19,1441,6.19,1442,6.19,1443,6.19,1444,6.19,1445,6.19,1446,6.19,1447,6.19,1448,6.19,1449,7.599,1450,5.896,1451,7.087,1452,5.896,1453,5.896,1454,5.896]],["title/interfaces/Member.html",[287,0.734,828,2.357]],["body/interfaces/Member.html",[2,0.059,3,0.121,7,0.542,8,0.046,19,0.107,20,0.419,25,0.258,28,1.258,29,0.013,30,1.33,31,1.414,32,0.449,34,0.904,35,0.877,37,0.302,39,0.147,40,0.007,43,1.377,46,0.912,47,1.067,59,1.037,61,2.95,65,1.037,86,0.756,92,2.202,98,0.884,138,0.884,154,0.005,155,0.005,184,2.115,226,0.844,231,1.141,232,1.804,239,1.086,243,0.597,244,0.288,245,2.013,247,0.756,250,1.773,255,3.057,262,1.509,267,0.597,287,0.935,295,1.425,305,0.95,314,2.831,319,0.844,321,0.912,334,2.798,335,1.255,355,1.141,356,1.141,367,0.756,368,0.756,371,1.681,379,1.759,407,1.773,408,2.593,489,2.361,513,2.861,524,2.419,559,1.971,602,1.037,603,0.705,629,2.726,648,1.886,658,1.551,665,2.681,666,2.246,680,2.246,684,1.692,685,3.424,686,1.773,688,3.968,699,1.141,703,1.141,712,1.863,713,1.037,715,1.618,716,1.037,719,1.489,728,3.084,729,3.747,735,1.086,743,1.141,744,2.246,745,2.489,746,3.77,747,2.489,748,3.22,749,3.233,750,2.489,751,3.218,752,1.203,753,3.165,754,1.203,755,1.863,756,2.857,757,3.543,758,2.489,759,1.203,761,3.543,762,1.203,764,1.203,765,1.203,766,1.203,771,2.489,772,1.863,777,1.863,778,1.203,779,1.203,780,0.912,784,1.863,785,2.593,788,1.086,790,1.037,794,1.203,796,1.203,798,0.912,799,2.144,800,1.773,801,1.203,802,1.964,803,1.692,805,1.203,807,1.086,810,2.489,811,1.203,812,0.659,813,1.141,814,2.925,815,3.397,816,3.184,817,1.086,818,1.141,819,3.233,820,1.863,821,1.964,822,1.203,823,1.203,824,1.141,825,1.203,826,1.141,827,1.964,828,3.22,829,2.872,830,2.872,831,1.203,832,1.203,833,1.203,834,1.203,835,1.203,836,1.141,837,1.141,838,2.489,839,1.086,840,1.203,841,1.203,842,1.203,843,1.964,844,1.964,845,1.203,846,1.203,847,1.203,848,1.964,849,1.964,850,1.964,851,1.203,852,1.203,853,1.203,854,1.773,855,2.489,856,2.872,857,2.872,858,1.863,859,1.964,860,2.872,861,2.489,862,2.872,863,2.872,864,1.203,865,1.964,866,1.964,867,1.964,868,1.203,869,1.964,870,1.203,871,1.964,872,1.203,873,1.203,874,1.203,875,1.203,876,3.002,877,1.141,878,1.086,879,1.203,880,1.141,881,1.964,882,1.203,883,1.203,884,1.813,885,1.203,886,2.489,887,1.203,888,1.203,889,1.964,890,1.203,891,1.203,892,1.203,893,1.203,894,1.203,895,1.141,896,1.964,897,1.964,898,1.203,899,1.964,900,1.203,901,1.203,902,1.203,903,1.203,904,1.203,905,1.203,906,1.203,907,1.203,908,1.203,909,1.203,910,1.964,911,1.203,912,1.203,913,1.203,914,1.692,915,1.203,916,2.489,917,2.489,918,1.203,919,2.489,920,1.203,921,1.203,922,1.203,923,1.964,924,1.203,925,1.203,926,1.203,927,1.203,928,1.203,929,1.203,930,1.203,931,1.964,932,1.203,933,1.863,934,1.203,935,1.203,936,1.203,937,1.086,938,2.361,939,1.141,940,1.203,941,1.964,942,1.964,943,1.203,944,1.964,945,1.964,946,1.203,947,1.203,948,1.203,949,2.489,950,1.203,951,1.203,952,2.489,953,1.203,954,1.141,955,1.203,956,1.203,957,1.203,958,1.203,959,1.203,960,1.037,961,2.246,962,1.203,963,1.773,964,1.203,965,1.203,966,1.203,967,1.863,968,1.203,969,1.203,970,1.203,971,1.964,972,1.203,973,1.203,974,1.141,975,1.037,976,1.203,977,1.203,978,1.203,979,1.203,980,1.203,981,1.037,982,1.203,983,1.203,984,0.992,985,1.203,986,1.203,987,1.203,988,1.203,989,1.203,990,1.203,991,1.203,992,1.203,993,1.203,994,1.203,995,1.203,996,1.203,997,1.203,998,1.203,999,1.203,1000,1.141,1001,1.141,1002,1.203,1003,1.141,1004,1.141,1005,0.992,1006,1.203,1007,1.964,1008,1.203,1009,1.141,1010,1.203,1011,0.95,1012,1.086,1013,1.203,1014,1.203,1015,1.203,1016,1.203,1017,1.203,1018,1.203,1019,1.203,1020,1.203,1021,0.95,1022,1.203,1023,1.203]],["title/components/MessageArchivedComponent.html",[0,0.596,130,1.273]],["body/components/MessageArchivedComponent.html",[0,1.112,1,1.51,2,0.189,3,0.149,4,2.196,5,1.667,6,1.724,7,1.37,8,0.116,12,1.724,13,2.928,14,2.471,19,0.271,20,0.652,24,0.961,25,0.832,29,0.013,32,0.466,37,0.345,38,0.869,39,0.116,40,0.007,47,1.813,84,2.748,96,1.245,97,2.196,98,1.746,99,2.123,100,2.544,101,1.724,106,1.023,107,1.724,108,1.56,109,1.724,110,1.56,111,1.909,112,1.095,113,1.724,114,1.56,115,1.724,116,1.724,117,1.56,118,1.667,119,1.724,120,1.56,121,1.724,122,1.56,123,1.612,124,2.196,125,1.51,126,1.724,127,1.56,128,1.724,129,1.56,130,2.303,131,2.417,132,1.724,133,1.56,134,1.724,135,1.51,136,1.724,137,1.56,138,1.37,139,2.196,140,1.56,141,1.56,142,1.56,143,1.724,144,1.56,145,1.724,146,1.51,147,1.724,148,1.51,149,1.724,150,1.56,151,1.724,152,1.56,153,1.724,154,0.009,155,0.009,243,0.73,244,0.73,293,1.982,559,1.69,1298,3.045,1455,7.098,1456,5.063,1457,6.45,1458,5.063,1459,5.063,1460,5.063,1461,5.063,1462,5.063,1463,5.063]],["title/modules/NetworkModule.html",[185,1.232,198,2.802]],["body/modules/NetworkModule.html",[2,0.178,3,0.178,8,0.139,29,0.013,37,0.434,38,1.041,39,0.165,40,0.009,96,1.491,154,0.011,155,0.011,185,2.149,187,3.004,188,3.911,189,3.29,190,3.368,198,5.692,201,3.421,202,1.354,203,3.14,205,3.57,320,4.474,1464,5.295,1465,5.295,1466,5.295,1467,5.59,1468,6.062,1469,6.062,1470,6.062]],["title/classes/Node.html",[40,0.006,746,1.962]],["body/classes/Node.html",[2,0.055,3,0.116,7,0.509,8,0.043,19,0.101,20,0.401,24,0.357,25,0.874,28,1.242,29,0.013,30,1.295,31,1.423,32,0.507,33,0.966,34,1.111,35,0.824,37,0.293,39,0.144,40,0.007,43,1.309,46,1.415,47,1.028,59,0.974,61,2.878,65,0.974,86,0.71,92,2.191,98,0.84,106,0.271,138,0.84,154,0.005,155,0.005,184,2.064,226,0.793,231,1.073,232,1.738,239,1.685,243,0.663,244,0.447,245,1.939,247,0.71,250,1.685,255,3.042,262,1.445,267,0.561,287,0.817,295,1.378,305,0.893,314,2.762,319,0.793,321,0.857,334,2.716,335,1.205,355,1.073,356,1.073,367,0.71,368,0.71,371,1.641,379,1.735,407,1.685,408,2.497,489,3.126,513,2.881,524,2.354,559,2.001,602,0.974,603,0.663,629,2.637,648,2.498,658,1.474,665,2.603,666,2.151,680,2.151,684,1.608,685,3.353,686,1.685,688,3.911,699,1.073,703,1.073,712,1.77,713,0.974,715,1.538,716,0.974,719,1.415,728,3.024,729,3.68,735,1.021,743,1.073,744,2.151,745,2.384,746,3.765,747,2.384,748,3.126,749,3.147,750,3.296,751,3.14,752,1.131,753,3.062,754,1.131,755,1.77,756,2.764,757,3.938,758,2.384,759,1.131,761,3.457,762,1.131,764,1.131,765,1.131,766,1.131,771,2.384,772,1.77,773,1.867,777,1.77,778,1.131,779,1.131,780,0.857,784,1.77,785,2.497,788,1.021,790,0.974,794,1.131,796,1.131,798,0.857,799,2.053,800,1.685,801,1.131,802,1.867,803,1.608,805,1.131,807,1.021,810,2.384,811,1.131,812,0.619,813,1.073,814,2.839,815,3.457,816,3.207,817,1.021,818,1.073,819,3.147,820,1.77,821,1.867,822,1.131,823,1.131,824,1.073,825,1.131,826,1.073,827,1.131,828,2.624,829,1.131,830,1.131,831,1.867,832,1.867,833,1.867,834,1.867,835,1.867,836,1.77,837,1.77,838,3.487,839,2.497,840,2.766,841,2.766,842,2.766,843,1.867,844,1.867,845,1.867,846,1.131,847,1.131,848,1.867,849,1.867,850,1.867,851,1.131,852,1.131,853,1.131,854,1.685,855,2.384,856,2.766,857,2.766,858,1.77,859,1.867,860,2.766,861,2.384,862,2.766,863,2.766,864,1.131,865,1.867,866,1.867,867,1.867,868,1.131,869,1.867,870,1.131,871,1.867,872,1.131,873,1.131,874,1.131,875,1.131,876,2.904,877,1.073,878,1.021,879,1.131,880,1.073,881,1.867,882,1.131,883,1.131,884,1.736,885,1.131,886,2.384,887,1.131,888,1.131,889,1.867,890,1.131,891,1.131,892,1.131,893,1.131,894,1.131,895,1.073,896,1.867,897,1.867,898,1.131,899,1.867,900,1.131,901,1.131,902,1.131,903,1.131,904,1.131,905,1.131,906,1.131,907,1.131,908,1.131,909,1.131,910,1.867,911,1.131,912,1.131,913,1.131,914,1.608,915,1.131,916,2.384,917,2.384,918,1.131,919,2.384,920,1.131,921,1.131,922,1.131,923,1.867,924,1.131,925,1.131,926,1.131,927,1.131,928,1.131,929,1.131,930,1.131,931,1.867,932,1.131,933,1.77,934,1.131,935,1.131,936,1.131,937,1.021,938,2.261,939,1.073,940,1.131,941,1.867,942,1.867,943,1.131,944,1.867,945,1.867,946,1.131,947,1.131,948,1.131,949,2.384,950,1.131,951,1.131,952,2.384,953,1.131,954,1.073,955,1.131,956,1.131,957,1.131,958,1.131,959,1.131,960,0.974,961,2.151,962,1.131,963,1.685,964,1.131,965,1.131,966,1.131,967,1.77,968,1.131,969,1.131,970,1.131,971,1.867,972,1.131,973,1.131,974,1.073,975,0.974,976,1.131,977,1.131,978,1.131,979,1.131,980,1.131,981,0.974,982,1.131,983,1.131,984,0.932,985,1.131,986,1.131,987,1.131,988,1.131,989,1.131,990,1.131,991,1.131,992,1.131,993,1.131,994,1.131,995,1.131,996,1.131,997,1.131,998,1.131,999,1.131,1000,1.073,1001,1.073,1002,1.131,1003,1.073,1004,1.073,1005,0.932,1006,1.131,1007,1.867,1008,1.131,1009,1.073,1010,1.131,1011,0.893,1012,1.021,1013,1.131,1014,1.131,1015,1.131,1016,1.131,1017,1.131,1018,1.131,1019,1.131,1020,1.131,1021,0.893,1022,1.131,1023,1.131,1471,3.104,1472,1.881,1473,1.881,1474,1.881,1475,1.881,1476,1.881,1477,1.881,1478,1.881,1479,1.881]],["title/components/NumericComponent.html",[0,0.596,133,1.273]],["body/components/NumericComponent.html",[0,1.066,1,1.101,2,0.153,3,0.108,4,1.257,5,1.216,6,1.257,7,0.999,8,0.084,10,1.203,11,2.206,12,1.257,13,2.85,14,2.279,15,1.97,17,1.97,19,0.197,20,0.528,22,1.282,23,2.697,24,0.99,25,1.034,28,1.275,29,0.013,30,1.79,32,0.475,33,1.148,34,1.038,37,0.371,38,0.634,39,0.084,40,0.005,43,2.77,45,1.804,47,1.468,77,1.829,82,1.829,87,2.817,96,0.908,97,1.776,98,1.412,99,1.717,100,2.238,101,1.257,106,0.999,107,1.257,108,1.138,109,1.257,110,1.138,111,1.761,112,1.128,113,1.257,114,1.138,115,1.652,116,1.257,117,1.138,118,1.216,119,1.257,120,1.138,121,1.257,122,1.138,123,1.176,124,1.776,125,1.101,126,1.257,127,1.138,128,1.257,129,1.138,130,1.138,131,1.257,132,1.257,133,2.025,134,1.257,135,1.101,136,1.257,137,1.138,138,0.999,139,1.776,140,1.138,141,1.607,142,1.138,143,1.257,144,1.138,145,1.257,146,1.101,147,1.257,148,1.101,149,1.257,150,1.138,151,1.257,152,1.138,153,1.257,154,0.008,155,0.008,172,1.912,174,2.106,213,0.968,243,0.532,244,0.532,265,3.648,268,3.743,270,3.16,271,2.872,272,3.665,273,3.665,274,3.665,279,2.872,280,1.367,281,2.584,284,1.617,304,2.702,317,3.417,335,1.038,342,1.912,343,1.912,344,1.912,345,1.912,346,1.912,349,1.912,369,1.912,371,0.999,372,1.912,374,1.912,375,1.912,420,2.687,496,4.121,513,2.397,537,4.185,567,3.952,569,2.22,599,2.687,636,1.032,648,2.377,653,4.457,654,3.797,655,3.537,656,3.797,1011,1.753,1012,2.831,1042,4.457,1127,2.687,1480,3.692,1481,6.048,1482,5.216,1483,6.572,1484,5.216,1485,3.692,1486,3.692,1487,3.692,1488,3.692,1489,3.692,1490,3.225,1491,3.225,1492,3.225,1493,5.216,1494,3.692,1495,5.216,1496,4.556,1497,5.216,1498,5.216,1499,5.216,1500,5.216,1501,5.216,1502,3.692,1503,3.692,1504,3.692,1505,3.692,1506,3.692]],["title/interfaces/NumericalSimulation.html",[287,0.734,653,2.802]],["body/interfaces/NumericalSimulation.html",[2,0.166,3,0.166,8,0.13,19,0.303,20,0.7,29,0.013,31,1.469,32,0.586,39,0.171,45,2.319,47,1.545,154,0.01,155,0.01,287,1.381,335,1.434,513,2.836,537,4.952,567,4.677,648,3.544,649,4.475,650,3.606,651,4.475,652,4.475,653,5.064,654,5.661,655,5.274,656,5.661,657,3.841,658,2.689,659,4.122]],["title/interfaces/OdPair.html",[287,0.734,314,1.883]],["body/interfaces/OdPair.html",[2,0.059,3,0.121,7,0.54,8,0.046,19,0.107,20,0.418,25,0.257,28,1.257,29,0.013,30,1.329,31,1.409,32,0.407,34,0.902,35,0.874,37,0.301,39,0.147,40,0.007,43,1.373,46,0.909,47,1.065,59,1.033,61,2.946,65,1.033,86,0.754,92,2.201,98,0.882,138,0.882,154,0.005,155,0.005,184,2.113,226,0.841,231,1.138,232,1.801,239,1.083,243,0.595,244,0.288,245,2.01,247,0.754,250,1.769,255,3.069,262,1.506,267,0.595,287,0.933,295,1.422,305,0.947,314,2.926,319,0.841,321,0.909,334,2.947,335,1.254,355,1.138,356,1.138,367,0.754,368,0.754,371,1.679,379,1.758,407,1.769,408,2.588,489,2.355,513,2.859,524,2.415,559,1.97,602,1.033,603,0.703,629,2.722,648,1.882,658,1.547,665,2.824,666,2.242,680,2.242,684,1.688,685,3.42,686,1.769,688,3.965,699,1.138,703,1.138,712,1.858,713,1.033,715,1.614,716,1.033,719,1.485,728,3.081,729,3.744,735,1.083,743,1.138,744,2.242,745,2.484,746,3.782,747,2.484,748,3.766,749,3.229,750,2.484,751,3.214,752,1.2,753,3.16,754,1.2,755,1.858,756,3.485,757,3.539,758,2.484,759,1.2,761,3.539,762,1.2,764,1.2,765,1.2,766,1.2,771,2.484,772,1.858,777,1.858,778,1.2,779,1.2,780,0.909,784,1.858,785,2.588,788,1.083,790,1.033,794,1.2,796,1.2,798,0.909,799,2.139,800,1.769,801,1.2,802,1.959,803,1.688,805,1.2,807,1.083,810,2.484,811,1.2,812,0.657,813,1.138,814,2.921,815,3.393,816,3.181,817,1.083,818,1.138,819,3.744,820,2.355,821,1.959,822,1.2,823,1.2,824,1.138,825,1.2,826,1.138,827,1.2,828,2.719,829,1.2,830,1.2,831,1.2,832,1.2,833,1.2,834,1.2,835,1.2,836,1.138,837,1.138,838,2.484,839,1.083,840,1.2,841,1.2,842,1.2,843,1.959,844,1.959,845,1.2,846,1.2,847,1.2,848,1.959,849,1.959,850,1.959,851,1.2,852,1.2,853,1.2,854,1.769,855,2.484,856,2.867,857,2.867,858,1.858,859,1.959,860,2.867,861,2.484,862,2.867,863,2.867,864,1.2,865,1.959,866,1.959,867,1.959,868,1.2,869,1.959,870,1.2,871,1.959,872,1.2,873,1.2,874,1.2,875,1.2,876,2.997,877,1.138,878,1.083,879,1.2,880,1.138,881,1.959,882,1.2,883,1.2,884,1.809,885,1.2,886,2.484,887,1.2,888,1.2,889,1.959,890,1.2,891,1.2,892,1.2,893,1.2,894,1.2,895,1.138,896,1.959,897,1.959,898,1.2,899,1.959,900,1.2,901,1.2,902,1.2,903,1.2,904,1.2,905,1.2,906,1.2,907,1.2,908,1.2,909,1.2,910,1.959,911,1.2,912,1.2,913,1.2,914,1.688,915,1.2,916,2.484,917,2.484,918,1.2,919,2.484,920,1.2,921,1.2,922,1.2,923,1.959,924,1.2,925,1.2,926,1.2,927,1.2,928,1.2,929,1.2,930,1.2,931,1.959,932,1.2,933,1.858,934,1.2,935,1.2,936,1.2,937,1.083,938,2.355,939,1.138,940,1.2,941,1.959,942,1.959,943,1.2,944,1.959,945,1.959,946,1.2,947,1.2,948,1.2,949,2.484,950,1.2,951,1.2,952,2.484,953,1.2,954,1.138,955,1.2,956,1.2,957,1.2,958,1.2,959,1.2,960,1.033,961,2.242,962,1.2,963,1.769,964,1.2,965,1.2,966,1.2,967,1.858,968,1.2,969,1.2,970,1.2,971,1.959,972,1.2,973,1.2,974,1.138,975,1.033,976,1.2,977,1.2,978,1.2,979,1.2,980,1.2,981,1.033,982,1.2,983,1.2,984,0.989,985,1.2,986,1.2,987,1.2,988,1.2,989,1.2,990,1.2,991,1.2,992,1.2,993,1.2,994,1.2,995,1.2,996,1.2,997,1.2,998,1.2,999,1.2,1000,1.138,1001,1.138,1002,1.2,1003,1.138,1004,1.138,1005,0.989,1006,1.2,1007,1.959,1008,1.2,1009,1.138,1010,1.2,1011,0.947,1012,1.083,1013,1.2,1014,1.2,1015,1.2,1016,1.2,1017,1.2,1018,1.2,1019,1.2,1020,1.2,1021,0.947,1022,1.2,1023,1.2]],["title/interfaces/Path.html",[255,1.618,287,0.734]],["body/interfaces/Path.html",[2,0.154,3,0.154,8,0.12,19,0.353,20,0.668,28,1.096,29,0.013,30,1.475,31,1.388,32,0.547,37,0.281,39,0.151,40,0.008,47,1.174,154,0.01,155,0.01,167,3.825,184,1.789,255,3.355,267,1.567,287,1.173,371,1.423,379,1.252,513,3.008,559,1.72,701,4.807,728,3.01,746,3.968,814,4.043,816,3.272,878,2.853,884,2.302,914,2.722,960,3.421,961,4.324,963,4.388,981,2.722,1214,4.591,1215,4.591,1217,4.591,1221,4.591,1224,4.591,1226,4.591,1228,4.591,1229,5.768,1230,4.591,1231,4.591,1232,4.591,1233,4.591,1234,4.591,1235,4.591,1236,4.153,1237,4.591]],["title/classes/PeriodsChanged.html",[40,0.006,1507,2.485]],["body/classes/PeriodsChanged.html",[2,0.153,3,0.153,8,0.119,10,1.794,19,0.278,20,0.664,24,0.987,25,0.927,29,0.013,32,0.603,33,0.987,34,0.893,37,0.351,39,0.182,40,0.011,45,2.489,106,0.749,112,1.418,154,0.01,155,0.01,202,1.685,213,1.363,243,0.749,244,0.749,280,2.114,295,1.407,335,1.364,559,1.943,600,3.127,603,1.832,606,2.693,636,1.453,638,4.177,639,3.719,640,3.311,1133,3.936,1134,2.576,1138,2.111,1146,3.583,1507,4.538,1508,3.311,1509,6.559,1510,5.199,1511,4.321,1512,4.321,1513,2.822,1514,3.526,1515,3.526,1516,3.311]],["title/components/PrivacyComponent.html",[0,0.596,135,1.232]],["body/components/PrivacyComponent.html",[0,1.052,1,1.269,2,0.169,3,0.125,4,1.449,5,1.401,6,1.449,7,1.152,8,0.097,10,1.327,11,2.378,12,1.449,13,2.888,14,2.581,15,2.174,17,2.174,19,0.228,22,1.415,23,2.547,24,1.238,25,0.742,28,0.706,29,0.012,30,1.285,37,0.228,38,0.731,39,0.097,40,0.006,41,4.447,46,3.427,47,1.841,49,2.174,73,2.109,84,2.31,85,2.886,86,1.608,87,1.666,96,1.047,97,1.959,98,1.558,99,1.895,100,2.378,101,1.449,106,0.829,107,1.449,108,1.311,109,1.449,110,1.311,111,1.831,112,0.92,113,1.449,114,1.311,115,1.63,116,1.449,117,1.311,118,1.401,119,1.449,120,1.311,121,1.449,122,1.311,123,2.323,124,1.959,125,1.269,126,1.449,127,1.311,128,1.449,129,1.311,130,1.311,131,1.449,132,1.449,133,1.311,134,1.449,135,2.083,136,1.449,137,1.311,138,1.152,139,1.959,140,1.311,141,1.311,142,1.311,143,1.449,144,1.311,145,1.449,146,1.269,147,1.449,148,1.269,149,1.449,150,1.311,151,1.449,152,1.311,153,1.449,154,0.01,155,0.008,165,2.31,174,2.427,190,3.059,263,5.884,377,3.124,590,4.547,701,4.189,761,3.983,798,1.94,820,3.282,1080,2.027,1180,4.189,1322,4.189,1496,5.027,1517,4.256,1518,6.52,1519,5.755,1520,4.256,1521,4.256,1522,6.83,1523,6.1,1524,4.547,1525,5.755,1526,5.755,1527,5.755,1528,5.755,1529,5.755,1530,5.755,1531,5.755,1532,5.755,1533,6.984,1534,5.755,1535,5.755,1536,5.027,1537,5.755,1538,5.755,1539,5.755,1540,4.547,1541,5.755,1542,5.755,1543,6.984,1544,5.755,1545,5.755,1546,5.755,1547,5.027,1548,4.547,1549,5.755,1550,3.098,1551,3.718]],["title/classes/Relation.html",[40,0.006,876,2.357]],["body/classes/Relation.html",[2,0.058,3,0.12,7,0.531,8,0.045,19,0.105,20,0.413,24,0.373,25,0.672,28,1.253,29,0.013,30,1.319,31,1.416,32,0.404,33,0.373,34,0.961,35,0.86,37,0.299,39,0.146,40,0.008,43,1.355,46,0.895,47,1.25,59,1.017,61,2.927,65,1.665,86,0.741,92,2.196,98,1.105,106,0.283,138,0.87,154,0.005,155,0.005,184,2.099,226,0.827,231,1.834,232,1.783,239,1.065,243,0.68,244,0.463,245,1.99,247,0.741,250,1.745,255,3.047,262,1.489,267,0.585,287,0.838,295,1.41,305,0.932,314,2.81,319,0.827,321,0.895,334,2.772,335,1.179,355,1.119,356,1.119,367,0.741,368,0.741,371,1.669,379,1.752,407,1.745,408,2.563,489,2.329,513,2.852,524,2.399,559,1.983,602,1.017,603,0.691,629,2.698,648,1.861,658,1.527,665,2.656,666,2.216,680,2.216,684,1.665,685,3.402,686,1.745,688,3.951,699,1.119,703,1.119,712,1.834,713,1.017,715,1.593,716,1.017,719,1.465,728,3.066,729,3.726,735,1.065,743,1.119,744,2.563,745,2.839,746,3.76,747,2.456,748,3.191,749,3.206,750,2.456,751,3.194,752,1.18,753,3.132,754,1.18,755,1.834,756,2.827,757,3.985,758,2.456,759,1.18,761,3.516,762,1.18,764,1.18,765,1.18,766,1.18,771,2.456,772,1.834,777,1.834,778,1.18,779,1.18,780,0.895,784,1.834,785,2.563,788,1.065,790,1.017,794,1.18,796,1.18,798,0.895,799,2.115,800,1.745,801,1.18,802,1.933,803,1.665,805,1.18,807,1.065,810,2.456,811,1.18,812,0.646,813,1.119,814,2.898,815,3.369,816,3.162,817,1.065,818,1.119,819,3.206,820,1.834,821,1.933,822,1.18,823,1.18,824,1.119,825,1.18,826,1.119,827,1.18,828,3.64,829,1.18,830,1.18,831,1.18,832,1.18,833,1.18,834,1.18,835,1.18,836,1.119,837,1.119,838,2.456,839,1.065,840,1.18,841,1.18,842,1.18,843,1.933,844,1.933,845,1.18,846,1.18,847,1.18,848,1.933,849,1.933,850,1.933,851,1.18,852,1.18,853,1.18,854,1.745,855,2.456,856,2.839,857,2.839,858,1.834,859,1.933,860,2.839,861,2.456,862,2.839,863,2.839,864,1.18,865,1.933,866,1.933,867,1.933,868,1.18,869,1.933,870,1.18,871,1.933,872,1.18,873,1.18,874,1.18,875,1.18,876,3.369,877,1.834,878,1.745,879,1.933,880,1.834,881,3.364,882,1.933,883,1.18,884,1.789,885,1.18,886,2.456,887,1.18,888,1.18,889,1.933,890,1.18,891,1.18,892,1.18,893,1.18,894,1.18,895,1.119,896,1.933,897,1.933,898,1.18,899,1.933,900,1.18,901,1.18,902,1.18,903,1.18,904,1.18,905,1.18,906,1.18,907,1.18,908,1.18,909,1.18,910,1.933,911,1.18,912,1.18,913,1.18,914,1.665,915,1.18,916,2.456,917,2.456,918,1.18,919,2.456,920,1.18,921,1.18,922,1.18,923,1.933,924,1.18,925,1.18,926,1.18,927,1.18,928,1.18,929,1.18,930,1.18,931,1.933,932,1.18,933,1.834,934,1.18,935,1.18,936,1.18,937,1.065,938,2.329,939,1.119,940,1.18,941,1.933,942,1.933,943,1.18,944,1.933,945,1.933,946,1.18,947,1.18,948,1.18,949,2.456,950,1.18,951,1.18,952,2.456,953,1.18,954,1.119,955,1.18,956,1.18,957,1.18,958,1.18,959,1.18,960,1.017,961,2.216,962,1.18,963,1.745,964,1.18,965,1.18,966,1.18,967,1.834,968,1.18,969,1.18,970,1.18,971,1.933,972,1.18,973,1.18,974,1.119,975,1.017,976,1.18,977,1.18,978,1.18,979,1.18,980,1.18,981,1.017,982,1.18,983,1.18,984,0.972,985,1.18,986,1.18,987,1.18,988,1.18,989,1.18,990,1.18,991,1.18,992,1.18,993,1.18,994,1.18,995,1.18,996,1.18,997,1.18,998,1.18,999,1.18,1000,1.119,1001,1.119,1002,1.18,1003,1.119,1004,1.119,1005,0.972,1006,1.18,1007,1.933,1008,1.18,1009,1.119,1010,1.18,1011,0.932,1012,1.065,1013,1.18,1014,1.18,1015,1.18,1016,1.18,1017,1.18,1018,1.18,1019,1.18,1020,1.18,1021,0.932,1022,1.18,1023,1.18,1552,3.215,1553,1.963,1554,1.963]],["title/classes/Reset.html",[40,0.006,202,0.923]],["body/classes/Reset.html",[2,0.153,3,0.153,8,0.119,10,1.794,19,0.278,20,0.664,24,0.987,25,0.927,29,0.013,32,0.603,33,0.987,34,0.893,37,0.351,39,0.182,40,0.011,45,2.489,106,0.749,112,1.418,154,0.01,155,0.01,202,1.738,213,1.363,243,0.749,244,0.749,280,2.114,295,1.407,335,1.364,559,1.943,600,3.127,603,1.832,606,2.693,636,1.453,638,3.311,639,3.719,640,3.311,1133,3.936,1134,2.576,1138,2.111,1146,3.583,1507,4.321,1508,3.311,1511,4.321,1512,4.321,1513,2.822,1514,3.526,1515,4.448,1516,3.311,1555,6.559,1556,5.199]],["title/classes/Reset-1.html",[40,0.005,184,1.175,202,0.771]],["body/classes/Reset-1.html",[2,0.163,3,0.163,8,0.127,10,1.709,19,0.298,20,0.692,24,1.056,25,0.956,29,0.013,32,0.602,33,1.056,34,0.956,37,0.366,39,0.177,40,0.011,106,0.802,112,1.204,115,1.243,154,0.01,155,0.01,202,1.772,213,1.459,243,0.802,244,0.802,280,2.08,335,1.327,559,1.924,603,1.961,636,1.556,639,3.682,1080,2.883,1133,3.83,1134,2.757,1138,2.26,1146,3.249,1350,5.025,1351,4.051,1354,4.397,1355,4.051,1356,5.407,1357,4.051,1557,6.843,1558,5.565]],["title/classes/Reset-2.html",[40,0.005,202,0.771,524,1.401]],["body/classes/Reset-2.html",[2,0.146,3,0.146,8,0.113,10,1.81,19,0.376,20,0.644,24,0.941,25,0.907,29,0.013,31,1.207,32,0.602,33,0.941,34,0.851,37,0.34,39,0.183,40,0.011,106,0.715,111,1.869,112,1.073,115,1.108,154,0.009,155,0.009,202,1.713,213,1.3,243,0.715,244,0.715,280,2.119,295,1.342,335,1.402,559,1.944,566,3.053,603,1.747,636,1.386,639,3.721,812,1.633,1131,3.815,1132,2.982,1133,3.954,1134,2.457,1137,2.982,1138,2.014,1139,2.829,1140,4.009,1141,4.009,1142,4.009,1143,2.457,1144,3.158,1145,2.982,1146,3.641,1147,2.982,1148,2.982,1149,2.829,1150,3.827,1151,2.982,1559,6.365,1560,4.959]],["title/injectables/SchedulerService.html",[293,1.618,1561,2.631]],["body/injectables/SchedulerService.html",[2,0.087,3,0.157,8,0.068,19,0.412,22,1.097,24,0.847,25,0.82,28,1.311,29,0.013,30,1.59,31,1.374,32,0.429,33,1.015,37,0.396,38,0.511,39,0.068,40,0.004,43,2.815,45,1.991,47,1.826,49,1.125,54,3.525,61,2.118,106,0.856,111,1.274,154,0.007,155,0.007,202,1.491,239,1.617,243,0.856,244,0.856,255,2.094,293,2.094,314,1.358,318,2.82,319,3.173,320,3.224,321,3.155,322,3.572,323,4.028,324,3.782,335,0.918,357,1.699,358,1.791,359,2.354,360,2.602,371,1.927,376,2.118,377,1.617,379,1.648,396,2.343,398,3.032,402,3.43,404,2.602,444,3.782,465,2.354,513,1.627,550,3.572,559,1.274,581,5.832,597,2.168,635,4.672,665,2.118,666,3.624,685,3.295,686,2.422,707,2.354,713,2.311,719,3.244,798,2.438,799,1.543,812,2.396,816,2.65,884,3.339,937,3.453,939,2.545,954,2.545,981,2.771,984,2.65,1080,1.884,1094,3.248,1149,4.348,1164,4.028,1193,3.897,1301,3.572,1309,3.406,1524,3.525,1540,2.354,1548,4.693,1561,2.841,1562,2.979,1563,4.462,1564,4.462,1565,4.462,1566,2.602,1567,4.226,1568,4.226,1569,2.979,1570,2.979,1571,4.462,1572,4.462,1573,2.979,1574,6.677,1575,5.832,1576,6.677,1577,7.623,1578,4.462,1579,2.979,1580,3.897,1581,4.462,1582,4.462,1583,2.979,1584,7.279,1585,2.602,1586,2.354,1587,2.354,1588,2.979,1589,2.979,1590,2.979,1591,2.979,1592,2.979,1593,2.979,1594,2.979,1595,2.979,1596,2.979,1597,5.188,1598,5.349,1599,2.979,1600,5.94,1601,2.979,1602,2.979,1603,2.979,1604,2.979,1605,2.979,1606,2.979,1607,2.979,1608,2.979,1609,2.979,1610,2.979,1611,5.349,1612,5.227,1613,2.979,1614,5.94,1615,2.979,1616,2.979,1617,2.979,1618,2.979,1619,5.94,1620,2.979,1621,4.462,1622,4.462,1623,4.462,1624,4.462,1625,4.462,1626,3.897,1627,2.979,1628,2.602,1629,2.602,1630,5.349,1631,4.672,1632,5.349,1633,5.349,1634,5.349,1635,4.462,1636,5.349,1637,2.979,1638,2.979,1639,2.979,1640,2.979,1641,2.979,1642,2.979,1643,2.979,1644,2.979,1645,2.979,1646,2.979,1647,2.979,1648,2.979]],["title/components/SearchForTheAreaComponent.html",[0,0.596,137,1.273]],["body/components/SearchForTheAreaComponent.html",[0,1.032,1,0.987,2,0.142,3,0.097,4,1.127,5,1.09,6,1.127,7,0.896,8,0.076,10,1.112,11,2.075,12,1.127,13,2.818,14,2.206,15,1.822,17,1.822,19,0.334,20,0.488,22,1.186,23,2.611,24,0.915,25,1.03,28,1.278,29,0.013,30,1.805,31,0.828,32,0.48,33,0.628,34,0.828,37,0.355,38,0.568,39,0.076,40,0.005,47,0.739,75,1.45,87,2.715,92,0.925,96,0.814,97,1.642,98,1.305,99,1.588,100,2.128,101,1.127,106,0.901,107,1.127,108,1.02,109,1.127,110,1.02,111,1.834,112,1.23,113,1.127,114,1.02,115,1.484,116,1.127,117,1.02,118,1.09,119,1.127,120,1.02,121,1.127,122,1.02,123,1.054,124,1.642,125,0.987,126,1.127,127,1.02,128,1.127,129,1.02,130,1.02,131,1.127,132,1.127,133,1.02,134,1.127,135,0.987,136,1.127,137,1.926,138,2.108,139,1.642,140,1.02,141,1.02,142,1.02,143,1.127,144,1.02,145,1.127,146,0.987,147,1.127,148,0.987,149,1.127,150,1.02,151,1.127,152,1.02,153,1.127,154,0.009,155,0.007,160,4.559,243,0.695,244,0.695,265,3.553,268,3.636,270,3.028,271,2.701,272,3.548,273,3.548,274,3.548,279,2.701,280,1.264,281,2.39,284,1.45,304,2.498,311,3.996,312,4.171,318,2.968,335,1.073,342,1.715,343,1.715,344,1.715,345,1.715,346,1.715,349,1.715,354,1.797,357,1.888,369,1.715,371,1.305,372,1.715,373,2.108,374,1.715,375,1.715,376,3.553,377,1.797,396,1.45,398,2.492,402,2.819,403,3.51,414,3.271,415,3.071,566,1.822,636,2.051,780,2.198,812,2.283,839,2.618,1090,4.213,1143,2.39,1167,2.409,1301,3.759,1307,2.891,1308,2.891,1309,3.071,1312,2.891,1315,5.46,1323,4.939,1338,2.891,1340,2.891,1347,2.891,1566,2.891,1567,4.939,1586,2.615,1597,2.891,1612,4.239,1631,2.891,1649,7.602,1650,6.64,1651,2.891,1652,4.97,1653,4.213,1654,4.823,1655,3.31,1656,3.31,1657,3.31,1658,3.31,1659,4.823,1660,3.31,1661,3.31,1662,3.31,1663,3.31,1664,3.31,1665,3.31,1666,2.891,1667,3.31,1668,4.823,1669,3.31,1670,4.213,1671,3.31,1672,3.31,1673,3.31,1674,3.31,1675,3.31,1676,3.31,1677,3.31,1678,3.31,1679,3.31,1680,3.31,1681,3.31,1682,3.31,1683,3.31,1684,3.31,1685,4.823,1686,3.31,1687,2.891,1688,3.31,1689,3.31,1690,3.31,1691,3.31,1692,3.31,1693,3.31,1694,3.31,1695,2.891]],["title/components/SelectionOfTheAreaComponent.html",[0,0.596,140,1.273]],["body/components/SelectionOfTheAreaComponent.html",[0,1.04,1,1.013,2,0.144,3,0.1,4,1.157,5,1.118,6,1.157,7,0.92,8,0.078,10,1.133,11,2.106,12,1.157,13,2.826,14,2.224,15,1.856,17,1.856,19,0.338,20,0.497,22,1.208,23,2.632,24,0.933,25,1.034,28,1.311,29,0.013,30,1.765,31,0.844,32,0.457,33,0.645,34,0.844,35,2.153,37,0.403,38,0.583,39,0.078,40,0.005,47,0.759,49,2.925,87,2.74,96,0.835,97,1.673,98,1.33,99,1.618,100,2.155,101,1.157,106,0.832,107,1.157,108,1.047,109,1.157,110,1.047,111,1.864,112,1.249,113,1.157,114,1.047,115,1.563,116,1.157,117,1.047,118,1.118,119,1.157,120,1.047,121,1.157,122,1.047,123,1.082,124,1.673,125,1.013,126,1.157,127,1.047,128,1.157,129,1.047,130,1.047,131,1.157,132,1.157,133,1.047,134,1.157,135,1.013,136,1.157,137,1.047,138,0.92,139,1.673,140,1.95,141,2.386,142,1.047,143,1.157,144,1.047,145,1.157,146,1.013,147,1.157,148,1.013,149,1.157,150,1.047,151,1.157,152,1.047,153,1.157,154,0.007,155,0.007,213,0.891,243,0.49,244,0.832,265,3.576,268,3.662,270,3.06,271,2.742,272,3.576,273,3.576,274,3.576,279,2.742,280,1.288,281,2.435,284,1.488,304,2.546,311,4.037,312,4.209,313,3.577,317,3.323,318,3.005,319,2.667,320,3.435,342,1.76,343,1.76,344,1.76,345,1.76,346,1.76,349,1.76,353,3.577,354,1.844,357,1.938,358,2.043,361,1.844,362,1.613,367,1.283,368,1.283,369,1.76,371,1.563,372,1.76,373,2.163,374,1.76,375,1.76,376,1.613,377,1.844,414,3.333,415,3.13,569,2.043,636,0.95,744,2.668,780,3.368,798,3.06,854,3.644,960,2.546,974,2.803,1080,2.034,1081,2.684,1087,2.967,1309,3.13,1389,2.473,1390,2.967,1548,5,1651,2.967,1652,5.044,1653,4.293,1696,7.647,1697,6.68,1698,3.397,1699,3.397,1700,3.397,1701,3.397,1702,3.397,1703,3.397,1704,3.397,1705,3.397,1706,3.397,1707,6.328,1708,6.304,1709,3.397,1710,3.397,1711,4.915,1712,3.397,1713,3.397,1714,3.397,1715,3.397,1716,3.397,1717,3.397,1718,3.397,1719,3.397,1720,3.397,1721,3.397,1722,3.397,1723,3.397,1724,4.915,1725,4.915,1726,4.915,1727,4.915,1728,4.293,1729,4.293]],["title/modules/SharedModule.html",[185,1.232,199,2.485]],["body/modules/SharedModule.html",[2,0.188,3,0.147,8,0.115,28,0.831,29,0.013,37,0.448,38,0.86,39,0.17,40,0.007,96,1.232,120,2.571,127,2.594,130,2.594,154,0.009,155,0.009,185,1.911,187,2.483,188,3.834,189,2.72,190,2.807,199,5.142,201,3.042,202,1.119,203,2.596,205,3.499,246,2.72,252,4.663,290,3.398,296,4.345,354,2.72,379,1.193,559,1.193,1025,3.959,1430,5.285,1612,3.398,1730,4.377,1731,4.377,1732,4.377,1733,4.377,1734,4.377,1735,6.407,1736,6.407,1737,5.596,1738,4.377,1739,5.596,1740,4.377,1741,5.596,1742,5.596,1743,5.596,1744,4.377,1745,4.377,1746,5.011,1747,5.011,1748,4.377,1749,4.377,1750,3.959,1751,5.011]],["title/interfaces/Simulation.html",[45,1.232,287,0.734]],["body/interfaces/Simulation.html",[2,0.171,3,0.171,8,0.133,19,0.311,20,0.711,29,0.013,31,1.441,32,0.546,39,0.173,45,2.485,47,1.824,154,0.01,155,0.01,287,1.394,335,1.297,513,2.121,537,3.704,567,3.498,648,3.845,649,4.595,650,3.704,651,4.595,652,4.595,653,5.322,654,4.233,655,3.944,656,4.233,657,4.767,658,3.338,659,5.712]],["title/classes/SimulationChanged.html",[40,0.006,1511,2.485]],["body/classes/SimulationChanged.html",[2,0.151,3,0.151,8,0.118,10,1.789,19,0.275,20,0.659,24,0.976,25,0.922,29,0.013,32,0.612,33,0.976,34,0.883,37,0.348,39,0.181,40,0.011,45,2.485,106,0.741,112,1.409,154,0.01,155,0.01,202,1.679,213,1.348,243,0.741,244,0.741,280,2.109,295,1.392,335,1.36,559,1.939,600,3.093,603,1.812,606,2.665,636,1.438,638,3.276,639,3.711,640,3.276,773,4.52,1133,3.925,1134,2.549,1138,2.089,1146,3.569,1507,4.3,1508,3.276,1511,4.52,1512,4.3,1513,2.792,1514,4.418,1515,3.488,1516,3.276,1752,6.515,1753,5.144]],["title/components/SimulationComponent.html",[0,0.596,142,1.273]],["body/components/SimulationComponent.html",[0,0.994,1,0.878,2,0.13,3,0.086,4,1.002,5,0.969,6,1.002,7,0.797,8,0.067,10,1.02,11,1.936,12,1.002,13,2.78,14,2.124,15,1.67,17,1.67,19,0.316,20,0.447,22,1.087,23,2.514,24,0.839,25,1.049,28,1.226,29,0.013,30,1.748,31,1.289,32,0.549,33,0.839,34,0.759,37,0.395,38,0.505,39,0.067,40,0.004,45,2.204,49,2.679,71,1.77,73,1.458,74,1.597,75,1.289,77,1.458,82,1.458,86,1.112,87,2.602,92,1.927,95,2.57,96,0.724,97,1.505,98,1.197,99,1.455,100,2.01,101,1.002,106,0.851,107,1.002,108,0.907,109,1.002,110,0.907,111,1.811,112,0.956,113,1.002,114,0.907,115,1.484,116,1.002,117,0.907,118,0.969,119,1.002,120,0.907,121,1.002,122,0.907,123,0.937,124,1.505,125,0.878,126,1.002,127,0.907,128,1.002,129,0.907,130,0.907,131,1.002,132,1.002,133,0.907,134,1.002,135,0.878,136,1.002,137,0.907,138,0.797,139,1.505,140,0.907,141,1.362,142,1.819,143,1.002,144,0.907,145,1.002,146,0.878,147,1.002,148,0.878,149,1.002,150,0.907,151,1.002,152,0.907,153,1.002,154,0.006,155,0.006,165,2.4,168,1.996,172,1.524,182,2.658,184,1.002,213,0.771,226,1.24,243,0.637,244,0.637,265,3.445,268,3.514,270,2.884,271,2.521,272,3.416,273,3.416,274,3.416,279,2.521,280,1.159,281,2.19,284,1.289,295,1.598,304,2.29,311,3.805,312,3.997,317,3.156,318,2.803,335,1.141,342,1.524,343,1.524,344,1.524,345,1.524,346,1.524,349,1.524,354,1.597,357,1.678,367,1.112,368,1.112,369,1.524,371,1.437,372,1.524,373,1.874,374,1.524,375,1.524,399,4.572,414,2.998,415,2.815,417,2.325,418,2.325,420,2.142,422,1.996,466,2.142,550,3.55,552,4.664,553,4.664,555,5.251,556,5.805,561,3.493,562,3.861,565,2.658,567,2.658,569,1.77,574,3.861,599,2.142,605,2.57,606,1.524,607,3.861,608,3.861,636,0.823,648,3.232,657,2.998,658,2.099,659,4.838,785,2.4,788,3.204,807,3.608,895,3.367,1042,4.003,1120,2.325,1490,2.57,1491,2.57,1492,2.57,1513,3.435,1568,4.195,1587,2.325,1754,2.943,1755,5.31,1756,4.421,1757,5.805,1758,4.421,1759,2.943,1760,2.943,1761,2.943,1762,2.943,1763,2.943,1764,2.943,1765,2.943,1766,2.943,1767,2.943,1768,2.943,1769,2.943,1770,2.943,1771,2.943,1772,2.943,1773,2.57,1774,2.325,1775,6.328,1776,2.943,1777,4.421,1778,2.943,1779,2.943,1780,2.943,1781,2.943,1782,2.943,1783,2.943,1784,2.943,1785,2.943,1786,2.943,1787,2.943,1788,4.421,1789,2.943,1790,4.421,1791,4.421,1792,2.943,1793,2.943,1794,2.943,1795,4.421,1796,4.421,1797,4.421,1798,4.421,1799,4.421,1800,4.421,1801,4.421]],["title/classes/SimulationEnded.html",[40,0.006,1512,2.485]],["body/classes/SimulationEnded.html",[2,0.152,3,0.152,8,0.118,10,1.791,19,0.276,20,0.661,24,0.982,25,0.924,29,0.013,32,0.602,33,0.982,34,0.888,37,0.349,39,0.182,40,0.011,45,2.487,106,0.745,112,1.414,154,0.01,155,0.01,202,1.682,213,1.356,243,0.745,244,0.745,280,2.112,295,2.102,335,1.362,559,1.941,600,3.11,603,1.822,606,2.679,636,1.445,638,3.293,639,3.715,640,4.163,1133,3.931,1134,2.562,1138,2.1,1146,3.576,1507,4.31,1508,3.293,1511,4.31,1512,4.529,1513,2.807,1514,3.507,1515,3.507,1516,3.293,1802,6.537,1803,5.171]],["title/modules/SimulationModule.html",[185,1.232,200,2.802]],["body/modules/SimulationModule.html",[2,0.175,3,0.175,8,0.136,29,0.013,37,0.439,38,1.022,39,0.163,40,0.009,96,1.463,154,0.01,155,0.01,185,2.125,187,2.948,188,3.868,189,3.23,190,3.342,200,5.674,201,3.384,202,1.329,203,3.082,205,3.531,212,4.701,213,1.56,362,2.825,444,5.227,550,4.936,598,5.197,1422,3.868,1804,5.197,1805,5.197,1806,5.95,1807,5.95,1808,5.95]],["title/interfaces/SimulationState.html",[287,0.734,1809,2.802]],["body/interfaces/SimulationState.html",[2,0.163,3,0.163,8,0.127,19,0.298,20,0.692,29,0.013,32,0.402,37,0.396,39,0.192,45,2.513,154,0.01,155,0.01,213,1.459,267,1.66,287,1.215,379,1.924,599,4.051,606,3.545,636,2.288,1417,4.641,1422,3.021,1513,3.714,1809,5.551,1810,4.861,1811,7.41,1812,5.407,1813,4.861,1814,6.27,1815,6.384,1816,5.565,1817,4.861,1818,5.977,1819,4.861,1820,4.397,1821,4.861,1822,4.861,1823,4.861]],["title/interfaces/SimulationState-1.html",[184,1.175,287,0.613,1809,2.34]],["body/interfaces/SimulationState-1.html",[2,0.151,3,0.151,8,0.118,19,0.275,20,0.66,28,1.287,29,0.013,32,0.517,33,0.978,37,0.382,39,0.181,45,2.527,154,0.01,155,0.01,241,2.552,262,1.878,267,1.536,280,1.35,287,1.158,295,2.035,379,1.791,396,2.256,398,3.294,600,3.097,606,4.105,611,2.972,636,2.352,638,3.28,640,3.28,1138,2.091,1417,4.422,1418,4.07,1419,4.07,1422,2.796,1425,4.07,1513,4.302,1514,3.493,1515,3.493,1516,4.152,1809,5.651,1820,5.152,1824,4.07,1825,5.151,1826,4.499,1827,4.499,1828,6.52,1829,5.151,1830,5.151,1831,5.695,1832,5.695,1833,5.151,1834,4.499,1835,4.499,1836,4.499,1837,4.499]],["title/classes/Statistics.html",[40,0.006,435,2.631]],["body/classes/Statistics.html",[2,0.108,3,0.108,8,0.084,19,0.197,22,1.282,25,1.025,28,1.385,29,0.013,31,1.444,32,0.574,34,0.634,37,0.197,39,0.084,40,0.008,92,1.938,106,1.146,154,0.008,155,0.008,184,2.238,243,1.146,244,1.146,267,1.101,335,1.235,371,2.132,379,1.651,435,4.185,513,2.977,559,1.799,611,1.683,655,2.504,807,4.101,884,2.649,938,3.449,967,3.449,1025,6.747,1101,4.556,1236,4.121,1757,5.283,1838,3.692,1839,5.216,1840,5.216,1841,5.216,1842,5.216,1843,5.216,1844,5.216,1845,5.216,1846,5.216,1847,5.216,1848,5.216,1849,5.216,1850,5.216,1851,5.216,1852,5.216,1853,8.629,1854,3.692,1855,5.216,1856,3.692,1857,5.216,1858,3.692,1859,5.216,1860,3.692,1861,5.216,1862,3.692,1863,5.216,1864,3.692,1865,3.692,1866,3.692,1867,5.216,1868,3.692,1869,5.216,1870,3.692,1871,5.216,1872,3.692,1873,5.216,1874,3.692,1875,5.216,1876,3.692,1877,3.225,1878,5.216,1879,5.216,1880,5.216,1881,5.216,1882,6.572,1883,5.216,1884,5.216,1885,5.216,1886,5.216,1887,3.692,1888,3.692,1889,3.692,1890,3.692,1891,3.692,1892,3.692,1893,3.692,1894,3.692,1895,3.692,1896,3.692,1897,3.692]],["title/components/StatisticsComponent.html",[0,0.596,144,1.273]],["body/components/StatisticsComponent.html",[0,1.048,1,1.039,2,0.147,3,0.102,4,1.186,5,1.147,6,1.186,7,0.943,8,0.08,10,1.154,11,2.135,12,1.186,13,2.833,14,2.241,15,1.89,17,1.89,19,0.342,20,0.506,22,1.23,23,2.652,24,0.95,25,1.05,28,1.257,29,0.013,30,1.772,31,1.212,32,0.537,33,0.661,34,0.598,37,0.405,38,0.598,39,0.08,40,0.005,45,2.022,49,2.666,87,2.763,92,1.399,96,0.856,97,1.704,98,1.354,99,1.647,100,2.179,101,1.186,106,0.844,107,1.186,108,1.073,109,1.186,110,1.073,111,1.873,112,1.082,113,1.186,114,1.073,115,1.514,116,1.186,117,1.073,118,1.147,119,1.186,120,1.073,121,1.186,122,1.073,123,1.109,124,1.704,125,1.039,126,1.186,127,1.073,128,1.186,129,1.073,130,1.073,131,1.186,132,1.186,133,1.073,134,1.186,135,1.039,136,1.186,137,1.073,138,0.943,139,1.704,140,1.073,141,1.542,142,1.073,143,1.186,144,1.972,145,1.186,146,1.039,147,1.186,148,1.039,149,1.186,150,1.073,151,1.186,152,1.073,153,1.186,154,0.007,155,0.007,213,0.913,226,1.468,243,0.502,244,0.502,265,3.598,268,3.686,270,3.09,271,2.78,272,3.603,273,3.603,274,3.603,279,2.78,280,1.312,281,2.479,284,1.526,304,2.592,311,4.077,312,4.244,317,3.351,318,3.039,335,1.301,342,1.804,343,1.804,344,1.804,345,1.804,346,1.804,349,1.804,354,1.89,357,1.986,361,1.89,362,1.654,369,1.804,371,1.733,372,1.804,373,2.218,374,1.804,375,1.804,379,1.192,392,2.094,396,1.526,397,1.804,398,1.526,402,1.726,403,2.535,415,3.186,435,3.186,444,4.076,465,2.752,466,2.535,479,3.042,550,3.849,557,6.165,569,2.094,590,3.953,613,3.042,627,6.165,657,3.393,658,2.376,777,4.243,785,2.716,1568,4.627,1587,2.752,1774,2.752,1898,3.483,1899,5.856,1900,5.004,1901,7.058,1902,7.058,1903,5.004,1904,3.483,1905,3.483,1906,3.483,1907,3.483,1908,3.483,1909,3.483,1910,3.483,1911,3.483,1912,3.483,1913,3.483,1914,3.483,1915,3.483,1916,3.483,1917,3.483,1918,3.483,1919,3.483,1920,3.483,1921,3.483,1922,3.483,1923,3.953]],["title/interfaces/Step.html",[287,0.734,566,1.561]],["body/interfaces/Step.html",[2,0.18,3,0.18,8,0.14,19,0.327,20,0.733,29,0.013,32,0.442,39,0.177,47,1.878,154,0.011,155,0.011,267,1.825,284,3.174,287,1.371,379,1.457,566,3.12,650,3.897,723,3.897,1005,3.954,1080,2.72,1349,4.835]],["title/classes/StepChanged.html",[40,0.006,1140,2.357]],["body/classes/StepChanged.html",[2,0.144,3,0.144,8,0.112,10,1.805,19,0.374,20,0.64,24,0.932,25,0.902,29,0.013,31,1.201,32,0.611,33,0.932,34,0.843,37,0.338,39,0.182,40,0.011,106,0.708,111,1.864,112,1.062,115,1.096,154,0.009,155,0.009,202,1.65,213,1.287,243,0.708,244,0.708,280,2.114,295,1.329,335,1.399,559,1.941,566,3.047,603,1.729,636,1.372,639,3.714,773,4.442,812,1.616,1131,3.797,1132,2.952,1133,3.945,1134,2.432,1137,2.952,1138,1.993,1139,2.8,1140,4.213,1141,3.99,1142,3.99,1143,2.432,1144,3.126,1145,3.802,1146,3.63,1147,2.952,1148,2.952,1149,2.8,1150,2.952,1151,2.952,1924,6.323,1925,4.909]],["title/classes/StepError.html",[40,0.006,1141,2.357]],["body/classes/StepError.html",[2,0.145,3,0.145,8,0.113,10,1.807,19,0.375,20,0.642,24,0.937,25,0.904,29,0.013,31,1.204,32,0.601,33,0.937,34,0.847,37,0.339,39,0.182,40,0.011,106,0.711,111,1.866,112,1.067,115,1.102,154,0.009,155,0.009,202,1.653,213,1.293,243,0.711,244,0.711,280,2.117,295,1.336,335,1.437,559,1.942,566,3.05,603,1.738,636,1.379,639,3.717,812,1.624,1131,3.806,1132,2.967,1133,3.949,1134,2.445,1137,2.967,1138,2.004,1139,2.814,1140,3.999,1141,4.221,1142,3.999,1143,2.445,1144,3.142,1145,2.967,1146,3.635,1147,3.815,1148,2.967,1149,2.814,1150,2.967,1151,2.967,1926,6.344,1927,4.934]],["title/classes/StepPending.html",[40,0.006,1142,2.357]],["body/classes/StepPending.html",[2,0.143,3,0.143,8,0.112,10,1.803,19,0.373,20,0.638,24,0.927,25,0.9,29,0.013,31,1.198,32,0.601,33,0.927,34,0.839,37,0.337,39,0.182,40,0.011,106,0.704,111,1.861,112,1.056,115,1.091,154,0.009,155,0.009,202,1.647,213,1.28,243,0.704,244,0.704,280,2.112,295,2.066,335,1.435,559,1.939,566,3.043,603,1.721,636,1.365,639,3.71,812,1.608,1131,3.788,1132,2.937,1133,3.94,1134,2.42,1137,2.937,1138,1.983,1139,2.786,1140,3.98,1141,3.98,1142,4.205,1143,2.42,1144,3.11,1145,2.937,1146,3.624,1147,2.937,1148,3.79,1149,2.786,1150,2.937,1151,2.937,1928,6.303,1929,4.884]],["title/interfaces/Tag.html",[287,0.734,757,2.357]],["body/interfaces/Tag.html",[2,0.059,3,0.122,7,0.543,8,0.046,19,0.107,20,0.419,25,0.259,28,1.258,29,0.013,30,1.331,31,1.41,32,0.345,34,1.067,35,0.878,37,0.302,39,0.147,40,0.007,43,1.379,46,0.914,47,1.068,59,1.038,61,2.951,65,1.038,86,0.757,92,2.203,98,1.121,138,0.885,154,0.005,155,0.005,184,2.116,226,0.845,231,1.143,232,1.806,239,1.088,243,0.597,244,0.289,245,2.015,247,0.757,250,1.775,255,3.057,262,1.511,267,0.598,287,0.935,295,1.426,305,0.952,314,2.833,319,0.845,321,0.914,334,2.8,335,1.256,355,1.143,356,1.143,367,0.757,368,0.757,371,1.682,379,1.76,407,1.775,408,2.595,489,2.363,513,2.861,524,2.42,559,1.971,602,1.038,603,0.706,629,2.728,648,1.888,658,1.553,665,2.683,666,2.249,680,2.249,684,1.694,685,3.425,686,1.775,688,3.97,699,1.143,703,1.143,712,1.865,713,1.038,715,1.621,716,1.038,719,1.491,728,3.085,729,3.749,735,1.088,743,1.143,744,2.249,745,2.491,746,3.771,747,2.491,748,3.223,749,3.235,750,2.491,751,3.22,752,1.205,753,3.167,754,1.205,755,1.865,756,2.859,757,3.772,758,2.491,759,1.205,761,3.545,762,1.205,764,1.205,765,1.205,766,1.205,771,2.491,772,1.865,777,1.865,778,1.205,779,1.205,780,0.914,784,1.865,785,2.595,788,1.088,790,1.038,794,1.205,796,1.205,798,0.914,799,2.146,800,1.775,801,1.205,802,1.967,803,1.694,805,1.205,807,1.088,810,2.491,811,1.205,812,0.66,813,1.143,814,2.927,815,3.399,816,3.186,817,1.088,818,1.143,819,3.235,820,2.363,821,1.967,822,1.205,823,1.967,824,1.865,825,1.967,826,2.727,827,1.205,828,2.727,829,1.205,830,1.205,831,1.205,832,1.205,833,1.205,834,1.205,835,1.205,836,1.143,837,1.143,838,2.491,839,1.088,840,1.205,841,1.205,842,1.205,843,1.967,844,1.967,845,1.205,846,1.205,847,1.205,848,1.967,849,1.967,850,1.967,851,1.205,852,1.205,853,1.205,854,1.775,855,2.491,856,2.875,857,2.875,858,1.865,859,1.967,860,2.875,861,2.491,862,2.875,863,2.875,864,1.205,865,1.967,866,1.967,867,1.967,868,1.205,869,1.967,870,1.205,871,1.967,872,1.205,873,1.205,874,1.205,875,1.205,876,3.004,877,1.143,878,1.088,879,1.205,880,1.143,881,1.967,882,1.205,883,1.205,884,1.815,885,1.205,886,2.491,887,1.205,888,1.205,889,1.967,890,1.205,891,1.205,892,1.205,893,1.205,894,1.205,895,1.143,896,1.967,897,1.967,898,1.205,899,1.967,900,1.205,901,1.205,902,1.205,903,1.205,904,1.205,905,1.205,906,1.205,907,1.205,908,1.205,909,1.205,910,1.967,911,1.205,912,1.205,913,1.205,914,1.694,915,1.205,916,2.491,917,2.491,918,1.205,919,2.491,920,1.205,921,1.205,922,1.205,923,1.967,924,1.205,925,1.205,926,1.205,927,1.205,928,1.205,929,1.205,930,1.205,931,1.967,932,1.205,933,1.865,934,1.205,935,1.205,936,1.205,937,1.088,938,2.363,939,1.143,940,1.205,941,1.967,942,1.967,943,1.205,944,1.967,945,1.967,946,1.205,947,1.205,948,1.205,949,2.491,950,1.205,951,1.205,952,2.491,953,1.205,954,1.143,955,1.205,956,1.205,957,1.205,958,1.205,959,1.205,960,1.038,961,2.249,962,1.205,963,1.775,964,1.205,965,1.205,966,1.205,967,1.865,968,1.205,969,1.205,970,1.205,971,1.967,972,1.205,973,1.205,974,1.143,975,1.038,976,1.205,977,1.205,978,1.205,979,1.205,980,1.205,981,1.038,982,1.205,983,1.205,984,0.993,985,1.205,986,1.205,987,1.205,988,1.205,989,1.205,990,1.205,991,1.205,992,1.205,993,1.205,994,1.205,995,1.205,996,1.205,997,1.205,998,1.205,999,1.205,1000,1.143,1001,1.143,1002,1.205,1003,1.143,1004,1.143,1005,0.993,1006,1.205,1007,1.967,1008,1.205,1009,1.143,1010,1.205,1011,0.952,1012,1.088,1013,1.205,1014,1.205,1015,1.205,1016,1.205,1017,1.205,1018,1.205,1019,1.205,1020,1.205,1021,0.952,1022,1.205,1023,1.205]],["title/components/TermsComponent.html",[0,0.596,146,1.232]],["body/components/TermsComponent.html",[0,1.069,1,1.334,2,0.175,3,0.131,4,1.523,5,1.472,6,1.523,7,1.211,8,0.102,10,1.372,11,2.438,12,1.523,13,2.9,14,2.619,15,2.247,17,2.247,19,0.239,22,1.463,23,2.598,24,1.269,25,0.767,28,0.742,29,0.013,30,1.329,37,0.239,38,0.768,39,0.102,40,0.007,41,4.538,46,3.741,52,4.035,53,4.832,73,2.216,84,2.428,85,3.033,86,1.689,87,1.751,96,1.1,97,2.026,98,1.61,99,1.959,100,2.426,101,1.523,106,0.858,107,1.523,108,1.378,109,1.523,110,1.378,111,1.854,112,0.967,113,1.523,114,1.378,115,1.657,116,1.523,117,1.378,118,1.472,119,1.523,120,1.378,121,1.523,122,1.378,123,2.363,124,2.026,125,1.334,126,1.523,127,1.378,128,1.523,129,1.378,130,1.378,131,1.523,132,1.523,133,1.378,134,1.523,135,1.334,136,1.523,137,1.378,138,1.211,139,2.026,140,1.378,141,1.378,142,1.378,143,1.523,144,1.378,145,1.523,146,2.125,147,1.523,148,1.334,149,1.523,150,1.378,151,1.523,152,1.378,153,1.523,154,0.009,155,0.009,165,2.428,174,2.551,259,4.33,263,5.187,264,6.633,377,4.388,798,2.038,1080,2.096,1322,4.33,1389,4.33,1522,6.224,1524,4.701,1547,5.196,1550,3.255,1551,3.907,1930,4.472,1931,6.685,1932,5.949,1933,4.472,1934,4.472,1935,5.949,1936,5.949,1937,5.949,1938,5.949,1939,5.949,1940,5.949,1941,4.472,1942,4.472]],["title/components/UiComponent.html",[0,0.596,148,1.232]],["body/components/UiComponent.html",[0,0.911,1,0.876,2,0.156,3,0.086,4,1,5,0.967,6,1,7,0.795,8,0.067,10,1.018,11,1.935,12,1,13,2.78,14,2.235,15,1.668,17,1.668,19,0.236,20,0.447,22,1.086,23,2.151,24,0.838,25,0.991,28,1.203,29,0.013,30,1.65,31,0.504,32,0.512,33,1.2,34,1.086,37,0.406,38,0.504,39,0.067,40,0.004,47,1.317,49,1.11,70,1.993,73,2.188,74,2.397,75,2.324,77,2.923,82,2.923,83,3.861,86,2.228,92,0.821,93,3.598,94,2.812,96,0.722,97,1.504,98,1.195,99,1.454,100,2.008,101,1,106,0.911,107,1,108,0.905,109,1,110,0.905,111,1.641,112,0.635,113,1,114,0.905,115,1.583,116,1,117,0.905,118,0.967,119,1,120,0.905,121,1,122,0.905,123,0.936,124,1.504,125,0.876,126,1,127,1.361,128,1,129,0.905,130,1.361,131,1,132,1,133,0.905,134,1,135,0.876,136,1,137,0.905,138,0.795,139,1.504,140,0.905,141,1.361,142,0.905,143,1,144,0.905,145,1,146,0.876,147,1,148,1.759,149,1,150,0.905,151,1,152,0.905,153,1,154,0.006,155,0.006,160,2.812,161,2.322,163,2.139,165,2.88,167,3.861,172,1.522,174,3.026,177,4.294,180,3.857,202,1.539,213,0.77,232,2.603,243,0.765,244,0.765,245,2.666,246,1.595,247,1.11,262,2.645,269,4.192,270,3.367,271,2.801,280,0.77,285,2.322,286,2.322,288,3.861,290,1.993,292,4.294,295,2.148,317,3.272,319,2.8,335,1.183,361,1.595,362,1.395,371,1.798,379,0.7,392,1.767,396,1.287,397,1.522,398,2.324,399,1.767,402,2.628,422,2.995,435,4.23,477,2.139,478,4.634,531,2.139,597,2.139,636,1.234,729,1.595,751,1.522,812,1.942,854,1.595,858,3.607,1011,1.395,1012,3.606,1127,2.139,1143,3.513,1261,2.322,1276,2.567,1283,2.567,1288,5.802,1290,2.567,1298,1.767,1359,3.489,1360,3.489,1377,2.322,1382,1.993,1550,2.139,1561,3.756,1612,3.598,1748,2.567,1749,2.567,1750,2.322,1923,5.445,1943,2.938,1944,5.305,1945,4.416,1946,4.416,1947,4.416,1948,2.938,1949,5.802,1950,6.324,1951,6.324,1952,5.899,1953,5.305,1954,5.899,1955,4.634,1956,4.416,1957,2.938,1958,2.938,1959,2.938,1960,2.938,1961,4.416,1962,2.938,1963,4.416,1964,2.938,1965,2.938,1966,2.938,1967,2.938,1968,2.938,1969,2.938,1970,2.938,1971,2.567,1972,2.567,1973,2.938,1974,2.938,1975,2.938,1976,2.938,1977,2.938,1978,2.938,1979,2.938,1980,5.305,1981,5.305,1982,4.416,1983,4.416,1984,4.416,1985,2.938,1986,2.938,1987,5.305,1988,4.416,1989,2.938,1990,2.567,1991,2.938,1992,2.938,1993,4.416,1994,2.938,1995,2.938,1996,2.938,1997,2.938,1998,2.567,1999,2.938,2000,2.938,2001,4.416,2002,2.938,2003,2.938,2004,2.938,2005,2.938,2006,5.305,2007,2.938,2008,2.938,2009,4.416,2010,2.938,2011,2.938]],["title/modules/UiModule.html",[185,1.232,2012,3.008]],["body/modules/UiModule.html",[2,0.128,3,0.128,8,0.1,29,0.013,37,0.455,38,0.751,39,0.134,40,0.006,96,1.075,110,2.335,114,2.335,115,0.976,117,2.335,122,2.335,129,2.335,133,2.335,137,2.335,140,2.335,142,2.335,144,2.335,148,2.26,150,2.335,152,2.335,154,0.009,155,0.009,185,1.747,187,2.166,188,3.587,189,2.373,190,2.895,199,4.557,201,2.782,202,0.976,203,2.264,205,2.903,212,3.454,213,1.146,214,3.818,215,3.818,302,3.818,318,3.598,362,2.076,1055,3.818,1164,5.14,1422,3.18,1561,4.826,1585,3.818,1650,3.818,1697,3.818,1972,3.818,2012,6.302,2013,3.818,2014,3.818,2015,3.818,2016,3.818,2017,5.14,2018,4.371,2019,5.859,2020,5.859,2021,3.818,2022,3.818,2023,3.818,2024,3.818,2025,4.371,2026,4.371,2027,5.859,2028,4.371,2029,4.371,2030,4.371,2031,4.371,2032,4.371,2033,4.371,2034,4.371,2035,4.371,2036,4.371,2037,4.371,2038,4.371,2039,4.371,2040,4.371,2041,4.371,2042,4.371]],["title/modules/UiRoutingModule.html",[185,1.232,2017,2.802]],["body/modules/UiRoutingModule.html",[0,0.892,2,0.182,3,0.182,8,0.142,29,0.013,37,0.437,38,1.062,39,0.167,40,0.009,148,2.175,154,0.011,155,0.011,185,1.845,205,3.614,246,3.359,251,5.405,252,5.309,255,2.422,258,5.405,259,4.504,290,4.196,292,4.504,296,4.947,1750,4.889,1971,5.405,2017,4.947,2024,5.405,2043,5.405,2044,6.188]],["title/interfaces/UiState.html",[287,0.734,2045,3.265]],["body/interfaces/UiState.html",[2,0.149,3,0.149,8,0.116,19,0.271,20,0.654,29,0.013,32,0.467,37,0.4,39,0.194,111,1.88,115,1.134,154,0.009,155,0.009,213,1.331,267,1.514,287,1.328,379,1.952,397,2.63,566,2.825,636,2.324,780,2.314,812,2.127,1080,2.861,1143,3.201,1415,4.702,1417,4.381,1422,2.755,1426,4.011,1812,5.105,1813,4.434,1814,6.417,1815,6.478,2045,5.91,2046,4.434,2047,5.643,2048,7.106,2049,7.106,2050,5.076,2051,5.076,2052,5.076,2053,5.076,2054,4.434,2055,4.434,2056,6.207,2057,4.434,2058,5.238,2059,4.434,2060,4.434,2061,4.434,2062,4.434,2063,4.434,2064,4.434]],["title/components/WeatherComponent.html",[0,0.596,150,1.273]],["body/components/WeatherComponent.html",[0,1.025,1,0.966,2,0.139,3,0.095,4,1.103,5,1.067,6,1.103,7,0.877,8,0.074,10,1.095,11,2.05,12,1.103,13,2.811,14,2.248,15,1.794,17,1.794,19,0.173,20,0.48,22,1.168,23,2.594,24,0.901,25,1.049,28,1.311,29,0.013,30,1.817,31,0.556,32,0.527,33,1.067,34,0.965,35,1.42,37,0.39,38,0.556,39,0.074,40,0.005,49,2.6,63,4.091,77,2.353,78,2.064,82,1.606,83,2.359,87,2.695,92,0.906,96,0.797,97,1.617,98,1.285,99,1.563,100,2.107,101,1.103,106,0.95,107,1.103,108,0.999,109,1.103,110,0.999,111,1.694,112,1.027,113,1.103,114,0.999,115,1.589,116,1.103,117,0.999,118,1.067,119,1.103,120,0.999,121,1.103,122,0.999,123,1.032,124,1.617,125,0.966,126,1.103,127,0.999,128,1.103,129,0.999,130,0.999,131,1.103,132,1.103,133,0.999,134,1.103,135,0.966,136,1.103,137,0.999,138,0.877,139,1.617,140,0.999,141,1.463,142,0.999,143,1.103,144,0.999,145,1.103,146,0.966,147,1.103,148,0.966,149,1.103,150,1.907,151,1.103,152,0.999,153,1.103,154,0.007,155,0.007,165,2.578,172,1.679,182,4.14,213,0.85,243,0.81,244,0.81,265,3.534,267,2.053,268,3.614,270,3.003,271,2.669,272,3.524,273,3.524,274,3.524,279,2.669,280,1.245,281,2.353,284,1.42,304,2.46,317,3.377,319,2.369,320,3.359,321,3.325,322,3.722,335,1.278,342,1.679,343,1.679,344,1.679,345,1.679,346,1.679,349,1.679,358,1.949,359,2.561,361,1.759,362,1.539,363,4.195,364,2.831,368,1.224,369,1.679,371,1.783,372,1.679,374,1.679,375,1.679,379,1.131,392,1.949,396,1.42,397,1.679,398,2.462,402,2.785,419,2.359,425,4.441,437,4.89,442,2.561,443,5.011,531,2.359,611,1.477,1021,1.539,1187,4.441,1382,2.198,1550,3.457,2065,3.241,2066,5.621,2067,4.749,2068,6.189,2069,4.749,2070,6.189,2071,4.749,2072,5.621,2073,3.241,2074,4.749,2075,5.621,2076,4.749,2077,3.241,2078,4.749,2079,3.241,2080,3.241,2081,3.241,2082,3.241,2083,3.241,2084,4.749,2085,3.241,2086,3.241,2087,3.241,2088,3.241,2089,3.241,2090,2.831,2091,3.241,2092,3.241,2093,3.241,2094,4.749,2095,4.749,2096,4.749,2097,3.241,2098,6.588,2099,3.241,2100,3.241,2101,4.749,2102,3.241,2103,3.241,2104,3.241,2105,3.241,2106,3.241,2107,3.241,2108,4.749,2109,3.241]],["title/interfaces/WeatherConditions.html",[287,0.734,363,2.631]],["body/interfaces/WeatherConditions.html",[2,0.162,3,0.162,8,0.126,19,0.295,20,0.688,29,0.013,31,1.428,32,0.572,39,0.156,47,1.231,63,4.95,154,0.01,155,0.01,182,4.847,244,1.189,267,2.36,287,1.208,305,2.616,321,2.511,335,1.384,347,4.354,363,4.331,603,1.941,772,3.879,803,3.99,1400,4.354,2110,4.813,2111,6.087,2112,6.087,2113,7.703,2114,4.813,2115,4.813,2116,4.813,2117,4.813,2118,6.444,2119,4.813,2120,4.813,2121,4.813,2122,4.813,2123,4.813,2124,4.813,2125,5.829,2126,5.94,2127,5.374,2128,5.94]],["title/modules/WeatherModule.html",[185,1.232,1467,2.802]],["body/modules/WeatherModule.html",[2,0.182,3,0.182,8,0.142,29,0.013,37,0.415,38,1.064,39,0.167,40,0.009,96,1.524,154,0.011,155,0.011,185,2.177,187,3.071,188,3.963,189,3.364,190,3.4,201,3.467,202,1.384,203,3.211,205,3.617,322,4.982,1467,5.618,2129,5.414,2130,5.414,2131,6.198,2132,6.198]],["title/injectables/WeatherService.html",[293,1.618,322,2.485]],["body/injectables/WeatherService.html",[2,0.106,3,0.106,8,0.083,14,1.111,19,0.193,20,0.519,22,1.261,24,0.685,25,1.011,28,1.334,29,0.013,30,1.452,31,1.33,32,0.542,34,1.117,35,1.58,37,0.408,38,0.619,39,0.083,40,0.005,47,1.807,49,2.927,92,1.008,106,1.059,112,0.78,154,0.007,155,0.007,184,2.033,190,2.247,202,1.452,226,1.52,243,1.159,244,1.159,245,2.896,247,1.362,267,1.939,293,2.337,305,3.391,321,3.759,322,3.085,335,0.619,363,5.041,367,1.362,368,1.937,371,2.122,376,2.436,379,1.549,524,1.464,559,1.938,597,2.625,602,1.868,611,2.338,685,1.868,688,1.957,716,1.868,717,2.625,719,2.964,728,2.964,735,2.784,780,1.643,798,1.643,799,3.369,800,1.957,813,2.057,884,2.247,1039,4.48,1045,3.15,1048,4.053,1080,1.27,1268,3.15,1289,3.734,1301,3.911,1305,2.849,1567,4.717,1586,2.849,1629,4.48,1666,3.15,1708,6.237,1740,3.15,2090,3.15,2133,3.606,2134,7.748,2135,7.141,2136,5.13,2137,5.13,2138,5.13,2139,5.13,2140,5.97,2141,6.503,2142,5.13,2143,5.13,2144,3.606,2145,6.503,2146,5.13,2147,5.13,2148,3.606,2149,3.606,2150,3.606,2151,3.606,2152,3.15,2153,3.606,2154,3.606,2155,3.606,2156,3.606,2157,5.13,2158,3.606,2159,5.13,2160,5.13,2161,3.606,2162,5.13,2163,3.606,2164,5.13,2165,3.606,2166,4.48,2167,4.48,2168,5.13,2169,3.606,2170,5.13,2171,3.15,2172,3.606,2173,3.606,2174,3.606,2175,3.606,2176,3.606,2177,3.606,2178,3.606,2179,3.606,2180,3.606,2181,3.606,2182,3.606,2183,3.606,2184,3.606,2185,3.606,2186,3.606,2187,3.606,2188,5.13,2189,3.606,2190,3.606,2191,5.97,2192,3.606,2193,3.606,2194,3.606,2195,3.606,2196,3.606,2197,3.606,2198,3.606,2199,3.606,2200,3.15,2201,3.606]],["title/components/WizardComponent.html",[0,0.596,152,1.273]],["body/components/WizardComponent.html",[0,0.968,1,1.014,2,0.144,3,0.1,4,1.158,5,1.119,6,1.158,7,0.92,8,0.078,10,1.134,11,2.107,12,1.158,13,2.826,14,2.224,15,1.857,17,1.857,19,0.386,20,0.497,22,1.209,23,2.309,24,0.934,25,0.931,28,1.05,29,0.013,30,1.564,31,0.844,32,0.457,33,0.645,37,0.403,38,0.584,39,0.078,40,0.005,45,1.467,47,1.414,49,1.284,71,3.807,72,4.565,73,1.685,74,1.846,75,1.489,77,1.685,82,1.685,84,1.846,93,2.306,94,2.165,96,0.836,97,1.674,98,1.331,99,1.619,100,2.155,101,1.158,106,0.912,107,1.158,108,1.048,109,1.158,110,1.048,111,1.882,112,1.249,113,1.158,114,1.048,115,1.651,116,1.158,117,1.048,118,1.902,119,1.158,120,1.048,121,1.158,122,1.048,123,1.083,124,1.674,125,1.014,126,1.158,127,1.048,128,1.158,129,1.048,130,1.048,131,1.158,132,1.158,133,1.048,134,1.158,135,1.014,136,1.158,137,1.048,138,1.564,139,1.674,140,1.048,141,1.78,142,1.048,143,1.158,144,1.048,145,1.158,146,1.014,147,1.158,148,1.014,149,1.158,150,1.048,151,1.158,152,1.951,153,1.158,154,0.007,155,0.007,163,3.58,164,3.918,165,3.436,174,2.805,177,3.58,182,2.045,232,1.284,243,0.709,244,0.709,246,1.846,259,2.475,262,1.24,267,1.467,284,1.489,305,2.335,312,3.807,313,3.58,314,2.241,315,2.687,316,5.532,318,3.006,323,3.335,352,4.565,353,2.475,354,1.846,357,1.939,363,2.165,367,1.284,368,1.284,371,1.713,376,2.335,379,1.376,396,1.489,398,2.531,402,2.862,422,4.293,435,3.132,477,2.475,524,1.381,531,2.475,552,2.687,566,2.391,611,3.369,728,1.55,780,2.241,803,1.761,984,1.685,1005,1.685,1011,1.614,1021,1.614,1127,2.475,1149,4.117,1298,2.045,1309,4.031,1323,2.687,1359,3.886,1360,3.886,1377,2.687,1382,2.306,1389,2.475,1561,4.031,1923,5.002,1949,6.306,1955,5.046,1990,2.97,2111,2.687,2112,2.687,2202,3.4,2203,5.777,2204,4.918,2205,6.115,2206,6.33,2207,4.918,2208,6.33,2209,3.4,2210,3.4,2211,3.4,2212,4.918,2213,6.33,2214,3.4,2215,5.529,2216,4.918,2217,5.529,2218,4.918,2219,3.4,2220,3.4,2221,3.4,2222,3.4,2223,3.4,2224,3.4,2225,3.4,2226,4.296,2227,3.4,2228,3.4,2229,3.4,2230,7.392,2231,5.777,2232,6.716,2233,5.777,2234,3.4,2235,5.777,2236,5.046,2237,3.4,2238,3.4,2239,3.4,2240,3.4,2241,3.4,2242,3.4,2243,3.4,2244,3.4,2245,3.4,2246,3.4,2247,3.4,2248,3.4,2249,3.4,2250,3.4,2251,3.4,2252,3.4,2253,3.4,2254,4.918]],["title/injectables/WizardService.html",[293,1.618,318,1.962]],["body/injectables/WizardService.html",[2,0.127,3,0.127,8,0.099,19,0.434,20,0.59,22,1.433,24,0.823,25,1.037,28,1.282,29,0.013,30,1.846,31,1.366,32,0.597,37,0.404,38,0.745,39,0.099,40,0.006,47,1.689,106,1.058,115,0.969,141,1.336,154,0.009,155,0.009,202,1.572,213,1.137,232,1.638,243,1.058,244,1.058,262,1.582,293,2.577,317,3.59,318,2.767,335,1.298,361,2.354,362,2.059,559,2.036,566,2.201,569,2.608,611,1.977,636,2.114,637,6.748,639,3.446,717,3.157,812,1.919,1131,3.164,1137,2.608,1139,2.474,1145,2.608,1147,3.505,1148,3.505,1149,4.188,1150,2.608,1289,3.157,1298,2.608,1612,3.953,2058,4.98,2205,6.414,2217,6.148,2255,4.337,2256,5.828,2257,5.828,2258,7.038,2259,7.038,2260,5.828,2261,5.828,2262,5.828,2263,4.337,2264,5.828,2265,4.337,2266,5.828,2267,4.337,2268,4.337,2269,4.337,2270,4.337,2271,5.828,2272,4.337,2273,4.337,2274,4.337,2275,4.337,2276,4.337,2277,4.337,2278,4.337]],["title/interfaces/WizardState.html",[287,0.734,2058,2.802]],["body/interfaces/WizardState.html",[2,0.138,3,0.138,8,0.108,19,0.366,20,0.622,28,1.283,29,0.013,31,1.248,32,0.525,33,0.892,37,0.366,39,0.18,92,1.314,111,1.631,115,1.05,154,0.009,155,0.009,190,2.693,241,2.329,262,2.498,267,1.402,280,1.232,287,1.092,295,1.967,335,1.372,376,2.919,379,1.796,396,2.059,397,4.007,398,3.303,566,3.178,611,3.525,636,2.352,812,2.631,1137,2.827,1138,1.909,1139,2.681,1143,3.96,1145,2.827,1147,2.827,1148,2.827,1150,2.827,1151,3.697,1417,4.169,1418,3.714,1419,3.714,1422,2.551,1425,3.714,1831,5.37,2058,5.638,2279,3.714,2280,4.701,2281,4.106,2282,4.106,2283,6.148,2284,6.148,2285,6.148,2286,6.148,2287,4.701,2288,4.106,2289,4.106,2290,4.106,2291,4.106,2292,4.106,2293,4.106,2294,4.106,2295,4.106]],["title/dependencies.html",[187,2.462,2296,3.45]],["body/dependencies.html",[29,0.013,38,0.969,44,4.11,154,0.01,155,0.01,187,2.798,208,5.455,209,5.025,213,1.48,246,3.065,247,2.133,354,3.065,464,4.932,1245,4.932,1246,4.932,1298,3.396,1738,4.932,1744,4.932,1745,4.932,1998,4.932,2021,4.932,2022,4.932,2023,4.932,2297,5.647,2298,8.442,2299,5.647,2300,5.647,2301,5.647,2302,5.647,2303,6.904,2304,5.647,2305,6.904,2306,5.647,2307,7.769,2308,5.647,2309,5.647,2310,5.647,2311,5.647,2312,5.647,2313,5.647,2314,5.647,2315,5.647,2316,5.647,2317,5.647,2318,5.647,2319,5.647,2320,5.647,2321,5.647,2322,5.647,2323,5.647,2324,5.647,2325,4.932,2326,5.647,2327,6.904,2328,5.647,2329,5.647,2330,5.647,2331,5.647,2332,5.647,2333,5.647,2334,5.647,2335,5.647,2336,5.647,2337,5.647,2338,5.647]],["title/miscellaneous/enumerations.html",[2339,1.968,2340,4.341]],["body/miscellaneous/enumerations.html",[19,0.278,29,0.013,34,1.487,45,2.406,111,1.892,112,1.633,154,0.01,155,0.01,202,1.775,280,1.885,347,5.187,399,3.948,551,4.547,561,5.187,563,5.734,564,5.734,565,3.948,566,2.94,567,3.948,600,3.948,606,2.697,743,2.969,749,3.563,751,3.4,812,1.714,819,3.563,1080,2.659,1131,2.826,1132,3.131,1138,2.919,1139,3.744,1140,2.969,1141,2.969,1142,2.969,1143,2.579,1144,3.315,1350,3.531,1351,3.789,1355,4.778,1400,4.114,1507,3.131,1508,3.315,1511,3.131,1512,3.131,1513,2.826,2110,4.547,2114,4.547,2115,4.547,2116,4.547,2117,4.547,2118,6.28,2119,4.547,2120,4.547,2121,4.547,2122,4.547,2123,4.547,2124,4.547,2125,5.681,2126,5.734,2127,5.187,2128,5.734,2339,2.969,2340,4.547,2341,5.206,2342,4.547,2343,5.206,2344,4.547,2345,5.206,2346,4.547]],["title/miscellaneous/functions.html",[241,2.462,2339,1.968]],["body/miscellaneous/functions.html",[19,0.3,29,0.012,34,1.181,45,1.674,49,2.598,106,1.193,111,1.337,154,0.01,155,0.01,225,6.497,241,2.781,243,1.193,244,1.193,267,2.052,280,2.122,466,5.007,591,4.086,636,2.079,715,2.781,716,3.564,1024,4.436,1038,4.903,1040,6.009,1041,4.903,1042,3.807,1043,4.903,1047,4.903,1048,4.436,1049,4.903,1080,1.978,1138,3.02,1289,4.086,1416,4.436,1422,4.038,1423,4.903,1773,6.009,1774,5.436,1824,4.436,1827,4.903,2226,6.497,2279,4.436,2282,4.903,2339,3.202,2347,7.072,2348,6.879,2349,6.879,2350,4.903,2351,5.614,2352,6.879,2353,4.903,2354,6.879,2355,4.903,2356,5.614,2357,5.614,2358,5.614,2359,5.614,2360,6.879,2361,5.614]],["title/index.html",[19,0.184,565,2.075,719,1.573]],["body/index.html",[8,0.172,29,0.01,41,4.78,42,4.527,43,2.936,44,4.171,45,2.077,46,2.611,47,1.556,48,4.527,49,2.164,52,3.886,54,5.504,55,6.085,56,5.005,57,5.005,58,5.005,59,2.968,60,5.005,64,5.005,65,3.608,67,5.005,69,7.193,99,1.886,123,1.825,154,0.01,155,0.01,234,4.527,241,3.451,376,3.707,533,4.527,594,5.005,826,3.973,984,2.839,1080,2.454,1166,4.527,1311,5.005,1322,5.824,1626,6.989,2167,5.005,2362,5.73,2363,5.73,2364,8.419,2365,5.73,2366,7.506,2367,6.966,2368,5.73,2369,5.73,2370,5.73,2371,6.966,2372,5.73,2373,5.73,2374,5.73,2375,5.73,2376,5.73,2377,5.73,2378,6.966,2379,5.73,2380,5.73,2381,5.73,2382,5.73,2383,5.73]],["title/license.html",[53,2.34,565,2.075,719,1.573]],["body/license.html",[8,0.133,29,0.01,46,3.204,52,3.944,53,3.944,65,3.013,102,5.969,103,4.595,104,4.595,154,0.01,155,0.01,164,3.944,190,2.548,203,3.013,280,1.525,305,2.762,784,3.317,824,3.317,877,3.317,1094,5.116,1523,6.14,1540,4.595,1575,5.08,1580,5.08,1687,6.14,2166,5.08,2215,5.08,2384,5.816,2385,5.816,2386,5.816,2387,5.816,2388,5.816,2389,7.848,2390,8.39,2391,7.029,2392,7.554,2393,5.816,2394,7.554,2395,5.816,2396,5.816,2397,5.816,2398,5.816,2399,5.816,2400,5.816,2401,5.816,2402,5.816,2403,5.816,2404,5.816,2405,5.816,2406,7.029,2407,7.029,2408,5.816,2409,5.816,2410,7.029,2411,5.816,2412,5.816,2413,5.816,2414,5.816,2415,5.816,2416,5.816,2417,5.816,2418,5.816,2419,5.816,2420,5.816,2421,5.816,2422,5.816,2423,5.816,2424,5.816,2425,5.816,2426,5.816,2427,5.816]],["title/modules.html",[185,1.682]],["body/modules.html",[29,0.011,154,0.011,155,0.011,185,1.845,186,4.504,195,4.196,196,4.196,197,4.196,198,4.196,199,3.721,200,4.196,209,6.131,884,3.398,1430,3.94,1467,4.196,1628,6.775,1695,7.358,2012,4.504,2017,4.196,2428,8.423,2429,8.544]],["title/overview.html",[2430,4.927]],["body/overview.html",[0,0.626,1,1.964,29,0.013,39,0.099,40,0.006,96,1.068,108,2.381,110,2.029,114,2.029,117,2.029,120,2.381,122,2.029,125,1.964,127,2.381,129,2.029,130,2.381,133,2.029,135,1.964,137,2.029,140,2.029,142,2.029,144,2.029,146,1.964,148,1.964,150,2.029,152,2.029,154,0.009,155,0.009,184,1.478,185,1.739,186,6.205,187,2.151,188,2.357,189,2.357,190,1.902,191,3.793,192,3.793,193,3.793,194,3.793,195,4.467,196,4.982,197,4.982,198,5.241,199,5.013,200,5.241,201,2.769,202,0.97,203,2.249,287,0.771,293,1.7,299,3.431,318,3.127,320,3.575,322,3.961,324,4.194,444,4.194,550,3.961,660,3.793,661,3.793,1164,4.467,1299,3.793,1300,3.793,1301,3.961,1430,4.921,1464,3.793,1465,3.793,1466,3.793,1467,4.982,1561,4.194,1730,3.793,1731,3.793,1732,3.793,1733,3.793,1804,3.793,1805,3.793,2012,6.292,2013,3.793,2014,3.793,2015,3.793,2016,3.793,2017,4.467,2129,3.793,2130,3.793,2236,3.793,2430,3.793,2431,4.342,2432,4.342,2433,4.342,2434,4.342]],["title/miscellaneous/typealiases.html",[2339,1.968,2435,4.97]],["body/miscellaneous/typealiases.html",[19,0.335,29,0.013,31,1.074,32,0.452,154,0.011,155,0.011,202,1.74,335,1.074,1024,4.945,1033,6.807,1131,3.397,1132,3.763,1140,3.569,1141,3.569,1142,3.569,1151,4.686,1350,4.244,1351,4.555,1357,5.672,1507,3.763,1508,3.985,1511,3.763,1512,3.763,1516,4.962,2339,3.569,2342,5.466,2344,5.466,2346,5.466,2347,5.466,2436,6.258]],["title/miscellaneous/variables.html",[2339,1.968,2437,4.341]],["body/miscellaneous/variables.html",[5,1.487,19,0.122,29,0.013,31,0.884,32,0.598,33,1.569,34,1.419,39,0.154,43,2.524,45,2.096,47,0.809,49,2.123,59,1.179,61,1.081,75,0.997,86,0.86,92,1.673,96,0.891,111,0.863,141,0.702,154,0.005,155,0.005,184,0.775,199,2.715,201,1.081,232,2.702,241,2.237,243,0.328,252,1.657,255,1.768,262,2.449,287,0.404,295,1.393,321,1.652,334,1.796,335,1.028,367,1.705,397,2.667,412,1.989,413,3.166,419,1.657,467,3.944,468,3.944,469,3.944,477,2.638,496,1.799,504,1.989,508,1.989,513,1.322,519,1.989,520,3.166,524,1.472,528,1.989,532,3.166,534,1.799,553,2.864,555,1.799,566,2.811,591,1.657,606,2.911,611,2.346,636,2.168,650,2.308,665,1.721,684,2.911,715,1.128,723,2.308,744,1.236,749,1.236,751,1.179,755,1.298,780,1.038,788,1.967,790,2.339,798,2.058,799,1.179,800,1.236,803,3.101,812,1.85,815,1.298,816,1.796,817,3.646,839,1.236,914,1.877,975,1.877,1003,1.298,1004,1.298,1005,1.128,1009,1.298,1011,1.721,1021,1.721,1042,1.544,1080,2.476,1094,2.638,1143,2.785,1180,4.571,1184,2.864,1247,3.944,1259,3.166,1261,2.864,1263,1.989,1264,1.989,1265,1.989,1305,2.864,1309,1.45,1349,1.799,1378,3.944,1382,1.544,1415,4.571,1416,1.799,1421,3.944,1422,3.25,1426,2.864,1429,3.944,1430,3.278,1431,1.989,1432,1.989,1433,1.989,1434,1.989,1436,1.989,1437,1.989,1438,1.989,1439,1.989,1440,1.989,1441,1.989,1442,1.989,1443,1.989,1444,1.989,1445,1.989,1446,1.989,1447,1.989,1448,1.989,1513,3.051,1536,1.989,1670,1.989,1728,1.989,1729,1.989,1734,1.989,1737,1.989,1739,1.989,1741,1.989,1742,1.989,1743,1.989,1809,4.851,1810,1.989,1812,4.068,1814,5.553,1815,6.313,1817,1.989,1818,4.497,1819,1.989,1820,2.864,1821,1.989,1822,1.989,1823,1.989,1824,1.799,1826,3.944,1832,1.989,1834,3.944,1835,3.944,1836,1.989,1837,3.944,1877,1.989,2043,1.989,2045,2.864,2046,1.989,2047,3.166,2054,1.989,2055,1.989,2056,4.909,2057,1.989,2058,4.924,2059,1.989,2060,1.989,2061,1.989,2062,1.989,2063,1.989,2064,1.989,2111,1.799,2112,1.799,2125,1.799,2127,1.799,2152,1.989,2171,5.229,2200,3.166,2279,1.799,2281,3.944,2288,3.944,2289,1.989,2290,3.944,2291,1.989,2292,3.944,2293,1.989,2294,3.944,2295,1.989,2325,3.166,2339,1.298,2350,3.166,2353,4.497,2355,4.909,2437,1.989,2438,4.515,2439,5.987,2440,7.442,2441,2.277,2442,2.277,2443,2.277,2444,2.277,2445,2.277,2446,2.277,2447,2.277,2448,3.624,2449,2.277,2450,7.153,2451,3.624,2452,3.624,2453,3.624,2454,3.624,2455,3.624,2456,4.515,2457,3.624,2458,3.624,2459,2.277,2460,2.277,2461,2.277,2462,3.624,2463,2.277,2464,2.277,2465,2.277,2466,4.515,2467,4.515,2468,4.515,2469,3.624,2470,3.624,2471,5.148,2472,2.277,2473,4.515,2474,2.277,2475,2.277,2476,3.624,2477,2.277,2478,2.277,2479,2.277,2480,2.277,2481,3.624,2482,2.277,2483,2.277,2484,2.277,2485,2.277,2486,2.277,2487,5.148,2488,2.277,2489,3.624,2490,2.277,2491,5.148,2492,2.277,2493,2.277,2494,2.277,2495,2.277,2496,2.277,2497,2.277,2498,2.277,2499,2.277,2500,2.277,2501,2.277,2502,2.277,2503,2.277,2504,2.277,2505,2.277,2506,2.277,2507,2.277,2508,2.277,2509,2.277,2510,2.277,2511,2.277,2512,2.277,2513,3.624,2514,2.277,2515,2.277,2516,2.277,2517,2.277,2518,2.277,2519,2.277,2520,2.277,2521,2.277,2522,2.277,2523,2.277,2524,2.277,2525,4.515,2526,2.277,2527,3.624,2528,2.277,2529,2.277,2530,2.277,2531,2.277,2532,2.277,2533,2.277,2534,3.624,2535,2.277,2536,2.277,2537,2.277,2538,2.277,2539,2.277,2540,2.277,2541,2.277,2542,2.277,2543,2.277,2544,2.277,2545,3.624,2546,2.277,2547,2.277,2548,2.277,2549,2.277,2550,2.277,2551,2.277,2552,2.277,2553,2.277]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["0.0.3",{"_index":2321,"title":{},"body":{"dependencies.html":{}}}],["0.009",{"_index":2531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.05em",{"_index":1280,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.15em",{"_index":1281,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.1em",{"_index":1279,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.25",{"_index":2547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.3",{"_index":1260,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.4",{"_index":2004,"title":{},"body":{"components/UiComponent.html":{}}}],["0.404",{"_index":2532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":1267,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.5.7",{"_index":2326,"title":{},"body":{"dependencies.html":{}}}],["0.75",{"_index":2549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":2338,"title":{},"body":{"dependencies.html":{}}}],["0.91",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00",{"_index":1052,"title":{},"body":{"classes/EnumValues.html":{}}}],["004ba0",{"_index":2522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01d",{"_index":2536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["02d",{"_index":2537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["03d",{"_index":2538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04d",{"_index":2539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["09d",{"_index":2540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0m",{"_index":2485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":184,"title":{"classes/Reset-1.html":{},"interfaces/SimulationState-1.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1.0",{"_index":2319,"title":{},"body":{"dependencies.html":{}}}],["1.455",{"_index":2533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10",{"_index":2200,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":1011,"title":{},"body":{"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":1039,"title":{},"body":{"classes/EnumValues.html":{},"injectables/WeatherService.html":{}}}],["1000)).slice",{"_index":1053,"title":{},"body":{"classes/EnumValues.html":{}}}],["10000",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10d",{"_index":2541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":2431,"title":{},"body":{"overview.html":{}}}],["11d",{"_index":2542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.476358",{"_index":2498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12px",{"_index":1127,"title":{},"body":{"components/FooterComponent.html":{},"components/NumericComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["13",{"_index":1528,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["13d",{"_index":2543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14px",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["16",{"_index":1406,"title":{},"body":{"components/MapComponent.html":{}}}],["16px",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/WizardComponent.html":{}}}],["17",{"_index":2434,"title":{},"body":{"overview.html":{}}}],["18",{"_index":1381,"title":{},"body":{"components/MapComponent.html":{}}}],["196/2003",{"_index":1531,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["1976d2",{"_index":2523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1]).patchvalu",{"_index":1117,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["1].destin",{"_index":1097,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["1].edg",{"_index":991,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["2",{"_index":524,"title":{"classes/Reset-2.html":{}},"body":{"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":2330,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2331,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":2328,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":2335,"title":{},"body":{"dependencies.html":{}}}],["2.54",{"_index":2201,"title":{},"body":{"injectables/WeatherService.html":{}}}],["2.7.3",{"_index":2322,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2016/679",{"_index":1534,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["2018",{"_index":2385,"title":{},"body":{"license.html":{}}}],["20px",{"_index":423,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["21",{"_index":2432,"title":{},"body":{"overview.html":{}}}],["23",{"_index":2433,"title":{},"body":{"overview.html":{}}}],["24",{"_index":1728,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["24px",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{},"components/SimulationComponent.html":{}}}],["250px",{"_index":1995,"title":{},"body":{"components/UiComponent.html":{}}}],["2px",{"_index":1130,"title":{},"body":{"components/FooterComponent.html":{}}}],["3",{"_index":1021,"title":{},"body":{"classes/Edge.html":{},"classes/EnumValues.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["3.6",{"_index":859,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["30",{"_index":2502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30vh",{"_index":1285,"title":{},"body":{"components/HomeComponent.html":{}}}],["32px",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["36px",{"_index":1505,"title":{},"body":{"components/NumericComponent.html":{}}}],["4",{"_index":1382,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["40",{"_index":2464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41.910943",{"_index":2497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48px",{"_index":1120,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/SimulationComponent.html":{}}}],["4px",{"_index":418,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SimulationComponent.html":{}}}],["5",{"_index":477,"title":{},"body":{"components/ChartsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["5.1.5",{"_index":2314,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":858,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{}}}],["500",{"_index":419,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":1992,"title":{},"body":{"components/UiComponent.html":{}}}],["50d",{"_index":2544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50px",{"_index":2109,"title":{},"body":{"components/WeatherComponent.html":{}}}],["5em",{"_index":1274,"title":{},"body":{"components/HomeComponent.html":{}}}],["5px",{"_index":1282,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.0.1",{"_index":2307,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":2316,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":2305,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":2309,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":2336,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":2333,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1045,"title":{},"body":{"classes/EnumValues.html":{},"injectables/WeatherService.html":{}}}],["60)).slice",{"_index":1046,"title":{},"body":{"classes/EnumValues.html":{}}}],["600px",{"_index":1551,"title":{},"body":{"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["63a4ff",{"_index":2462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64px",{"_index":421,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["666",{"_index":522,"title":{},"body":{"components/ChartsComponent.html":{}}}],["7.0.0",{"_index":2303,"title":{},"body":{"dependencies.html":{}}}],["7.0.4",{"_index":2298,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":1265,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["700",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["70vh",{"_index":1414,"title":{},"body":{"components/MapComponent.html":{}}}],["76d219",{"_index":2507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["840",{"_index":1269,"title":{},"body":{"components/HomeComponent.html":{}}}],["8px",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["9",{"_index":2236,"title":{},"body":{"components/WizardComponent.html":{},"overview.html":{}}}],["900",{"_index":1273,"title":{},"body":{"components/HomeComponent.html":{}}}],["90px",{"_index":2000,"title":{},"body":{"components/UiComponent.html":{}}}],["9999",{"_index":1999,"title":{},"body":{"components/UiComponent.html":{}}}],["about'},{'nam",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["about.component.html",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.compon",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["aboutcompon",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["abov",{"_index":2405,"title":{},"body":{"license.html":{}}}],["absolut",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/UiComponent.html":{}}}],["abstract",{"_index":268,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["abstractcontrol",{"_index":332,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["accept",{"_index":1936,"title":{},"body":{"components/TermsComponent.html":{}}}],["accessor",{"_index":313,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["accordion",{"_index":2010,"title":{},"body":{"components/UiComponent.html":{}}}],["account",{"_index":779,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["acquir",{"_index":1541,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["action",{"_index":280,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["action.payload",{"_index":1831,"title":{},"body":{"interfaces/SimulationState-1.html":{},"interfaces/WizardState.html":{}}}],["action.payload.map",{"_index":1427,"title":{},"body":{"interfaces/MapState.html":{}}}],["action.payload.nextindex",{"_index":2287,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.simul",{"_index":1829,"title":{},"body":{"interfaces/SimulationState-1.html":{}}}],["action.payload.step",{"_index":2285,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.typ",{"_index":1425,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/SimulationState-1.html":{},"interfaces/WizardState.html":{}}}],["actionreducermap",{"_index":1812,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["actions/map.act",{"_index":1420,"title":{},"body":{"interfaces/MapState.html":{}}}],["actions/simulation.act",{"_index":1825,"title":{},"body":{"interfaces/SimulationState-1.html":{}}}],["actions/wizard.act",{"_index":2280,"title":{},"body":{"interfaces/WizardState.html":{}}}],["actual_compon",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["add",{"_index":1103,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{}}}],["adddestin",{"_index":1059,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["adddestination(control",{"_index":1066,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addedge(edg",{"_index":911,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["addorigin",{"_index":1060,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addorigin(control",{"_index":1068,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["addorupdatenode(nod",{"_index":898,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["address",{"_index":1323,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["addweathercondit",{"_index":2137,"title":{},"body":{"injectables/WeatherService.html":{}}}],["addweatherconditions(data",{"_index":2148,"title":{},"body":{"injectables/WeatherService.html":{}}}],["adjust",{"_index":800,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["adjustmentfactorcoeffici",{"_index":2152,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["administr",{"_index":2488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterdatasetsdraw",{"_index":2461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":425,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["again",{"_index":1616,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["algorithm",{"_index":952,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["alias",{"_index":2436,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["alreadi",{"_index":1111,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["altern",{"_index":982,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["analysi",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":2400,"title":{},"body":{"license.html":{}}}],["angular",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":2297,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2302,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/stepp",{"_index":2224,"title":{},"body":{"components/WizardComponent.html":{}}}],["angular/cli",{"_index":2368,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":1738,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1740,"title":{},"body":{"modules/SharedModule.html":{},"injectables/WeatherService.html":{}}}],["angular/compil",{"_index":2299,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1744,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":354,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2300,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":1298,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":246,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"components/WizardComponent.html":{},"dependencies.html":{}}}],["anim",{"_index":1245,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["animate('500m",{"_index":2484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationtriggermetadata",{"_index":2481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anime.timelin",{"_index":1256,"title":{},"body":{"components/HomeComponent.html":{}}}],["animej",{"_index":1246,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["annot",{"_index":2325,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["anoth",{"_index":1619,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["api",{"_index":1322,"title":{},"body":{"injectables/LocationService.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["app.compon",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initi",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":108,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["appconfig",{"_index":2090,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.apikey",{"_index":2181,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.forecasturl",{"_index":2172,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.apis.openweathermap.iconurl",{"_index":2106,"title":{},"body":{"components/WeatherComponent.html":{}}}],["appconfig.apis.openweathermap.weatherurl",{"_index":2173,"title":{},"body":{"injectables/WeatherService.html":{}}}],["appconfig.firebase.projectid",{"_index":2471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appli",{"_index":1183,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["applic",{"_index":1524,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/TermsComponent.html":{}}}],["appmodul",{"_index":186,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppreloadingstrategi",{"_index":233,"title":{"classes/AppPreloadingStrategy.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":195,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["archived.compon",{"_index":1748,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["archived.component.t",{"_index":1456,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["archived.component.ts:11",{"_index":1459,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["archived.component.ts:13",{"_index":1461,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["area",{"_index":1309,"title":{},"body":{"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["area'},{'nam",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["area.compon",{"_index":2027,"title":{},"body":{"modules/UiModule.html":{}}}],["area.component.html",{"_index":1653,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.scss",{"_index":1652,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.t",{"_index":1651,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:16",{"_index":1655,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:18",{"_index":1654,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:21",{"_index":1699,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:23",{"_index":1700,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:27",{"_index":1657,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:28",{"_index":1706,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:33",{"_index":1662,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:35",{"_index":1710,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:42",{"_index":1658,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:43",{"_index":1698,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:46",{"_index":1661,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:50",{"_index":1660,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:53",{"_index":1701,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:59",{"_index":1704,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:73",{"_index":1702,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:78",{"_index":1656,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:81",{"_index":1703,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area/search",{"_index":1650,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules/UiModule.html":{}}}],["area/select",{"_index":1697,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"modules/UiModule.html":{}}}],["areamaxlimit",{"_index":2501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaminlimit",{"_index":2503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argmin",{"_index":668,"title":{},"body":{"injectables/DemandService.html":{}}}],["argmin(linkflow",{"_index":679,"title":{},"body":{"injectables/DemandService.html":{}}}],["argument",{"_index":683,"title":{},"body":{"injectables/DemandService.html":{}}}],["aris",{"_index":2427,"title":{},"body":{"license.html":{}}}],["array",{"_index":704,"title":{},"body":{"injectables/DemandService.html":{}}}],["array(this.odmatrix.length).fill(0",{"_index":725,"title":{},"body":{"injectables/DemandService.html":{}}}],["arriv",{"_index":1800,"title":{},"body":{"components/SimulationComponent.html":{}}}],["arrivedvehicl",{"_index":651,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["art",{"_index":1527,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["assign",{"_index":686,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["assignmentmatrix",{"_index":699,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["assignmentmatrix[z",{"_index":731,"title":{},"body":{"injectables/DemandService.html":{}}}],["associ",{"_index":1580,"title":{},"body":{"injectables/SchedulerService.html":{},"license.html":{}}}],["attach",{"_index":825,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["attribut",{"_index":821,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["author",{"_index":2417,"title":{},"body":{"license.html":{}}}],["avail",{"_index":1628,"title":{},"body":{"injectables/SchedulerService.html":{},"modules.html":{}}}],["avg",{"_index":657,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["avgspe",{"_index":659,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{}}}],["axi",{"_index":520,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":1017,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["babdb",{"_index":2505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bachelor'",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["bachelor\\'",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{}}}],["background",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{},"components/SimulationComponent.html":{}}}],["backgroundcolor",{"_index":525,"title":{},"body":{"components/ChartsComponent.html":{}}}],["bar",{"_index":1457,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["bar'},{'nam",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["base",{"_index":735,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["basecolor",{"_index":2504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basecompon",{"_index":265,"title":{"classes/BaseComponent.html":{}},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:11",{"_index":343,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:13",{"_index":342,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:22",{"_index":346,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:27",{"_index":344,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:32",{"_index":345,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basecomponent:9",{"_index":349,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["basictimelin",{"_index":1255,"title":{},"body":{"components/HomeComponent.html":{}}}],["becom",{"_index":1623,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["befor",{"_index":972,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["beginatzero",{"_index":2457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belong",{"_index":708,"title":{},"body":{"injectables/DemandService.html":{}}}],["beta.19",{"_index":2304,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":744,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["bf",{"_index":968,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["block",{"_index":1278,"title":{},"body":{"components/HomeComponent.html":{}}}],["blur",{"_index":2241,"title":{},"body":{"components/WizardComponent.html":{}}}],["bold",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{}}}],["boolean",{"_index":295,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-2.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["bordercolor",{"_index":498,"title":{},"body":{"components/ChartsComponent.html":{}}}],["borderwidth",{"_index":523,"title":{},"body":{"components/ChartsComponent.html":{}}}],["bottom",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["bound",{"_index":1389,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/TermsComponent.html":{},"components/WizardComponent.html":{}}}],["breadth",{"_index":966,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["break",{"_index":402,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["broken",{"_index":2122,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["brokencloud",{"_index":2121,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["brows",{"_index":2429,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1387,"title":{},"body":{"components/MapComponent.html":{}}}],["buildodpair",{"_index":308,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["buildodpair(odpair",{"_index":328,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["built",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{}}}],["busiest",{"_index":512,"title":{},"body":{"components/ChartsComponent.html":{}}}],["busiestchart",{"_index":429,"title":{},"body":{"components/ChartsComponent.html":{}}}],["busiestchartopt",{"_index":468,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["busiestcolor",{"_index":469,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["busiestctx",{"_index":430,"title":{},"body":{"components/ChartsComponent.html":{}}}],["button",{"_index":422,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["c",{"_index":2384,"title":{},"body":{"license.html":{}}}],["calc",{"_index":1577,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["calcassignmentmatrix(odpair",{"_index":948,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcfactor",{"_index":2138,"title":{},"body":{"injectables/WeatherService.html":{}}}],["calcfactor(adjustmentfactorcoeffici",{"_index":2150,"title":{},"body":{"injectables/WeatherService.html":{}}}],["calcincidencematrix",{"_index":940,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calclinkflow",{"_index":759,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcmaxflow",{"_index":760,"title":{},"body":{"classes/Edge.html":{}}}],["calcmaxflow(factor",{"_index":796,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcodmatrix",{"_index":669,"title":{},"body":{"injectables/DemandService.html":{}}}],["calcpathcosts(odpair",{"_index":1023,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcshortestpath",{"_index":1643,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["calcshortestpaths(odpair",{"_index":936,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcshortestpathsprobabilities(odpair",{"_index":1006,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcul",{"_index":688,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["calendar_today",{"_index":1724,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["call",{"_index":2159,"title":{},"body":{"injectables/WeatherService.html":{}}}],["cancomponentdeactiv",{"_index":288,"title":{"interfaces/CanComponentDeactivate.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/UiComponent.html":{}}}],["candeactiv",{"_index":292,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["candeactivate(compon",{"_index":297,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{}}}],["candeactivateguard",{"_index":296,"title":{"guards/CanDeactivateGuard.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{}}}],["cannnot",{"_index":1618,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["capac",{"_index":532,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["card",{"_index":1550,"title":{},"body":{"components/PrivacyComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["case",{"_index":398,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/SimulationState-1.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["catch((error",{"_index":1672,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["catcherror",{"_index":2169,"title":{},"body":{"injectables/WeatherService.html":{}}}],["catcherror((error",{"_index":2185,"title":{},"body":{"injectables/WeatherService.html":{}}}],["categori",{"_index":1536,"title":{},"body":{"components/PrivacyComponent.html":{},"miscellaneous/variables.html":{}}}],["cd",{"_index":2380,"title":{},"body":{"index.html":{}}}],["cdr",{"_index":1953,"title":{},"body":{"components/UiComponent.html":{}}}],["cell",{"_index":420,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["center",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["central1",{"_index":2470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["central1/networkdata",{"_index":2477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["central1/trafficdata",{"_index":2478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["centroid",{"_index":1396,"title":{},"body":{"components/MapComponent.html":{}}}],["chang",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["changedemand",{"_index":670,"title":{},"body":{"injectables/DemandService.html":{}}}],["changedemand(demand",{"_index":689,"title":{},"body":{"injectables/DemandService.html":{}}}],["changedetectorref",{"_index":1954,"title":{},"body":{"components/UiComponent.html":{}}}],["changeofconditionscompon",{"_index":110,"title":{"components/ChangeOfConditionsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["changes['cent",{"_index":1200,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["changes['zoom",{"_index":1202,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["changestartingtim",{"_index":671,"title":{},"body":{"injectables/DemandService.html":{}}}],["changestartingtimes(startingtim",{"_index":691,"title":{},"body":{"injectables/DemandService.html":{}}}],["changeweath",{"_index":2139,"title":{},"body":{"injectables/WeatherService.html":{}}}],["changeweather(weath",{"_index":2153,"title":{},"body":{"injectables/WeatherService.html":{}}}],["charg",{"_index":2388,"title":{},"body":{"license.html":{}}}],["chart",{"_index":426,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart(this.busiestctx",{"_index":495,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart(this.heavytrafficctx",{"_index":487,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart(this.moderatetrafficctx",{"_index":493,"title":{},"body":{"components/ChartsComponent.html":{}}}],["chart.j",{"_index":464,"title":{},"body":{"components/ChartsComponent.html":{},"dependencies.html":{}}}],["chartj",{"_index":2323,"title":{},"body":{"dependencies.html":{}}}],["charts'},{'nam",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["charts.component.html",{"_index":428,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts.component.scss",{"_index":427,"title":{},"body":{"components/ChartsComponent.html":{}}}],["charts/charts.compon",{"_index":2040,"title":{},"body":{"modules/UiModule.html":{}}}],["chartscompon",{"_index":114,"title":{"components/ChartsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["check",{"_index":707,"title":{},"body":{"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{}}}],["circular",{"_index":925,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["claim",{"_index":2420,"title":{},"body":{"license.html":{}}}],["class",{"_index":40,"title":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/GoOn.html":{},"classes/Heap.html":{},"classes/MapChanged.html":{},"classes/Node.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"overview.html":{}}}],["clear",{"_index":1400,"title":{},"body":{"components/MapComponent.html":{},"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["clearski",{"_index":2114,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["cli",{"_index":2367,"title":{},"body":{"index.html":{}}}],["click",{"_index":1172,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["clock",{"_index":1568,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["clock.servic",{"_index":1807,"title":{},"body":{"modules/SimulationModule.html":{}}}],["clockservic",{"_index":550,"title":{"injectables/ClockService.html":{}},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"overview.html":{}}}],["clockstatist",{"_index":1914,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["cloud",{"_index":2118,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["cloudfunctions.net/networkdata",{"_index":2472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudfunctions.net/trafficdata",{"_index":2474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_demandmodul",{"_index":660,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_demandmodule_provid",{"_index":661,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_locationmodul",{"_index":1299,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_provid",{"_index":1300,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_networkmodul",{"_index":1464,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_import",{"_index":1465,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_provid",{"_index":1466,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":1730,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1731,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1733,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1732,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_simulationmodul",{"_index":1804,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_simulationmodule_provid",{"_index":1805,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_uimodul",{"_index":2013,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_declar",{"_index":2014,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_import",{"_index":2015,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_provid",{"_index":2016,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_weathermodul",{"_index":2129,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_provid",{"_index":2130,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"modules/MaterialModule.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{}}}],["codeaddress",{"_index":1314,"title":{},"body":{"injectables/LocationService.html":{}}}],["codeaddress(address",{"_index":1319,"title":{},"body":{"injectables/LocationService.html":{}}}],["coeffici",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collect",{"_index":1537,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["color",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"miscellaneous/variables.html":{}}}],["combin",{"_index":355,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.incomingedg",{"_index":902,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.outgoingedg",{"_index":905,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["commonmodul",{"_index":1737,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":1102,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["component.candeactiv",{"_index":298,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{}}}],["component_templ",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["comput",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["condit",{"_index":305,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"license.html":{}}}],["conditions'},{'nam",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["conditions.compon",{"_index":2032,"title":{},"body":{"modules/UiModule.html":{}}}],["conditions.component.html",{"_index":307,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.scss",{"_index":306,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.t",{"_index":303,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:110",{"_index":338,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:114",{"_index":340,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:121",{"_index":333,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:125",{"_index":330,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:26",{"_index":326,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:28",{"_index":327,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:30",{"_index":348,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:32",{"_index":351,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:34",{"_index":325,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:47",{"_index":336,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:53",{"_index":341,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:81",{"_index":337,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions/chang",{"_index":302,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"modules/UiModule.html":{}}}],["config",{"_index":368,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["config.json",{"_index":2378,"title":{},"body":{"index.html":{}}}],["config.t",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configur",{"_index":2553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":1540,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"license.html":{}}}],["consol",{"_index":2369,"title":{},"body":{"index.html":{}}}],["const",{"_index":379,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(@inject(mat_snack_bar_data",{"_index":1463,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(data",{"_index":1458,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(dialogref",{"_index":1291,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(edgeid",{"_index":766,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(elementref",{"_index":442,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["constructor(formbuild",{"_index":315,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{}}}],["constructor(http",{"_index":2144,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(map",{"_index":1163,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["constructor(maticonregistri",{"_index":1450,"title":{},"body":{"modules/MaterialModule.html":{}}}],["constructor(network",{"_index":677,"title":{},"body":{"injectables/DemandService.html":{}}}],["constructor(nodeid",{"_index":845,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(payload",{"_index":1134,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(priv",{"_index":717,"title":{},"body":{"injectables/DemandService.html":{},"components/HomeComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["constructor(publ",{"_index":1146,"title":{},"body":{"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(relationid",{"_index":882,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(rout",{"_index":1948,"title":{},"body":{"components/UiComponent.html":{}}}],["constructor(stor",{"_index":569,"title":{},"body":{"injectables/ClockService.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(wizard",{"_index":1566,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["contain",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"classes/Heap.html":{},"interfaces/Path.html":{},"components/UiComponent.html":{}}}],["content",{"_index":531,"title":{},"body":{"components/ChartsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["continu",{"_index":414,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{}}}],["contract",{"_index":2424,"title":{},"body":{"license.html":{}}}],["control",{"_index":399,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"miscellaneous/enumerations.html":{}}}],["control.get([control.length",{"_index":1116,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.length",{"_index":1085,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.paus",{"_index":617,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.push(this.formbuilder.group",{"_index":1115,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.quick",{"_index":625,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.removeat(i",{"_index":1086,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["control.slow",{"_index":623,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.start",{"_index":615,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.step",{"_index":621,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.stop",{"_index":619,"title":{},"body":{"injectables/ClockService.html":{}}}],["control.valu",{"_index":1091,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["convert",{"_index":1666,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["cooki",{"_index":1543,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["cooper",{"_index":1383,"title":{},"body":{"components/MapComponent.html":{}}}],["coordin",{"_index":1308,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["copi",{"_index":2389,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["copyright&nbsp;©&nbsp",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["core",{"_index":2334,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1581,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["correctgraph",{"_index":1627,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["cost",{"_index":961,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["count",{"_index":648,"title":{"interfaces/Counts.html":{}},"body":{"interfaces/Counts.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{}}}],["counts?.arrivedvehicl",{"_index":1801,"title":{},"body":{"components/SimulationComponent.html":{}}}],["counts?.startedvehicl",{"_index":1799,"title":{},"body":{"components/SimulationComponent.html":{}}}],["creat",{"_index":984,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["createchart",{"_index":436,"title":{},"body":{"components/ChartsComponent.html":{}}}],["createfeatureselector",{"_index":1813,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{}}}],["createfeatureselector('simul",{"_index":1819,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector('ui",{"_index":2057,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["creategraph",{"_index":1617,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["createmap",{"_index":1155,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createmap(el",{"_index":1186,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createselector",{"_index":1814,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["cross",{"_index":944,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["curr",{"_index":1236,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{},"classes/Statistics.html":{}}}],["curr.heavytrafficcount",{"_index":1893,"title":{},"body":{"classes/Statistics.html":{}}}],["curr.moderatetrafficcount",{"_index":1894,"title":{},"body":{"classes/Statistics.html":{}}}],["current",{"_index":780,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["currentstep",{"_index":397,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["currentyear",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["d",{"_index":408,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["d.count",{"_index":978,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["d2191a",{"_index":2511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d27519",{"_index":2509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damag",{"_index":2421,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2002,"title":{},"body":{"components/UiComponent.html":{}}}],["data",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"interfaces/Counts.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data.list.length",{"_index":2187,"title":{},"body":{"injectables/WeatherService.html":{}}}],["data.list[0",{"_index":2197,"title":{},"body":{"injectables/WeatherService.html":{}}}],["data.list[0].dt",{"_index":2194,"title":{},"body":{"injectables/WeatherService.html":{}}}],["dataset",{"_index":490,"title":{},"body":{"components/ChartsComponent.html":{}}}],["date",{"_index":1708,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["date().getfullyear",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["date.now",{"_index":644,"title":{},"body":{"injectables/ClockService.html":{}}}],["datetim",{"_index":2023,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["day",{"_index":1711,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["deactiv",{"_index":290,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["deal",{"_index":2391,"title":{},"body":{"license.html":{}}}],["decim",{"_index":2360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["declar",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MessageArchivedComponent.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{},"components/WizardComponent.html":{}}}],["decre",{"_index":1530,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["deepclon",{"_index":1418,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/SimulationState-1.html":{},"interfaces/WizardState.html":{}}}],["deepclone(initialmapst",{"_index":1424,"title":{},"body":{"interfaces/MapState.html":{}}}],["deepclone(initialsimulationst",{"_index":1828,"title":{},"body":{"interfaces/SimulationState-1.html":{}}}],["deepclone(initialwizardst",{"_index":2283,"title":{},"body":{"interfaces/WizardState.html":{}}}],["deepclone(state.map",{"_index":1428,"title":{},"body":{"interfaces/MapState.html":{}}}],["deepclone(state.period",{"_index":1833,"title":{},"body":{"interfaces/SimulationState-1.html":{}}}],["deepclone(state.simul",{"_index":1830,"title":{},"body":{"interfaces/SimulationState-1.html":{}}}],["deepclone(state.step",{"_index":2286,"title":{},"body":{"interfaces/WizardState.html":{}}}],["default",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["degre",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["delay",{"_index":537,"title":{},"body":{"components/ChartsComponent.html":{},"interfaces/Counts.html":{},"components/HomeComponent.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["delet",{"_index":1119,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["deleteodpair",{"_index":1061,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["deleteodpair(i",{"_index":1070,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand",{"_index":323,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"components/WizardComponent.html":{}}}],["demand'},{'nam",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["demand.compon",{"_index":2030,"title":{},"body":{"modules/UiModule.html":{}}}],["demand.component.html",{"_index":1058,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.scss",{"_index":1057,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.t",{"_index":1056,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:142",{"_index":1069,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:150",{"_index":1067,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:23",{"_index":1064,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:25",{"_index":1065,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:27",{"_index":1078,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:29",{"_index":1079,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:31",{"_index":1063,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:44",{"_index":1072,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:50",{"_index":1077,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:59",{"_index":1073,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:81",{"_index":1074,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:85",{"_index":1071,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:93",{"_index":1076,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.length",{"_index":726,"title":{},"body":{"injectables/DemandService.html":{}}}],["demand.servic",{"_index":663,"title":{},"body":{"modules/DemandModule.html":{}}}],["demand/demand.modul",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["demand/demand.servic",{"_index":360,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{}}}],["demand/estim",{"_index":1055,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"modules/UiModule.html":{}}}],["demandmodul",{"_index":196,"title":{"modules/DemandModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules.html":{},"overview.html":{}}}],["demandservic",{"_index":324,"title":{"injectables/DemandService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"injectables/SchedulerService.html":{},"overview.html":{}}}],["deni",{"_index":1688,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["denomin",{"_index":1015,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["densiti",{"_index":747,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["dep",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":187,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":820,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["descript",{"_index":267,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{}}}],["destin",{"_index":748,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["develop",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["dialog",{"_index":1288,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialog'},{'nam",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["dialog.compon",{"_index":1749,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["dialog.component.t",{"_index":1287,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1293,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1296,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1295,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialogref",{"_index":1290,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialogref.afterclos",{"_index":1997,"title":{},"body":{"components/UiComponent.html":{}}}],["dialogresult",{"_index":1987,"title":{},"body":{"components/UiComponent.html":{}}}],["differ",{"_index":983,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["direct",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["directives/pairs.direct",{"_index":2227,"title":{},"body":{"components/WizardComponent.html":{}}}],["disabledefaultui",{"_index":1157,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["disabledoubleclickzoom",{"_index":1158,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["disagre",{"_index":1937,"title":{},"body":{"components/TermsComponent.html":{}}}],["display",{"_index":1180,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/PrivacyComponent.html":{},"miscellaneous/variables.html":{}}}],["displayedcolumn",{"_index":1483,"title":{},"body":{"components/NumericComponent.html":{}}}],["dissert",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["distanc",{"_index":749,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["distribut",{"_index":2398,"title":{},"body":{"license.html":{}}}],["doc",{"_index":2362,"title":{},"body":{"index.html":{}}}],["document",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":1694,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["domsanit",{"_index":1449,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_code_24px.svg",{"_index":1454,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_more_vert_24px.svg",{"_index":1453,"title":{},"body":{"modules/MaterialModule.html":{}}}],["doubl",{"_index":1171,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["draw",{"_index":762,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["draw(color",{"_index":801,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["drawer",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["drawingopt",{"_index":750,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["drawtim",{"_index":2460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dt",{"_index":2009,"title":{},"body":{"components/UiComponent.html":{}}}],["durat",{"_index":751,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["durationintraff",{"_index":752,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["dynam",{"_index":2301,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1000,"title":{},"body":{"classes/Edge.html":{},"classes/EnumValues.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["e[nam",{"_index":1037,"title":{},"body":{"classes/EnumValues.html":{}}}],["each",{"_index":713,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["earth'",{"_index":834,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["eas",{"_index":1263,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["eceff1",{"_index":417,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SimulationComponent.html":{}}}],["edg",{"_index":513,"title":{"classes/Edge.html":{}},"body":{"components/ChartsComponent.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Simulation.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["edge.calcmaxflow(factor",{"_index":951,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.destination.nodeid",{"_index":929,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.downstream[i",{"_index":1897,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.drawingoptions.infowindow.setcontent('edg",{"_index":1002,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.dur",{"_index":1885,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.edgeid",{"_index":910,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.heavytrafficcount",{"_index":1880,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.label",{"_index":938,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{}}}],["edge.moderatetrafficcount",{"_index":1881,"title":{},"body":{"classes/Statistics.html":{}}}],["edge.origin.nodeid",{"_index":931,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edge.upstream.map((valu",{"_index":1896,"title":{},"body":{"classes/Statistics.html":{}}}],["edgeid",{"_index":753,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edgeofa.edgeid",{"_index":996,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edgeofb.edgeid",{"_index":995,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edges.filter((edg",{"_index":1889,"title":{},"body":{"classes/Statistics.html":{}}}],["edges.push(edg",{"_index":999,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edges.reduce((prev",{"_index":1890,"title":{},"body":{"classes/Statistics.html":{}}}],["edges[m].edgeid",{"_index":943,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["el",{"_index":1189,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{}}}],["element",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["element.delay",{"_index":1500,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.edg",{"_index":1495,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.innerhtml",{"_index":1254,"title":{},"body":{"components/HomeComponent.html":{}}}],["element.innertext",{"_index":1251,"title":{},"body":{"components/HomeComponent.html":{}}}],["element.stop",{"_index":1501,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.trafficcount",{"_index":1499,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.trafficvolum",{"_index":1498,"title":{},"body":{"components/NumericComponent.html":{}}}],["element.waynam",{"_index":1497,"title":{},"body":{"components/NumericComponent.html":{}}}],["elementref",{"_index":443,"title":{},"body":{"components/ChartsComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["elementtyp",{"_index":2489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["empti",{"_index":1726,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["enabl",{"_index":533,"title":{},"body":{"components/ChartsComponent.html":{},"components/GoogleMapComponent.html":{},"index.html":{}}}],["enables/dis",{"_index":1169,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["encapsul",{"_index":1359,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["end",{"_index":606,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["endsimul",{"_index":552,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{}}}],["endtim",{"_index":646,"title":{},"body":{"injectables/ClockService.html":{}}}],["engin",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["enter",{"_index":1727,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["entrycompon",{"_index":1735,"title":{},"body":{"modules/SharedModule.html":{}}}],["enum",{"_index":603,"title":{},"body":{"injectables/ClockService.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"interfaces/LinkFlow.html":{},"classes/MapChanged.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{}}}],["enumer",{"_index":2340,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumvalu",{"_index":366,"title":{"classes/EnumValues.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{}}}],["enumvalues.getvalues(pathtyp",{"_index":1083,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["enumvalues.getvalues(weatherdescript",{"_index":386,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["enumvaluetyp",{"_index":1033,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/typealiases.html":{}}}],["environ",{"_index":817,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["environment.test",{"_index":1001,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["environments/environ",{"_index":818,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["eppstein",{"_index":953,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["error",{"_index":812,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error.cod",{"_index":1685,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.permission_deni",{"_index":1686,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.position_unavail",{"_index":1689,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.timeout",{"_index":1691,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["estim",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["estimate(linkflow",{"_index":693,"title":{},"body":{"injectables/DemandService.html":{}}}],["estimateofdemandcompon",{"_index":117,"title":{"components/EstimateOfDemandComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["estimations[x",{"_index":732,"title":{},"body":{"injectables/DemandService.html":{}}}],["eu",{"_index":1532,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["evalu",{"_index":2160,"title":{},"body":{"injectables/WeatherService.html":{}}}],["event",{"_index":2215,"title":{},"body":{"components/WizardComponent.html":{},"license.html":{}}}],["event.previouslyselectedindex",{"_index":2244,"title":{},"body":{"components/WizardComponent.html":{}}}],["event.selectedindex",{"_index":2245,"title":{},"body":{"components/WizardComponent.html":{}}}],["everpol",{"_index":2320,"title":{},"body":{"dependencies.html":{}}}],["execut",{"_index":558,"title":{},"body":{"injectables/ClockService.html":{}}}],["existingnod",{"_index":899,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.incomingedg",{"_index":901,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.outgoingedg",{"_index":904,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["exit",{"_index":1923,"title":{},"body":{"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["exp",{"_index":1013,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["expans",{"_index":2011,"title":{},"body":{"components/UiComponent.html":{}}}],["explor",{"_index":970,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["export",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":2412,"title":{},"body":{"license.html":{}}}],["extend",{"_index":304,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["extern",{"_index":1547,"title":{},"body":{"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["extract",{"_index":1839,"title":{},"body":{"classes/Statistics.html":{}}}],["factor",{"_index":799,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["fals",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/SimulationState-1.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["fast_forward",{"_index":1798,"title":{},"body":{"components/SimulationComponent.html":{}}}],["fast_rewind",{"_index":1796,"title":{},"body":{"components/SimulationComponent.html":{}}}],["featuresimulationst",{"_index":1818,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["featuretyp",{"_index":2487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["featureuist",{"_index":2056,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["few",{"_index":2117,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["fewcloud",{"_index":2116,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["ffffff",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"index.html":{},"license.html":{}}}],["fill",{"_index":499,"title":{},"body":{"components/ChartsComponent.html":{}}}],["filterpaths(shortestpath",{"_index":985,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["findindex(descript",{"_index":387,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["findoppositeedge(edg",{"_index":926,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["firebas",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["firebaserc",{"_index":2377,"title":{},"body":{"index.html":{}}}],["first",{"_index":967,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{}}}],["fit",{"_index":2415,"title":{},"body":{"license.html":{}}}],["flexlayoutmodul",{"_index":1743,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":685,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["follow",{"_index":1575,"title":{},"body":{"injectables/SchedulerService.html":{},"license.html":{}}}],["font",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["fontcolor",{"_index":529,"title":{},"body":{"components/ChartsComponent.html":{}}}],["fontstyl",{"_index":527,"title":{},"body":{"components/ChartsComponent.html":{}}}],["footer",{"_index":1122,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'nam",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["footer.component.html",{"_index":1124,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1123,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.compon",{"_index":1747,"title":{},"body":{"modules/SharedModule.html":{}}}],["footercompon",{"_index":120,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["forecast",{"_index":2134,"title":{},"body":{"injectables/WeatherService.html":{}}}],["form",{"_index":284,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["formarray",{"_index":352,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{}}}],["format",{"_index":1040,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["formattimefrommillisecond",{"_index":1774,"title":{},"body":{"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"miscellaneous/functions.html":{}}}],["formattimefrommilliseconds(0",{"_index":1787,"title":{},"body":{"components/SimulationComponent.html":{}}}],["formattimefrommilliseconds(clockstatistics.totalprocessingtim",{"_index":1920,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["formattimefrommilliseconds(clockstatistics.totalsimulatedtim",{"_index":1919,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["formattimefrommilliseconds(m",{"_index":1049,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["formattimefrommilliseconds(periods.simulatedtimeperiod",{"_index":1786,"title":{},"body":{"components/SimulationComponent.html":{}}}],["formattimefromsecond",{"_index":466,"title":{},"body":{"components/ChartsComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"miscellaneous/functions.html":{}}}],["formattimefromseconds(",{"_index":1043,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["formattimefromseconds(periods.timeperiods[periods.timeperiods.length",{"_index":1781,"title":{},"body":{"components/SimulationComponent.html":{}}}],["formattimefromseconds(simulationstatistics.totaltim",{"_index":1917,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["formattimefromseconds(this.statistics.busiestedgedelay",{"_index":535,"title":{},"body":{"components/ChartsComponent.html":{}}}],["formattimefromseconds(valu",{"_index":540,"title":{},"body":{"components/ChartsComponent.html":{}}}],["formbuild",{"_index":316,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{}}}],["formgroup",{"_index":312,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["formsmodul",{"_index":1741,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["formstep",{"_index":2208,"title":{},"body":{"components/WizardComponent.html":{}}}],["forroot",{"_index":1751,"title":{},"body":{"modules/SharedModule.html":{}}}],["fraction",{"_index":2545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":784,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["freeflowveloc",{"_index":754,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["frommap",{"_index":2052,"title":{},"body":{"interfaces/UiState.html":{}}}],["frommap.getmap",{"_index":2064,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["frommap.mapreduc",{"_index":2055,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["frommap.mapst",{"_index":2048,"title":{},"body":{"interfaces/UiState.html":{}}}],["fromsimul",{"_index":599,"title":{},"body":{"injectables/ClockService.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{},"interfaces/SimulationState.html":{}}}],["fromsimulation.getend",{"_index":1822,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.getperiod",{"_index":1823,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.getsimul",{"_index":1821,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.simulationreduc",{"_index":1817,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["fromsimulation.simulationst",{"_index":1811,"title":{},"body":{"interfaces/SimulationState.html":{}}}],["fromui",{"_index":361,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["fromwizard",{"_index":2050,"title":{},"body":{"interfaces/UiState.html":{}}}],["fromwizard.getcurrentstep",{"_index":2061,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.geterror",{"_index":2062,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getpend",{"_index":2063,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getstep",{"_index":2060,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardreduc",{"_index":2054,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardst",{"_index":2049,"title":{},"body":{"interfaces/UiState.html":{}}}],["full",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TermsComponent.html":{},"modules/UiRoutingModule.html":{},"components/WizardComponent.html":{}}}],["function",{"_index":241,"title":{"miscellaneous/functions.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/DemandService.html":{},"classes/EnumValues.html":{},"interfaces/MapState.html":{},"interfaces/SimulationState-1.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["functions/src/funct",{"_index":2379,"title":{},"body":{"index.html":{}}}],["furnish",{"_index":2403,"title":{},"body":{"license.html":{}}}],["g",{"_index":2366,"title":{},"body":{"index.html":{}}}],["gdpr",{"_index":1535,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["gener",{"_index":701,"title":{},"body":{"injectables/DemandService.html":{},"classes/Heap.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{}}}],["geocod",{"_index":1311,"title":{},"body":{"injectables/LocationService.html":{},"index.html":{}}}],["geograph",{"_index":1307,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geoloc",{"_index":1312,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geometri",{"_index":2490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gestur",{"_index":1174,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["gesturehandl",{"_index":1159,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["get",{"_index":719,"title":{"index.html":{},"license.html":{}},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["getbusiestedg",{"_index":1840,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedge(edg",{"_index":1852,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgecapac",{"_index":1841,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgecapacity(edg",{"_index":1855,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedata",{"_index":1842,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedata(edg",{"_index":1857,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedelay",{"_index":1843,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgedelay(edg",{"_index":1859,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgelabel",{"_index":1844,"title":{},"body":{"classes/Statistics.html":{}}}],["getbusiestedgelabel(edg",{"_index":1861,"title":{},"body":{"classes/Statistics.html":{}}}],["getcapac",{"_index":763,"title":{},"body":{"classes/Edge.html":{}}}],["getcapacity(timeinterv",{"_index":805,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getcurrentposit",{"_index":1315,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["getcurrentstep",{"_index":2290,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["getedg",{"_index":890,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getedge(edgeid",{"_index":908,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getend",{"_index":1835,"title":{},"body":{"interfaces/SimulationState-1.html":{},"miscellaneous/variables.html":{}}}],["geterror",{"_index":2292,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["getfactor",{"_index":2140,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getformstep",{"_index":2221,"title":{},"body":{"components/WizardComponent.html":{}}}],["getheavytrafficdata",{"_index":1845,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficdata(edg",{"_index":1863,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficedg",{"_index":1846,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficedges(edg",{"_index":1865,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficlabel",{"_index":1847,"title":{},"body":{"classes/Statistics.html":{}}}],["getheavytrafficlabels(edg",{"_index":1867,"title":{},"body":{"classes/Statistics.html":{}}}],["geticon",{"_index":2069,"title":{},"body":{"components/WeatherComponent.html":{}}}],["geticon(cod",{"_index":2076,"title":{},"body":{"components/WeatherComponent.html":{}}}],["getincidencematrix",{"_index":946,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getkjam",{"_index":764,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getlatlng",{"_index":1316,"title":{},"body":{"injectables/LocationService.html":{}}}],["getmap",{"_index":1429,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/variables.html":{}}}],["getmax",{"_index":1709,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getmin",{"_index":1705,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getmoderatetrafficedg",{"_index":1848,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderatetrafficedges(edg",{"_index":1869,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderatetrafficlabel",{"_index":1849,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderatetrafficlabels(edg",{"_index":1871,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderateytrafficdata",{"_index":1850,"title":{},"body":{"classes/Statistics.html":{}}}],["getmoderateytrafficdata(edg",{"_index":1873,"title":{},"body":{"classes/Statistics.html":{}}}],["getnam",{"_index":1026,"title":{},"body":{"classes/EnumValues.html":{}}}],["getnames(",{"_index":1028,"title":{},"body":{"classes/EnumValues.html":{}}}],["getnetwork",{"_index":1613,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["getnetworkdata",{"_index":1620,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["getnod",{"_index":888,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getnode(nodeid",{"_index":894,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodmatrix",{"_index":672,"title":{},"body":{"injectables/DemandService.html":{}}}],["getodnod",{"_index":934,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodnode(label",{"_index":932,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getodpair",{"_index":350,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["getpath",{"_index":1216,"title":{},"body":{"classes/Heap.html":{}}}],["getpend",{"_index":2294,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["getperiod",{"_index":1837,"title":{},"body":{"interfaces/SimulationState-1.html":{},"miscellaneous/variables.html":{}}}],["getrel",{"_index":892,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getscript",{"_index":2348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getscript(src",{"_index":2357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getshortestpath",{"_index":1217,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["getsimul",{"_index":1834,"title":{},"body":{"interfaces/SimulationState-1.html":{},"miscellaneous/variables.html":{}}}],["getstartingtim",{"_index":673,"title":{},"body":{"injectables/DemandService.html":{}}}],["getstatist",{"_index":560,"title":{},"body":{"injectables/ClockService.html":{}}}],["getstep",{"_index":2288,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["gettrafficdata",{"_index":1644,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["gettrafficvolum",{"_index":1851,"title":{},"body":{"classes/Statistics.html":{}}}],["gettrafficvolumes(edg",{"_index":1875,"title":{},"body":{"classes/Statistics.html":{}}}],["getvalu",{"_index":1027,"title":{},"body":{"classes/EnumValues.html":{}}}],["getvalues(",{"_index":1030,"title":{},"body":{"classes/EnumValues.html":{}}}],["getvari",{"_index":765,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getvis",{"_index":309,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["getvisibility(pair",{"_index":331,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["getweathercondit",{"_index":2141,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getweatherdata",{"_index":1629,"title":{},"body":{"injectables/SchedulerService.html":{},"injectables/WeatherService.html":{}}}],["getweatherdata(tim",{"_index":2157,"title":{},"body":{"injectables/WeatherService.html":{}}}],["gl",{"_index":674,"title":{},"body":{"injectables/DemandService.html":{}}}],["gls(linkflow",{"_index":698,"title":{},"body":{"injectables/DemandService.html":{}}}],["go",{"_index":1144,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{}}}],["googl",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["google'",{"_index":1941,"title":{},"body":{"components/TermsComponent.html":{}}}],["google.maps.geocod",{"_index":1331,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderresult",{"_index":1338,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatu",{"_index":1340,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatus.ok",{"_index":1341,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderstatus.zero_result",{"_index":1673,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["google.maps.infowindow",{"_index":852,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.latlng",{"_index":848,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.latlngboundsliter",{"_index":1390,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["google.maps.latlngliter",{"_index":1167,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.maptypeid",{"_index":1178,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["google.maps.maptypeid.roadmap",{"_index":1380,"title":{},"body":{"components/MapComponent.html":{}}}],["google.maps.maptypestyl",{"_index":1184,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["google.maps.mark",{"_index":844,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google.maps.polylin",{"_index":850,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["google\\'",{"_index":1942,"title":{},"body":{"components/TermsComponent.html":{}}}],["googlemapcompon",{"_index":122,"title":{"components/GoogleMapComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["goon",{"_index":1131,"title":{"classes/GoOn.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["goon(data",{"_index":2262,"title":{},"body":{"injectables/WizardService.html":{}}}],["govern",{"_index":1935,"title":{},"body":{"components/TermsComponent.html":{}}}],["grant",{"_index":2387,"title":{},"body":{"license.html":{}}}],["graph",{"_index":884,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"modules.html":{}}}],["graph.calcassignmentmatrix(odpair",{"_index":1639,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcincidencematrix",{"_index":1638,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcmaxflows(factors[0]).pip",{"_index":1646,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["graph.calcshortestpaths(odpairs).pip",{"_index":1637,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["guard",{"_index":299,"title":{"guards/CanDeactivateGuard.html":{}},"body":{"guards/CanDeactivateGuard.html":{},"overview.html":{}}}],["guard.servic",{"_index":1750,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["guard.service.t",{"_index":291,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{}}}],["guard.service.ts:10",{"_index":300,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["h1",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{}}}],["hammerj",{"_index":2329,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":1175,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["hasbackdrop",{"_index":1996,"title":{},"body":{"components/UiComponent.html":{}}}],["header",{"_index":416,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{}}}],["headlin",{"_index":1258,"title":{},"body":{"components/HomeComponent.html":{}}}],["heap",{"_index":814,"title":{"classes/Heap.html":{}},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["heavi",{"_index":504,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["heavytraff",{"_index":2548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heavytrafficchart",{"_index":431,"title":{},"body":{"components/ChartsComponent.html":{}}}],["heavytrafficcolor",{"_index":2510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heavytrafficctx",{"_index":432,"title":{},"body":{"components/ChartsComponent.html":{}}}],["hectar",{"_index":2500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["herebi",{"_index":2386,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":2008,"title":{},"body":{"components/UiComponent.html":{}}}],["hide",{"_index":1393,"title":{},"body":{"components/MapComponent.html":{}}}],["highli",{"_index":2519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holder",{"_index":2418,"title":{},"body":{"license.html":{}}}],["home",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["home.component.html",{"_index":1240,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1239,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.transit",{"_index":1248,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.compon",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home_transit",{"_index":1247,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["homecompon",{"_index":125,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["horizont",{"_index":517,"title":{},"body":{"components/ChartsComponent.html":{}}}],["horizontalbar",{"_index":488,"title":{},"body":{"components/ChartsComponent.html":{}}}],["hour",{"_index":1729,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["hover",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["hoverbackgroundcolor",{"_index":491,"title":{},"body":{"components/ChartsComponent.html":{}}}],["html",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["html5",{"_index":1325,"title":{},"body":{"injectables/LocationService.html":{}}}],["htmlcanvasel",{"_index":458,"title":{},"body":{"components/ChartsComponent.html":{}}}],["htmlelement",{"_index":1187,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["htmlimageel",{"_index":2078,"title":{},"body":{"components/WeatherComponent.html":{}}}],["http",{"_index":2147,"title":{},"body":{"injectables/WeatherService.html":{}}}],["http://localhost:4201",{"_index":2476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":2145,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpclientmodul",{"_index":1739,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["httpparam",{"_index":2168,"title":{},"body":{"injectables/WeatherService.html":{}}}],["https://cloud.google.com/map",{"_index":2372,"title":{},"body":{"index.html":{}}}],["https://developers.google.com/maps/documentation/javascript/styl",{"_index":2496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://openweathermap.org",{"_index":2375,"title":{},"body":{"index.html":{}}}],["https://u",{"_index":2469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://wiki.openstreetmap.org/wiki/key:oneway",{"_index":913,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["https://wiki.openstreetmap.org/wiki/tag:junction%3droundabout",{"_index":921,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["icon",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SimulationComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{}}}],["icon.src",{"_index":2105,"title":{},"body":{"components/WeatherComponent.html":{}}}],["iconcontain",{"_index":2068,"title":{},"body":{"components/WeatherComponent.html":{}}}],["id",{"_index":914,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["identifi",{"_index":1306,"title":{},"body":{"injectables/LocationService.html":{}}}],["imag",{"_index":2104,"title":{},"body":{"components/WeatherComponent.html":{}}}],["img",{"_index":1128,"title":{},"body":{"components/FooterComponent.html":{}}}],["implement",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["impli",{"_index":2413,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["incid",{"_index":939,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["incidencematrix",{"_index":887,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["includ",{"_index":2394,"title":{},"body":{"license.html":{}}}],["incomingedg",{"_index":841,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":771,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["infodialogcompon",{"_index":127,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["inform",{"_index":1525,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["infowindow",{"_index":851,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["inherit",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/WeatherComponent.html":{}}}],["init",{"_index":1193,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/SchedulerService.html":{}}}],["initi",{"_index":723,"title":{},"body":{"injectables/DemandService.html":{},"components/GoogleMapComponent.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["initialmapst",{"_index":1421,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/variables.html":{}}}],["initialsimulationst",{"_index":1826,"title":{},"body":{"interfaces/SimulationState-1.html":{},"miscellaneous/variables.html":{}}}],["initialwizardst",{"_index":2281,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":293,"title":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MessageArchivedComponent.html":{},"injectables/SchedulerService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"overview.html":{}}}],["inject(mat_dialog_data",{"_index":1294,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["inject(mat_snack_bar_data",{"_index":1460,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["inlin",{"_index":1277,"title":{},"body":{"components/HomeComponent.html":{}}}],["input",{"_index":311,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["insert",{"_index":960,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["instal",{"_index":1626,"title":{},"body":{"injectables/SchedulerService.html":{},"index.html":{}}}],["instant",{"_index":794,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["instanti",{"_index":958,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["interfac",{"_index":287,"title":{"interfaces/CanComponentDeactivate.html":{},"interfaces/Counts.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"interfaces/Simulation.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WeatherConditions.html":{},"interfaces/WizardState.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"interfaces/Counts.html":{},"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Simulation.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WeatherConditions.html":{},"interfaces/WizardState.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["internet",{"_index":1615,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["interv",{"_index":553,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"miscellaneous/variables.html":{}}}],["interval(this.simulatedtimeinterv",{"_index":630,"title":{},"body":{"injectables/ClockService.html":{}}}],["invalid",{"_index":411,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["invalid_request",{"_index":1675,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["invers",{"_index":822,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["invok",{"_index":1336,"title":{},"body":{"injectables/LocationService.html":{}}}],["isnan(+key",{"_index":1035,"title":{},"body":{"classes/EnumValues.html":{}}}],["isoneway(edgeid",{"_index":915,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["isonpath",{"_index":675,"title":{},"body":{"injectables/DemandService.html":{}}}],["isonpath(odmatrixassign",{"_index":705,"title":{},"body":{"injectables/DemandService.html":{}}}],["isroundabout(edgeid",{"_index":922,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["ital",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{}}}],["item",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["javascript",{"_index":2374,"title":{},"body":{"index.html":{}}}],["js",{"_index":2327,"title":{},"body":{"dependencies.html":{}}}],["junction",{"_index":923,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["k",{"_index":815,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":826,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["kind",{"_index":2411,"title":{},"body":{"license.html":{}}}],["ksp(o",{"_index":955,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["l",{"_index":1270,"title":{},"body":{"components/HomeComponent.html":{}}}],["label",{"_index":489,"title":{},"body":{"components/ChartsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["labels.icon",{"_index":2494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labelstr",{"_index":2455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":1101,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"classes/Statistics.html":{}}}],["lat",{"_index":839,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["latitud",{"_index":836,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["latlng",{"_index":1313,"title":{},"body":{"injectables/LocationService.html":{}}}],["layout",{"_index":1745,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["leav",{"_index":1725,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["left",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["legend",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"modules/DemandModule.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"components/WizardComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["legisl",{"_index":1529,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["letter",{"_index":1250,"title":{},"body":{"components/HomeComponent.html":{}}}],["level",{"_index":975,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["li",{"_index":1129,"title":{},"body":{"components/FooterComponent.html":{}}}],["liabil",{"_index":2422,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":2419,"title":{},"body":{"license.html":{}}}],["licens",{"_index":53,"title":{"license.html":{}},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TermsComponent.html":{},"license.html":{}}}],["limit",{"_index":1094,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HomeComponent.html":{}}}],["linear",{"_index":1264,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/FooterComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["linkflow",{"_index":680,"title":{"interfaces/LinkFlow.html":{}},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["linkflows[i].valu",{"_index":736,"title":{},"body":{"injectables/DemandService.html":{}}}],["linkflows[i].vari",{"_index":739,"title":{},"body":{"injectables/DemandService.html":{}}}],["list",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["liter",{"_index":773,"title":{},"body":{"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/MapChanged.html":{},"classes/Node.html":{},"classes/SimulationChanged.html":{},"classes/StepChanged.html":{}}}],["lng",{"_index":1670,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":240,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["loadchildren",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadscript",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["locat",{"_index":1567,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["location.servic",{"_index":1303,"title":{},"body":{"modules/LocationModule.html":{}}}],["location/location.modul",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["location/location.servic",{"_index":1586,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{}}}],["locationmodul",{"_index":197,"title":{"modules/LocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationservic",{"_index":1301,"title":{"injectables/LocationService.html":{}},"body":{"modules/LocationModule.html":{},"injectables/LocationService.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["login",{"_index":2371,"title":{},"body":{"index.html":{}}}],["logit",{"_index":1004,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["lon",{"_index":840,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["longitud",{"_index":837,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["ltm",{"_index":1877,"title":{},"body":{"classes/Statistics.html":{},"miscellaneous/variables.html":{}}}],["ltmedg",{"_index":1853,"title":{},"body":{"classes/Statistics.html":{}}}],["m",{"_index":412,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"miscellaneous/variables.html":{}}}],["m/",{"_index":785,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{}}}],["m:ss",{"_index":1041,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["m:ss.mmm",{"_index":1047,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["maintainaspectratio",{"_index":2452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":1544,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["manag",{"_index":1417,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{}}}],["map",{"_index":1080,"title":{"interfaces/Map.html":{}},"body":{"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/PrivacyComponent.html":{},"classes/Reset-1.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"components/TermsComponent.html":{},"interfaces/UiState.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map'},{'nam",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["map((respons",{"_index":2184,"title":{},"body":{"injectables/WeatherService.html":{}}}],["map.compon",{"_index":2037,"title":{},"body":{"modules/UiModule.html":{}}}],["map.component.html",{"_index":1362,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":1361,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.t",{"_index":1153,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:17",{"_index":1168,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:21",{"_index":1185,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:25",{"_index":1170,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:29",{"_index":1173,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:33",{"_index":1179,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:37",{"_index":1181,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:41",{"_index":1182,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:45",{"_index":1176,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:49",{"_index":1165,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:51",{"_index":1194,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:56",{"_index":1192,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:66",{"_index":1191,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:71",{"_index":1188,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.data.bound",{"_index":1722,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["map.data.selectednod",{"_index":1088,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["map.servic",{"_index":1196,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["map.styl",{"_index":1379,"title":{},"body":{"components/MapComponent.html":{}}}],["map/googl",{"_index":2036,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.compon",{"_index":2035,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.servic",{"_index":1585,"title":{},"body":{"injectables/SchedulerService.html":{},"modules/UiModule.html":{}}}],["mapact",{"_index":1357,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{},"classes/Reset-1.html":{},"miscellaneous/typealiases.html":{}}}],["mapactiontyp",{"_index":1355,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{},"classes/Reset-1.html":{},"miscellaneous/enumerations.html":{}}}],["mapactiontypes.mapchang",{"_index":1354,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{},"classes/Reset-1.html":{}}}],["mapactiontypes.reset",{"_index":1356,"title":{},"body":{"classes/MapChanged.html":{},"interfaces/MapState.html":{},"classes/Reset-1.html":{}}}],["mapchang",{"_index":1350,"title":{"classes/MapChanged.html":{}},"body":{"classes/MapChanged.html":{},"classes/Reset-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mapcompon",{"_index":129,"title":{"components/MapComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["mapreduc",{"_index":2349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapreducer(st",{"_index":1423,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/functions.html":{}}}],["mapservic",{"_index":1164,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"modules/UiModule.html":{},"overview.html":{}}}],["mapstat",{"_index":1415,"title":{"interfaces/MapState.html":{}},"body":{"interfaces/MapState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["mapstyl",{"_index":1378,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["maptypeid",{"_index":1160,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["margin",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["marker",{"_index":843,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mat",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/PrivacyComponent.html":{},"components/SimulationComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["mat_dialog_data",{"_index":1297,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["mat_snack_bar_data",{"_index":1462,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["matbuttonmodul",{"_index":1436,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodul",{"_index":1434,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1952,"title":{},"body":{"components/UiComponent.html":{}}}],["matdialogmodul",{"_index":1444,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":1292,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["material.modul",{"_index":1746,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodul",{"_index":1430,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodul",{"_index":1447,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodul",{"_index":1445,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["math.abs(curr",{"_index":1887,"title":{},"body":{"classes/Statistics.html":{}}}],["math.exp",{"_index":1014,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["math.floor(",{"_index":1044,"title":{},"body":{"classes/EnumValues.html":{}}}],["math.floor((m",{"_index":1051,"title":{},"body":{"classes/EnumValues.html":{}}}],["math.floor(m",{"_index":1050,"title":{},"body":{"classes/EnumValues.html":{}}}],["math.pow(bas",{"_index":738,"title":{},"body":{"injectables/DemandService.html":{}}}],["math.trunc(edge.maxflow",{"_index":1884,"title":{},"body":{"classes/Statistics.html":{}}}],["maticonmodul",{"_index":1437,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["maticonregistri",{"_index":1435,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonregistry.addsvgicon",{"_index":1451,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":1440,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodul",{"_index":1438,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodul",{"_index":1442,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matrix",{"_index":666,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["matselectmodul",{"_index":1446,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenavmodul",{"_index":1432,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1951,"title":{},"body":{"components/UiComponent.html":{}}}],["matsnackbarmodul",{"_index":1441,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matstepp",{"_index":2217,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["matsteppermodul",{"_index":1439,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattablemodul",{"_index":1448,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodul",{"_index":1433,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodul",{"_index":1443,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":798,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["maxbarthick",{"_index":2463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxdemand",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxflow",{"_index":755,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":790,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["maxodpair",{"_index":2515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxtimeinterv",{"_index":2552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxzoom",{"_index":1161,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["mean",{"_index":823,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["measur",{"_index":811,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["medium",{"_index":2520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":828,"title":{"interfaces/Member.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["memoizedselector",{"_index":1815,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["merchant",{"_index":2414,"title":{},"body":{"license.html":{}}}],["merg",{"_index":2396,"title":{},"body":{"license.html":{}}}],["messag",{"_index":1612,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"injectables/WizardService.html":{}}}],["messagearchivedcompon",{"_index":130,"title":{"components/MessageArchivedComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["meter",{"_index":772,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{}}}],["method",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["metric",{"_index":2179,"title":{},"body":{"injectables/WeatherService.html":{}}}],["middl",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["millimet",{"_index":2113,"title":{},"body":{"interfaces/WeatherConditions.html":{}}}],["millisecond",{"_index":1048,"title":{},"body":{"classes/EnumValues.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{}}}],["min",{"_index":854,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{}}}],["mindist",{"_index":2512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mindur",{"_index":2514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minimum",{"_index":684,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["minzoom",{"_index":1162,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["miscellan",{"_index":2339,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mist",{"_index":2128,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["mit",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/TermsComponent.html":{},"index.html":{},"license.html":{}}}],["mm",{"_index":413,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":516,"title":{},"body":{"components/ChartsComponent.html":{}}}],["model",{"_index":1005,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Map.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["models/actions/simulation.act",{"_index":601,"title":{},"body":{"injectables/ClockService.html":{}}}],["models/actions/wizard.act",{"_index":2274,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/base.compon",{"_index":369,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["models/reduc",{"_index":362,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["models/reducers/wizard.reduc",{"_index":2275,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/ui",{"_index":1081,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["moder",{"_index":508,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["moderatetraff",{"_index":2546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moderatetrafficchart",{"_index":433,"title":{},"body":{"components/ChartsComponent.html":{}}}],["moderatetrafficcolor",{"_index":2508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moderatetrafficctx",{"_index":434,"title":{},"body":{"components/ChartsComponent.html":{}}}],["modifi",{"_index":2395,"title":{},"body":{"license.html":{}}}],["modul",{"_index":185,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1736,"title":{},"body":{"modules/SharedModule.html":{}}}],["moment",{"_index":1707,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["more",{"_index":880,"title":{},"body":{"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["more_vert",{"_index":1452,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mout",{"_index":2318,"title":{},"body":{"dependencies.html":{}}}],["mout/array/combin",{"_index":356,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mout/lang/deepclon",{"_index":1419,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/SimulationState-1.html":{},"interfaces/WizardState.html":{}}}],["move",{"_index":973,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["ms",{"_index":591,"title":{},"body":{"injectables/ClockService.html":{},"classes/EnumValues.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["multi",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["multinomi",{"_index":1003,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["n",{"_index":741,"title":{},"body":{"injectables/DemandService.html":{}}}],["name",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/AppPreloadingStrategy.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["navig",{"_index":2253,"title":{},"body":{"components/WizardComponent.html":{}}}],["navigate_next",{"_index":415,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["navigator.geoloc",{"_index":1681,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["navigator.geolocation.getcurrentposit",{"_index":1345,"title":{},"body":{"injectables/LocationService.html":{}}}],["neighbor",{"_index":971,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["network",{"_index":319,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["network.servic",{"_index":1470,"title":{},"body":{"modules/NetworkModule.html":{}}}],["network/graph",{"_index":365,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{}}}],["network/network.modul",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["network/network.servic",{"_index":358,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{}}}],["network/weather/weath",{"_index":364,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{}}}],["network/weather/weather.servic",{"_index":359,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{},"components/WeatherComponent.html":{}}}],["networkdata",{"_index":2468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["networkmodul",{"_index":198,"title":{"modules/NetworkModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NetworkModule.html":{},"modules.html":{},"overview.html":{}}}],["networkservic",{"_index":320,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"modules/NetworkModule.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WeatherComponent.html":{},"overview.html":{}}}],["new",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/FooterComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["next",{"_index":974,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["nextdt",{"_index":2198,"title":{},"body":{"injectables/WeatherService.html":{}}}],["nextindex",{"_index":1149,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["ng",{"_index":2021,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":437,"title":{},"body":{"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["ngmodul",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":1156,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngonchanges(chang",{"_index":1190,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngondestroy",{"_index":271,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["ngoninit",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ngrx",{"_index":1138,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"interfaces/MapState.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["ngrx/store",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["node",{"_index":746,"title":{"classes/Node.html":{}},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.count",{"_index":980,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.incomingedg",{"_index":903,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.incomingedges.length",{"_index":1099,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["node.j",{"_index":2363,"title":{},"body":{"index.html":{}}}],["node.label",{"_index":933,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.label).length",{"_index":1110,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["node.nodeid",{"_index":897,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedg",{"_index":906,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedges.length",{"_index":1100,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["nodeid",{"_index":838,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["none",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["noninfring",{"_index":2416,"title":{},"body":{"license.html":{}}}],["normal",{"_index":528,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["notic",{"_index":2406,"title":{},"body":{"license.html":{}}}],["notrafficcolor",{"_index":2506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":2364,"title":{},"body":{"index.html":{}}}],["npm@latest",{"_index":2365,"title":{},"body":{"index.html":{}}}],["null",{"_index":611,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/LocationService.html":{},"interfaces/MapState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["numer",{"_index":1012,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{}}}],["numeric'},{'nam",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["numeric.component.html",{"_index":1482,"title":{},"body":{"components/NumericComponent.html":{}}}],["numeric.component.scss",{"_index":1481,"title":{},"body":{"components/NumericComponent.html":{}}}],["numeric/numeric.compon",{"_index":2039,"title":{},"body":{"modules/UiModule.html":{}}}],["numericalsimul",{"_index":653,"title":{"interfaces/NumericalSimulation.html":{}},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["numericcompon",{"_index":133,"title":{"components/NumericComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["o",{"_index":407,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["o/d",{"_index":665,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(e).filter((key",{"_index":1034,"title":{},"body":{"classes/EnumValues.html":{}}}],["observ",{"_index":245,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{}}}],["observable.create((observ",{"_index":1335,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.complet",{"_index":1343,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.error(error",{"_index":1348,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.error(statu",{"_index":1344,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(posit",{"_index":1346,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(result",{"_index":1342,"title":{},"body":{"injectables/LocationService.html":{}}}],["obtain",{"_index":2166,"title":{},"body":{"injectables/WeatherService.html":{},"license.html":{}}}],["odmatrix",{"_index":667,"title":{},"body":{"injectables/DemandService.html":{}}}],["odmatrixassign",{"_index":681,"title":{},"body":{"injectables/DemandService.html":{}}}],["odmatrixassignment[n][i",{"_index":742,"title":{},"body":{"injectables/DemandService.html":{}}}],["odpair",{"_index":314,"title":{"interfaces/OdPair.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{}}}],["odpair.destin",{"_index":1098,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpair.origin",{"_index":1106,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.filter(pair",{"_index":1107,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.length",{"_index":1092,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs.map((pair",{"_index":380,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairs[odpairs.length",{"_index":1093,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairs[uiconfig.maxodpair",{"_index":1096,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["odpairscontrol",{"_index":393,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairscontrol.length",{"_index":400,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["odpairscontrol.removeat(i",{"_index":401,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["of(nul",{"_index":250,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["offici",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["offset",{"_index":1268,"title":{},"body":{"components/HomeComponent.html":{},"injectables/WeatherService.html":{}}}],["on",{"_index":582,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{}}}],["onchang",{"_index":1154,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ondestroy",{"_index":269,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["oneway",{"_index":918,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["op",{"_index":2003,"title":{},"body":{"components/UiComponent.html":{}}}],["opac",{"_index":1261,"title":{},"body":{"components/HomeComponent.html":{},"components/UiComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1625,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["opendialog",{"_index":1946,"title":{},"body":{"components/UiComponent.html":{}}}],["opendialog(data",{"_index":1961,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar",{"_index":1947,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar(messag",{"_index":1963,"title":{},"body":{"components/UiComponent.html":{}}}],["openweathermap",{"_index":2167,"title":{},"body":{"injectables/WeatherService.html":{},"index.html":{}}}],["oper",{"_index":1576,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["option",{"_index":244,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["options).pip",{"_index":2183,"title":{},"body":{"injectables/WeatherService.html":{}}}],["origin",{"_index":756,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["originalpath",{"_index":847,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["otherwis",{"_index":2426,"title":{},"body":{"license.html":{}}}],["out",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["outgoingedg",{"_index":842,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["over_query_limit",{"_index":1676,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["overflow",{"_index":2007,"title":{},"body":{"components/UiComponent.html":{}}}],["overview",{"_index":2430,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owl",{"_index":2006,"title":{},"body":{"components/UiComponent.html":{}}}],["owldatetimemodul",{"_index":2019,"title":{},"body":{"modules/UiModule.html":{}}}],["owlnativedatetimemodul",{"_index":2020,"title":{},"body":{"modules/UiModule.html":{}}}],["p",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{}}}],["packag",{"_index":2296,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{}}}],["paid",{"_index":1624,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["pair",{"_index":334,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["pair.demand",{"_index":381,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["pair.destin",{"_index":1109,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["pair.origin",{"_index":1108,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["pair.startingtim",{"_index":382,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["pair.value.destin",{"_index":410,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["pair.value.origin",{"_index":409,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["pairs,paths,edg",{"_index":703,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pairsvalid",{"_index":2226,"title":{},"body":{"components/WizardComponent.html":{},"miscellaneous/functions.html":{}}}],["panel",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/UiComponent.html":{}}}],["panelclass",{"_index":1993,"title":{},"body":{"components/UiComponent.html":{}}}],["param",{"_index":728,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["paramet",{"_index":243,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["part",{"_index":1938,"title":{},"body":{"components/TermsComponent.html":{}}}],["particular",{"_index":824,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["past",{"_index":1621,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["path",{"_index":255,"title":{"interfaces/Path.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["path.cost",{"_index":1232,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.edg",{"_index":1231,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.nod",{"_index":1230,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.pathid",{"_index":1229,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.t",{"_index":1215,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["path.ts:23",{"_index":1220,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:29",{"_index":1227,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:37",{"_index":1225,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:45",{"_index":1223,"title":{},"body":{"classes/Heap.html":{}}}],["path.ts:49",{"_index":1222,"title":{},"body":{"classes/Heap.html":{}}}],["patha",{"_index":987,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["patha.filter((edgeofa",{"_index":993,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["patha.length",{"_index":997,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathb",{"_index":989,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathb.find((edgeofb",{"_index":994,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathcost",{"_index":1007,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathid",{"_index":963,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["pathmatch",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["pathtyp",{"_index":819,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{}}}],["pathtype.dist",{"_index":1118,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["paus",{"_index":561,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["payload",{"_index":639,"title":{},"body":{"injectables/ClockService.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{}}}],["pend",{"_index":1143,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["perform",{"_index":581,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{}}}],["period",{"_index":1513,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["periods.simulatedtimeinterv",{"_index":1782,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periods.simulatedtimeperiod",{"_index":1785,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periods.timeinterv",{"_index":1777,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periods.timeperiod",{"_index":1779,"title":{},"body":{"components/SimulationComponent.html":{}}}],["periodschang",{"_index":1507,"title":{"classes/PeriodsChanged.html":{}},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["permiss",{"_index":1687,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"license.html":{}}}],["permit",{"_index":2402,"title":{},"body":{"license.html":{}}}],["person",{"_index":1523,"title":{},"body":{"components/PrivacyComponent.html":{},"license.html":{}}}],["pick",{"_index":2022,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["picker",{"_index":2005,"title":{},"body":{"components/UiComponent.html":{}}}],["platform",{"_index":2373,"title":{},"body":{"index.html":{}}}],["play_arrow",{"_index":1795,"title":{},"body":{"components/SimulationComponent.html":{}}}],["pleas",{"_index":1548,"title":{},"body":{"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["plugin",{"_index":2324,"title":{},"body":{"dependencies.html":{}}}],["png",{"_index":2107,"title":{},"body":{"components/WeatherComponent.html":{}}}],["poi",{"_index":2492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point",{"_index":833,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["polici",{"_index":1522,"title":{},"body":{"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["polylin",{"_index":849,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["poorli",{"_index":2521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pop",{"_index":1218,"title":{},"body":{"classes/Heap.html":{}}}],["pop(pathid",{"_index":1224,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["populatechart",{"_index":438,"title":{},"body":{"components/ChartsComponent.html":{}}}],["portion",{"_index":2409,"title":{},"body":{"license.html":{}}}],["posit",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"components/UiComponent.html":{}}}],["position.coords.latitud",{"_index":1683,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["position.coords.longitud",{"_index":1684,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["positionerror",{"_index":1347,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["predt",{"_index":2193,"title":{},"body":{"injectables/WeatherService.html":{}}}],["preload",{"_index":235,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["preload(rout",{"_index":238,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["preloadingstrategi",{"_index":237,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["prerequisit",{"_index":2376,"title":{},"body":{"index.html":{}}}],["presscontrol",{"_index":562,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["presscontrol(control",{"_index":574,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["prev",{"_index":1895,"title":{},"body":{"classes/Statistics.html":{}}}],["prev.cost",{"_index":1237,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["prev.heavytrafficcount",{"_index":1891,"title":{},"body":{"classes/Statistics.html":{}}}],["prev.moderatetrafficcount",{"_index":1892,"title":{},"body":{"classes/Statistics.html":{}}}],["primari",{"_index":1272,"title":{},"body":{"components/HomeComponent.html":{}}}],["privaci",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["privacy'},{'nam",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["privacy.component.html",{"_index":1519,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["privacy.component.scss",{"_index":1518,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["privacy/privacy.compon",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["privacycompon",{"_index":135,"title":{"components/PrivacyComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["privat",{"_index":371,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["probabl",{"_index":712,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["process",{"_index":590,"title":{},"body":{"injectables/ClockService.html":{},"components/PrivacyComponent.html":{},"components/StatisticsComponent.html":{}}}],["processingtim",{"_index":554,"title":{},"body":{"injectables/ClockService.html":{}}}],["product",{"_index":2466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profil",{"_index":1545,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["project",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"injectables/SchedulerService.html":{},"index.html":{}}}],["promis",{"_index":294,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{}}}],["propagateflow",{"_index":589,"title":{},"body":{"injectables/ClockService.html":{}}}],["properti",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["propertynam",{"_index":1199,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["protect",{"_index":761,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["provid",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"components/PrivacyComponent.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"interfaces/WizardState.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":559,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["publish",{"_index":2397,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":877,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["pursuant",{"_index":1526,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["push",{"_index":1219,"title":{},"body":{"classes/Heap.html":{}}}],["push(path",{"_index":1226,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["putinerror",{"_index":2256,"title":{},"body":{"injectables/WizardService.html":{}}}],["putinerror(error",{"_index":2264,"title":{},"body":{"injectables/WizardService.html":{}}}],["putonhold",{"_index":2257,"title":{},"body":{"injectables/WizardService.html":{}}}],["putonhold(messag",{"_index":2266,"title":{},"body":{"injectables/WizardService.html":{}}}],["qs",{"_index":2332,"title":{},"body":{"dependencies.html":{}}}],["queue",{"_index":1221,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["quick",{"_index":563,"title":{},"body":{"injectables/ClockService.html":{},"miscellaneous/enumerations.html":{}}}],["quota",{"_index":1622,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["rain",{"_index":2125,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["rainintens",{"_index":2111,"title":{},"body":{"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["rais",{"_index":2254,"title":{},"body":{"components/WizardComponent.html":{}}}],["rate",{"_index":2534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reactiveformsmodul",{"_index":1742,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["readonli",{"_index":1133,"title":{},"body":{"classes/GoOn.html":{},"classes/MapChanged.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["real",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["receiveact",{"_index":272,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["rectangl",{"_index":1388,"title":{},"body":{"components/MapComponent.html":{}}}],["redirectto",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduc",{"_index":1422,"title":{},"body":{"interfaces/MapState.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reducers/map.reduc",{"_index":2053,"title":{},"body":{"interfaces/UiState.html":{}}}],["reducers/simulation.reduc",{"_index":1816,"title":{},"body":{"interfaces/SimulationState.html":{}}}],["reducers/wizard.reduc",{"_index":2051,"title":{},"body":{"interfaces/UiState.html":{}}}],["reduct",{"_index":2136,"title":{},"body":{"injectables/WeatherService.html":{}}}],["ref",{"_index":829,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["refer",{"_index":1549,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["regul",{"_index":1533,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["rel",{"_index":1276,"title":{},"body":{"components/HomeComponent.html":{},"components/UiComponent.html":{}}}],["relat",{"_index":876,"title":{"classes/Relation.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relation'",{"_index":827,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationid",{"_index":881,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationship",{"_index":879,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["releas",{"_index":1939,"title":{},"body":{"components/TermsComponent.html":{}}}],["remain",{"_index":1539,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["remov",{"_index":981,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["removefromerror",{"_index":2258,"title":{},"body":{"injectables/WizardService.html":{}}}],["removefromwait",{"_index":2259,"title":{},"body":{"injectables/WizardService.html":{}}}],["render",{"_index":2072,"title":{},"body":{"components/WeatherComponent.html":{}}}],["renderer2",{"_index":2075,"title":{},"body":{"components/WeatherComponent.html":{}}}],["repositori",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{}}}],["repres",{"_index":831,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["request",{"_index":1680,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["request_deni",{"_index":1677,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["requir",{"_index":1166,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"index.html":{}}}],["reset",{"_index":202,"title":{"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{}},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"modules/NetworkModule.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"modules/SharedModule.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resetcondit",{"_index":2070,"title":{},"body":{"components/WeatherComponent.html":{}}}],["resetcount",{"_index":979,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["resourc",{"_index":2135,"title":{},"body":{"injectables/WeatherService.html":{}}}],["respons",{"_index":1305,"title":{},"body":{"injectables/LocationService.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["restrict",{"_index":2393,"title":{},"body":{"license.html":{}}}],["result",{"_index":154,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results[0].geometry.location.lat",{"_index":1669,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["results[0].geometry.location.lng",{"_index":1671,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["retriev",{"_index":1614,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["return",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["rgba(255,255,255,1.0",{"_index":526,"title":{},"body":{"components/ChartsComponent.html":{}}}],["right",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{},"components/HomeComponent.html":{},"components/WizardComponent.html":{},"license.html":{}}}],["road",{"_index":2493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roadmap",{"_index":1177,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["roberto",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["roberto&nbsp;simonetti",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["role",{"_index":830,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["root",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["round",{"_index":716,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{}}}],["round(1",{"_index":871,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(exps[z][n",{"_index":1019,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(factor",{"_index":2199,"title":{},"body":{"injectables/WeatherService.html":{}}}],["round(maxflow",{"_index":870,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(sum",{"_index":740,"title":{},"body":{"injectables/DemandService.html":{}}}],["round(this.dens",{"_index":866,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(this.dist",{"_index":857,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(this.getkjam",{"_index":864,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["round(valu",{"_index":2359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["roundabout",{"_index":924,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["rout",{"_index":239,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["route.data",{"_index":248,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["route.data.preload",{"_index":249,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["router",{"_index":1949,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["routermodul",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild",{"_index":2044,"title":{},"body":{"modules/UiRoutingModule.html":{}}}],["routermodule.forroot",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["routing.module.t",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["row",{"_index":1504,"title":{},"body":{"components/NumericComponent.html":{}}}],["run",{"_index":594,"title":{},"body":{"injectables/ClockService.html":{},"index.html":{}}}],["rxj",{"_index":247,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":597,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{}}}],["s",{"_index":1042,"title":{},"body":{"classes/EnumValues.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["s/end.html\">renderer2",{"_index":2073,"title":{},"body":{"components/WeatherComponent.html":{}}}],["s/map.html\">google.maps.latlngliter",{"_index":1329,"title":{},"body":{"injectables/LocationService.html":{}}}],["same",{"_index":1105,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["save",{"_index":1542,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["scale",{"_index":1259,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["scaleid",{"_index":518,"title":{},"body":{"components/ChartsComponent.html":{}}}],["scalelabel",{"_index":2454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalex",{"_index":1266,"title":{},"body":{"components/HomeComponent.html":{}}}],["scatter",{"_index":2120,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["scatteredcloud",{"_index":2119,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["schedul",{"_index":1955,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["scheduledemand",{"_index":1563,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["scheduledemand(data",{"_index":1572,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulenetwork",{"_index":1564,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulenetwork(data",{"_index":1578,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["scheduler.servic",{"_index":2225,"title":{},"body":{"components/WizardComponent.html":{}}}],["schedulerservic",{"_index":1561,"title":{"injectables/SchedulerService.html":{}},"body":{"injectables/SchedulerService.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["schedulesimul",{"_index":1565,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["schedulesimulation(data",{"_index":1582,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["search",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["search(address",{"_index":1659,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["searchfortheareacompon",{"_index":137,"title":{"components/SearchForTheAreaComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["second",{"_index":715,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["secondari",{"_index":2001,"title":{},"body":{"components/UiComponent.html":{}}}],["select",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["selectionchang",{"_index":2216,"title":{},"body":{"components/WizardComponent.html":{}}}],["selectionoftheareacompon",{"_index":140,"title":{"components/SelectionOfTheAreaComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["sell",{"_index":2401,"title":{},"body":{"license.html":{}}}],["sendact",{"_index":273,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["sent",{"_index":281,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["sequenc",{"_index":1574,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["serve:devapp",{"_index":2381,"title":{},"body":{"index.html":{}}}],["servic",{"_index":377,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"injectables/LocationService.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/TermsComponent.html":{}}}],["set",{"_index":629,"title":{},"body":{"injectables/ClockService.html":{},"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["set('appid",{"_index":2180,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('lat",{"_index":2174,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('lon",{"_index":2176,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('unit",{"_index":2178,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setcondit",{"_index":2071,"title":{},"body":{"components/WeatherComponent.html":{}}}],["setconditions(weath",{"_index":2084,"title":{},"body":{"components/WeatherComponent.html":{}}}],["setlatlng",{"_index":1317,"title":{},"body":{"injectables/LocationService.html":{}}}],["setlatlng(latlng",{"_index":1328,"title":{},"body":{"injectables/LocationService.html":{}}}],["settimeout",{"_index":1588,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["shall",{"_index":2407,"title":{},"body":{"license.html":{}}}],["shared/can",{"_index":1971,"title":{},"body":{"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["shared/info",{"_index":1974,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/messag",{"_index":1973,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/shared.modul",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["sharededg",{"_index":992,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sharededges.length",{"_index":998,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sharedmodul",{"_index":199,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sharedmodule.forroot",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["shortest",{"_index":816,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["shortestpath",{"_index":886,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpaths.length",{"_index":986,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpaths[i",{"_index":990,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpaths[i].edg",{"_index":988,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpathsprob",{"_index":949,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["shortestpathsprobabilities[z].push(p",{"_index":1022,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["show",{"_index":1241,"title":{},"body":{"components/HomeComponent.html":{},"components/MapComponent.html":{}}}],["shower",{"_index":2124,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["showerrain",{"_index":2123,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["shows/hid",{"_index":1408,"title":{},"body":{"components/MapComponent.html":{}}}],["simonetti",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"license.html":{}}}],["simplechang",{"_index":1195,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["simul",{"_index":45,"title":{"interfaces/Simulation.html":{}},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"injectables/SchedulerService.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["simulatedtimeinterv",{"_index":555,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{},"miscellaneous/variables.html":{}}}],["simulatedtimeperiod",{"_index":556,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["simulation'},{'nam",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["simulation.avgspe",{"_index":1790,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.component.html",{"_index":1756,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.component.scss",{"_index":1755,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.count",{"_index":1788,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.data",{"_index":1493,"title":{},"body":{"components/NumericComponent.html":{}}}],["simulation.servic",{"_index":598,"title":{},"body":{"injectables/ClockService.html":{},"modules/SimulationModule.html":{}}}],["simulation/clock.servic",{"_index":1587,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["simulation/models/reduc",{"_index":1490,"title":{},"body":{"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["simulation/models/simul",{"_index":1491,"title":{},"body":{"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["simulation/simulation.modul",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["simulation/simulation.servic",{"_index":465,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/SchedulerService.html":{},"components/StatisticsComponent.html":{}}}],["simulation?').pip",{"_index":1985,"title":{},"body":{"components/UiComponent.html":{}}}],["simulation?').subscrib",{"_index":1989,"title":{},"body":{"components/UiComponent.html":{}}}],["simulationact",{"_index":1516,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["simulationactiontyp",{"_index":600,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{},"miscellaneous/enumerations.html":{}}}],["simulationactiontypes.periodschang",{"_index":638,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{}}}],["simulationactiontypes.reset",{"_index":1515,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{}}}],["simulationactiontypes.simulationchang",{"_index":1514,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{}}}],["simulationactiontypes.simulationend",{"_index":640,"title":{},"body":{"injectables/ClockService.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState-1.html":{}}}],["simulationchang",{"_index":1511,"title":{"classes/SimulationChanged.html":{}},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["simulationcompon",{"_index":142,"title":{"components/SimulationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["simulationend",{"_index":1512,"title":{"classes/SimulationEnded.html":{}},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["simulationmodul",{"_index":200,"title":{"modules/SimulationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SimulationModule.html":{},"modules.html":{},"overview.html":{}}}],["simulationreduc",{"_index":2352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simulationreducer(st",{"_index":1827,"title":{},"body":{"interfaces/SimulationState-1.html":{},"miscellaneous/functions.html":{}}}],["simulationservic",{"_index":444,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/SchedulerService.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"overview.html":{}}}],["simulationst",{"_index":1809,"title":{"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{}},"body":{"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"miscellaneous/variables.html":{}}}],["simulationstatist",{"_index":1913,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["simulationstatistics.totalavgspe",{"_index":1922,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["size",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/NumericComponent.html":{},"components/SimulationComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ski",{"_index":2115,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["skip_next",{"_index":1797,"title":{},"body":{"components/SimulationComponent.html":{}}}],["slow",{"_index":564,"title":{},"body":{"injectables/ClockService.html":{},"miscellaneous/enumerations.html":{}}}],["snack",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["snackbar",{"_index":1950,"title":{},"body":{"components/UiComponent.html":{}}}],["snow",{"_index":2127,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["snowintens",{"_index":2112,"title":{},"body":{"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["softwar",{"_index":2390,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"modules/SimulationModule.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["sp",{"_index":2518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":2516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":832,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["speed",{"_index":658,"title":{},"body":{"interfaces/Counts.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{}}}],["squar",{"_index":702,"title":{},"body":{"injectables/DemandService.html":{}}}],["src",{"_index":2358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../chart",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../clock.service.t",{"_index":2341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.test.t",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph.t",{"_index":2343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../home.transition.t",{"_index":2444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map.actions.t",{"_index":2342,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../map.reducer.t",{"_index":2350,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../map.style.t",{"_index":2445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.t",{"_index":2446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pairs.directive.t",{"_index":2351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reducers.t",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.t",{"_index":2447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../simulation.actions.t",{"_index":2344,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../simulation.reducer.t",{"_index":2353,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../ui",{"_index":2448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.t",{"_index":2347,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../weather.t",{"_index":2345,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../wizard.actions.t",{"_index":2346,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../wizard.reducer.t",{"_index":2355,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/about/about.component.t",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:10",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:14",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/app",{"_index":234,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"index.html":{}}}],["src/app/app.component.t",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/demand/demand.module.t",{"_index":662,"title":{},"body":{"modules/DemandModule.html":{}}}],["src/app/demand/demand.service.t",{"_index":664,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:104",{"_index":694,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:121",{"_index":711,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:136",{"_index":706,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:17",{"_index":714,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:22",{"_index":678,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:26",{"_index":709,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:33",{"_index":687,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:45",{"_index":696,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:49",{"_index":690,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:55",{"_index":697,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:59",{"_index":692,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:71",{"_index":700,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/demand/demand.service.ts:85",{"_index":682,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/home/home.component.t",{"_index":1238,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:15",{"_index":1242,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":1244,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:23",{"_index":1243,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.transition.t",{"_index":2480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/location/location.module.t",{"_index":1302,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/app/location/location.service.t",{"_index":1304,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:15",{"_index":1332,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:17",{"_index":1318,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:25",{"_index":1327,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:33",{"_index":1320,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:53",{"_index":1324,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:68",{"_index":1326,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:72",{"_index":1330,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/network/graph.t",{"_index":743,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/network/graph.ts:101",{"_index":791,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:103",{"_index":769,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:105",{"_index":792,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:110",{"_index":770,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:115",{"_index":775,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:120",{"_index":776,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:125",{"_index":783,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:130",{"_index":793,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:132",{"_index":768,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:134",{"_index":782,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:139",{"_index":787,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:144",{"_index":789,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:146",{"_index":774,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:152",{"_index":767,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:161",{"_index":795,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:192",{"_index":797,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:200",{"_index":809,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:204",{"_index":808,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:208",{"_index":806,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:212",{"_index":804,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:225",{"_index":1554,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:227",{"_index":1553,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:229",{"_index":1552,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:65",{"_index":1477,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:67",{"_index":1474,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:69",{"_index":1475,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:71",{"_index":1476,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:73",{"_index":1479,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:75",{"_index":1473,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:77",{"_index":1478,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:79",{"_index":1472,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:84",{"_index":1471,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:97",{"_index":781,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:99",{"_index":786,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/k",{"_index":1214,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["src/app/network/network.module.t",{"_index":1468,"title":{},"body":{"modules/NetworkModule.html":{}}}],["src/app/network/weather/weather.module.t",{"_index":2131,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/network/weather/weather.service.t",{"_index":2133,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:104",{"_index":2149,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:114",{"_index":2151,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:133",{"_index":2163,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:18",{"_index":2146,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:22",{"_index":2161,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:26",{"_index":2156,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:34",{"_index":2158,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:55",{"_index":2165,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:82",{"_index":2154,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.service.ts:96",{"_index":2155,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/network/weather/weather.t",{"_index":2110,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/privacy/privacy.component.t",{"_index":1517,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/privacy/privacy.component.ts:12",{"_index":1521,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/privacy/privacy.component.ts:8",{"_index":1520,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["src/app/shared/can",{"_index":289,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{}}}],["src/app/shared/footer/footer.component.t",{"_index":1121,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:10",{"_index":1126,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:12",{"_index":1125,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/info",{"_index":1286,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["src/app/shared/material.module.t",{"_index":1431,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/messag",{"_index":1455,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["src/app/shared/shared.module.t",{"_index":1734,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/clock.service.t",{"_index":551,"title":{},"body":{"injectables/ClockService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/simulation/clock.service.ts:103",{"_index":579,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:115",{"_index":573,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:121",{"_index":583,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:141",{"_index":580,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:148",{"_index":578,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:163",{"_index":576,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:180",{"_index":571,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:195",{"_index":584,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:26",{"_index":593,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:31",{"_index":592,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:36",{"_index":586,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:41",{"_index":588,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:43",{"_index":595,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:45",{"_index":585,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:47",{"_index":570,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:60",{"_index":577,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:70",{"_index":575,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/clock.service.ts:93",{"_index":572,"title":{},"body":{"injectables/ClockService.html":{}}}],["src/app/simulation/models/actions/simulation.actions.t",{"_index":1508,"title":{},"body":{"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/SimulationChanged.html":{},"classes/SimulationEnded.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:19",{"_index":1752,"title":{},"body":{"classes/SimulationChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:21",{"_index":1753,"title":{},"body":{"classes/SimulationChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:27",{"_index":1802,"title":{},"body":{"classes/SimulationEnded.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:29",{"_index":1803,"title":{},"body":{"classes/SimulationEnded.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:35",{"_index":1509,"title":{},"body":{"classes/PeriodsChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:37",{"_index":1510,"title":{},"body":{"classes/PeriodsChanged.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:43",{"_index":1555,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/simulation/models/actions/simulation.actions.ts:45",{"_index":1556,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/simulation/models/reducers.t",{"_index":1810,"title":{},"body":{"interfaces/SimulationState.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/models/reducers/simulation.reducer.t",{"_index":1824,"title":{},"body":{"interfaces/SimulationState-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/models/simul",{"_index":649,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["src/app/simulation/simulation.module.t",{"_index":1806,"title":{},"body":{"modules/SimulationModule.html":{}}}],["src/app/simulation/statistics.t",{"_index":1838,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:12",{"_index":1872,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:16",{"_index":1864,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:20",{"_index":1874,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:24",{"_index":1862,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:29",{"_index":1858,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:34",{"_index":1856,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:41",{"_index":1860,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:66",{"_index":1866,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:70",{"_index":1870,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:74",{"_index":1854,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:8",{"_index":1868,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/simulation/statistics.ts:80",{"_index":1876,"title":{},"body":{"classes/Statistics.html":{}}}],["src/app/terms/terms.component.t",{"_index":1930,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/terms/terms.component.ts:12",{"_index":1934,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/terms/terms.component.ts:8",{"_index":1933,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/ui/charts/chart",{"_index":2449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/ui/charts/charts.component.t",{"_index":424,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:131",{"_index":450,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:137",{"_index":455,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:180",{"_index":454,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:186",{"_index":453,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:22",{"_index":461,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:24",{"_index":463,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:26",{"_index":459,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:28",{"_index":460,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:30",{"_index":462,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:32",{"_index":457,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:34",{"_index":445,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:44",{"_index":449,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:48",{"_index":447,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:54",{"_index":448,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:63",{"_index":456,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:67",{"_index":451,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:78",{"_index":452,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/charts/charts.component.ts:82",{"_index":446,"title":{},"body":{"components/ChartsComponent.html":{}}}],["src/app/ui/directives/pairs.directive.t",{"_index":2361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/ui/map/googl",{"_index":1152,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["src/app/ui/map/map.component.t",{"_index":1358,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:128",{"_index":1366,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:24",{"_index":1368,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:27",{"_index":1376,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:29",{"_index":1369,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:30",{"_index":1370,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:31",{"_index":1372,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:32",{"_index":1373,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:33",{"_index":1374,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:34",{"_index":1371,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:35",{"_index":1375,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:37",{"_index":1363,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:55",{"_index":1364,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:60",{"_index":1367,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:64",{"_index":1365,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.style.t",{"_index":2486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/ui/models/actions/map.actions.t",{"_index":1351,"title":{},"body":{"classes/MapChanged.html":{},"classes/Reset-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/models/actions/map.actions.ts:17",{"_index":1352,"title":{},"body":{"classes/MapChanged.html":{}}}],["src/app/ui/models/actions/map.actions.ts:19",{"_index":1353,"title":{},"body":{"classes/MapChanged.html":{}}}],["src/app/ui/models/actions/map.actions.ts:25",{"_index":1557,"title":{},"body":{"classes/Reset-1.html":{}}}],["src/app/ui/models/actions/map.actions.ts:27",{"_index":1558,"title":{},"body":{"classes/Reset-1.html":{}}}],["src/app/ui/models/actions/wizard.actions.t",{"_index":1132,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:20",{"_index":1924,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:22",{"_index":1925,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:28",{"_index":1926,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:30",{"_index":1927,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:36",{"_index":1928,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:38",{"_index":1929,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:44",{"_index":1135,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:46",{"_index":1136,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:52",{"_index":1559,"title":{},"body":{"classes/Reset-2.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:54",{"_index":1560,"title":{},"body":{"classes/Reset-2.html":{}}}],["src/app/ui/models/base.component.t",{"_index":266,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:11",{"_index":277,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:13",{"_index":276,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:22",{"_index":283,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:27",{"_index":278,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:32",{"_index":282,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:9",{"_index":275,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/reducers.t",{"_index":2046,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/reducers/map.reducer.t",{"_index":1416,"title":{},"body":{"interfaces/MapState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/reducers/wizard.reducer.t",{"_index":2279,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/ui",{"_index":1349,"title":{},"body":{"interfaces/Map.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/numeric/numeric.component.t",{"_index":1480,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:17",{"_index":1489,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:19",{"_index":1484,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:27",{"_index":1485,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:32",{"_index":1488,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:36",{"_index":1486,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/numeric/numeric.component.ts:44",{"_index":1487,"title":{},"body":{"components/NumericComponent.html":{}}}],["src/app/ui/ui",{"_index":2043,"title":{},"body":{"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/ui.component.t",{"_index":1943,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:102",{"_index":1958,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:106",{"_index":1964,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:114",{"_index":1962,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:24",{"_index":1968,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:26",{"_index":1966,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:28",{"_index":1967,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:30",{"_index":1969,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:32",{"_index":1956,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:43",{"_index":1960,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:77",{"_index":1959,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:83",{"_index":1957,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:93",{"_index":1965,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.module.t",{"_index":2018,"title":{},"body":{"modules/UiModule.html":{}}}],["src/app/ui/utils.t",{"_index":1024,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/utils.ts:5",{"_index":1029,"title":{},"body":{"classes/EnumValues.html":{}}}],["src/app/ui/utils.ts:9",{"_index":1031,"title":{},"body":{"classes/EnumValues.html":{}}}],["src/app/ui/weather/weather.component.t",{"_index":2065,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:20",{"_index":2087,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:22",{"_index":2089,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:24",{"_index":2088,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:26",{"_index":2074,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:38",{"_index":2080,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:43",{"_index":2079,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:47",{"_index":2086,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:51",{"_index":2081,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:69",{"_index":2083,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:73",{"_index":2085,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:80",{"_index":2082,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:89",{"_index":2077,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/wizard/chang",{"_index":301,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["src/app/ui/wizard/estim",{"_index":1054,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["src/app/ui/wizard/scheduler.service.t",{"_index":1562,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:125",{"_index":1573,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:13",{"_index":1569,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:181",{"_index":1583,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:29",{"_index":1570,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/scheduler.service.ts:53",{"_index":1579,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/ui/wizard/search",{"_index":1649,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["src/app/ui/wizard/select",{"_index":1696,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.t",{"_index":1754,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:100",{"_index":1762,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:22",{"_index":1759,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:24",{"_index":1760,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:26",{"_index":1771,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:28",{"_index":1772,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:30",{"_index":1769,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:32",{"_index":1770,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:34",{"_index":1767,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:36",{"_index":1766,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:38",{"_index":1768,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:40",{"_index":1758,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:50",{"_index":1761,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:56",{"_index":1765,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:60",{"_index":1763,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:96",{"_index":1764,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.t",{"_index":1898,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:21",{"_index":1904,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:23",{"_index":1905,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:25",{"_index":1912,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:27",{"_index":1911,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:29",{"_index":1910,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:31",{"_index":1903,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:42",{"_index":1906,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:48",{"_index":1909,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:52",{"_index":1907,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:67",{"_index":1908,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/wizard.component.t",{"_index":2202,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:119",{"_index":2210,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:20",{"_index":2219,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:22",{"_index":2220,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:24",{"_index":2222,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:26",{"_index":2209,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:35",{"_index":2211,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:92",{"_index":2214,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.service.t",{"_index":2255,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:12",{"_index":2273,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:14",{"_index":2261,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:22",{"_index":2270,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:31",{"_index":2272,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:38",{"_index":2265,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:45",{"_index":2267,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:52",{"_index":2268,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:59",{"_index":2269,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:66",{"_index":2263,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/utils.t",{"_index":2356,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.t",{"_index":2465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":2475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.test.t",{"_index":2479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":565,"title":{"index.html":{},"license.html":{}},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"components/HomeComponent.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["startedvehicl",{"_index":652,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["startingtim",{"_index":329,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{}}}],["startingtimes.length",{"_index":727,"title":{},"body":{"injectables/DemandService.html":{}}}],["starttest",{"_index":2382,"title":{},"body":{"index.html":{}}}],["starttim",{"_index":643,"title":{},"body":{"injectables/ClockService.html":{}}}],["state",{"_index":636,"title":{},"body":{"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/NumericComponent.html":{},"classes/PeriodsChanged.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.currentstep",{"_index":2291,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.end",{"_index":1836,"title":{},"body":{"interfaces/SimulationState-1.html":{},"miscellaneous/variables.html":{}}}],["state.error",{"_index":2293,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.map",{"_index":1426,"title":{},"body":{"interfaces/MapState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["state.pend",{"_index":2295,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.period",{"_index":1832,"title":{},"body":{"interfaces/SimulationState-1.html":{},"miscellaneous/variables.html":{}}}],["state.simul",{"_index":1820,"title":{},"body":{"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"miscellaneous/variables.html":{}}}],["state.step",{"_index":2289,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.steps[action.payload.index",{"_index":2284,"title":{},"body":{"interfaces/WizardState.html":{}}}],["state.t",{"_index":650,"title":{},"body":{"interfaces/Counts.html":{},"interfaces/Map.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["state.wizard",{"_index":2059,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":1025,"title":{},"body":{"classes/EnumValues.html":{},"modules/SharedModule.html":{},"classes/Statistics.html":{}}}],["statist",{"_index":435,"title":{"classes/Statistics.html":{}},"body":{"components/ChartsComponent.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["statistics'},{'nam",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["statistics.component.html",{"_index":1900,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statistics.component.scss",{"_index":1899,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statisticscompon",{"_index":144,"title":{"components/StatisticsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["statu",{"_index":1339,"title":{},"body":{"injectables/LocationService.html":{}}}],["step",{"_index":566,"title":{"interfaces/Step.html":{}},"body":{"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"interfaces/Map.html":{},"components/MapComponent.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["stepchang",{"_index":1140,"title":{"classes/StepChanged.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepclick",{"_index":2207,"title":{},"body":{"components/WizardComponent.html":{}}}],["stepclick(ev",{"_index":2212,"title":{},"body":{"components/WizardComponent.html":{}}}],["steperror",{"_index":1141,"title":{"classes/StepError.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["steppedlin",{"_index":497,"title":{},"body":{"components/ChartsComponent.html":{}}}],["steppend",{"_index":1142,"title":{"classes/StepPending.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepper",{"_index":2205,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["stepperselectionev",{"_index":2213,"title":{},"body":{"components/WizardComponent.html":{}}}],["steps[0",{"_index":1404,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[0].data.cent",{"_index":1405,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[2",{"_index":1407,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[2].data.odpair",{"_index":1409,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[3",{"_index":1411,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[3].data.odpair",{"_index":1412,"title":{},"body":{"components/MapComponent.html":{}}}],["stepsiz",{"_index":2459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stop",{"_index":567,"title":{},"body":{"injectables/ClockService.html":{},"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"components/SimulationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["store",{"_index":317,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WizardService.html":{}}}],["storemodul",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{}}}],["storemodule.forfeature('simul",{"_index":1808,"title":{},"body":{"modules/SimulationModule.html":{}}}],["storemodule.forfeature('ui",{"_index":2042,"title":{},"body":{"modules/UiModule.html":{}}}],["storemodule.forroot",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["strada",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["strategi",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["strategy.t",{"_index":236,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["strategy.ts:6",{"_index":242,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["stream",{"_index":1598,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["stream.subscrib",{"_index":1611,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["string",{"_index":335,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"interfaces/Counts.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":878,"title":{},"body":{"classes/Edge.html":{},"classes/Heap.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["styler",{"_index":2491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles/vari",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/UiComponent.html":{}}}],["styleurl",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["subhead",{"_index":1284,"title":{},"body":{"components/HomeComponent.html":{}}}],["subject",{"_index":2404,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":2399,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":279,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["subscript",{"_index":270,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["subscription.unsubscrib",{"_index":286,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["subsequ",{"_index":2517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["substanti",{"_index":2408,"title":{},"body":{"license.html":{}}}],["sum",{"_index":676,"title":{},"body":{"injectables/DemandService.html":{}}}],["sum(odmatrixassign",{"_index":710,"title":{},"body":{"injectables/DemandService.html":{}}}],["sumexp",{"_index":1016,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sumexps.push(sum",{"_index":1018,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["sumexps[z",{"_index":1020,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["super",{"_index":372,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["support",{"_index":1695,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules.html":{}}}],["sure",{"_index":1983,"title":{},"body":{"components/UiComponent.html":{}}}],["surfac",{"_index":835,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["svg",{"_index":2428,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":396,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/SimulationState-1.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["switchmap",{"_index":1584,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["switchmap((respons",{"_index":1600,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["t",{"_index":1032,"title":{},"body":{"classes/EnumValues.html":{}}}],["tabl",{"_index":1502,"title":{},"body":{"components/NumericComponent.html":{}}}],["tag",{"_index":757,"title":{"interfaces/Tag.html":{}},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tag.key",{"_index":917,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tag.valu",{"_index":919,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["take",{"_index":778,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["takewhil",{"_index":596,"title":{},"body":{"injectables/ClockService.html":{}}}],["tap",{"_index":1970,"title":{},"body":{"components/UiComponent.html":{}}}],["tap((dialogresult",{"_index":1986,"title":{},"body":{"components/UiComponent.html":{}}}],["target",{"_index":1257,"title":{},"body":{"components/HomeComponent.html":{}}}],["targettim",{"_index":1888,"title":{},"body":{"classes/Statistics.html":{}}}],["td.mat",{"_index":1506,"title":{},"body":{"components/NumericComponent.html":{}}}],["technic",{"_index":1546,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["term",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/TermsComponent.html":{}}}],["terms'},{'nam",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["terms.component.html",{"_index":1932,"title":{},"body":{"components/TermsComponent.html":{}}}],["terms.component.scss",{"_index":1931,"title":{},"body":{"components/TermsComponent.html":{}}}],["terms/terms.compon",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["termscompon",{"_index":146,"title":{"components/TermsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["test",{"_index":2467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testlicens",{"_index":2383,"title":{},"body":{"index.html":{}}}],["text",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/PrivacyComponent.html":{},"components/SimulationComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["text.split",{"_index":1252,"title":{},"body":{"components/HomeComponent.html":{}}}],["theta",{"_index":1009,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["this.adddestination(control",{"_index":1112,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.addorigin(control",{"_index":1104,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.argmin(linkflow",{"_index":730,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.avgspe",{"_index":1791,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.busiestchart",{"_index":475,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.data.datasets[0].data",{"_index":545,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.data.label",{"_index":538,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.destroy",{"_index":476,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.options.annotation.annotations.push",{"_index":515,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.options.title.text",{"_index":511,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestchart.upd",{"_index":549,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.busiestctx",{"_index":485,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.calcpathcosts(odpair",{"_index":1008,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.calcshortestpathsprobabilities(odpair",{"_index":950,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.cdr.detectchang",{"_index":1981,"title":{},"body":{"components/UiComponent.html":{}}}],["this.cent",{"_index":1205,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.clock.getstatist",{"_index":1915,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.clock.presscontrol(control",{"_index":1794,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.clock.reset",{"_index":1596,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.count",{"_index":1789,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.createchart",{"_index":470,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.createmap(el",{"_index":1198,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.currentstep",{"_index":1384,"title":{},"body":{"components/MapComponent.html":{}}}],["this.data",{"_index":1494,"title":{},"body":{"components/NumericComponent.html":{}}}],["this.demand.calcodmatrix",{"_index":1642,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.demand.changedemand(demand",{"_index":383,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.changestartingtimes(startingtim",{"_index":384,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.getodmatrix",{"_index":405,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.getstartingtim",{"_index":406,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.demand.reset",{"_index":1594,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.dens",{"_index":863,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.descript",{"_index":2096,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.dialog.open(infodialogcompon",{"_index":1994,"title":{},"body":{"components/UiComponent.html":{}}}],["this.disabledefaultui",{"_index":1206,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.disabledoubleclickzoom",{"_index":1207,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.dist",{"_index":855,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.drawingoptions.marker.set('vis",{"_index":875,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.drawingoptions.polyline.set('strokecolor",{"_index":873,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.drawingoptions.polyline.set('zindex",{"_index":874,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.dur",{"_index":856,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.durationintraff",{"_index":861,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edg",{"_index":891,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edgeid",{"_index":853,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.find((edg",{"_index":909,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.find((valu",{"_index":927,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.push(edg",{"_index":912,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.elementref.nativeelement.queryselector('#busiestchart",{"_index":486,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#heavytrafficchart",{"_index":482,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#iconcontain",{"_index":2092,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#map",{"_index":1197,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.elementref.nativeelement.queryselector('#moderatetrafficchart",{"_index":484,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.elementref.nativeelement.queryselector('.headlin",{"_index":1249,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.endsimul",{"_index":605,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["this.estimate(linkflow",{"_index":733,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.execut",{"_index":632,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.flow",{"_index":865,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.formbuilder.array",{"_index":2231,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formbuilder.group",{"_index":2230,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formgroup.get('bounds').setvalue(map.data.bound",{"_index":1723,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.formgroup.get('center').setvalu",{"_index":1668,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.formgroup.get('endsimulation').setvalue(end",{"_index":1793,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.formgroup.get('odpair",{"_index":370,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["this.formgroup.get('weathercondit",{"_index":395,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.freeflowveloc",{"_index":860,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.geocod",{"_index":1333,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.geocoder.geocod",{"_index":1337,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.gesturehandl",{"_index":1211,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.getbusiestedge(edg",{"_index":1882,"title":{},"body":{"classes/Statistics.html":{}}}],["this.getedge(edgeid).tags.find(tag",{"_index":916,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getheavytrafficedges(edges).map((edg",{"_index":1878,"title":{},"body":{"classes/Statistics.html":{}}}],["this.geticon(weather.icon",{"_index":2099,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.getkjam",{"_index":868,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getmoderatetrafficedges(edges).map((edg",{"_index":1879,"title":{},"body":{"classes/Statistics.html":{}}}],["this.getnames(e).map((nam",{"_index":1036,"title":{},"body":{"classes/EnumValues.html":{}}}],["this.getnode(node.nodeid",{"_index":900,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.getpathsedg",{"_index":941,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.gettrafficvolumes(edg",{"_index":1883,"title":{},"body":{"classes/Statistics.html":{}}}],["this.gls(linkflow",{"_index":722,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.heap",{"_index":959,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.heap.getpaths().length",{"_index":977,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.heap.push",{"_index":962,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.heavytrafficchart",{"_index":471,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.data.datasets[0].data",{"_index":541,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.data.label",{"_index":505,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.destroy",{"_index":472,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.options.title.text",{"_index":503,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficchart.upd",{"_index":547,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.heavytrafficctx",{"_index":481,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.http.get(url",{"_index":2182,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.icon",{"_index":2098,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.iconcontain",{"_index":2091,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.incidencematrix",{"_index":947,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.incidencematrix[z][n][m",{"_index":945,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.index",{"_index":403,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/StatisticsComponent.html":{}}}],["this.interv",{"_index":610,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.interval.pip",{"_index":631,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.isonpath(odmatrixassign",{"_index":734,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.isroundabout(edgeid",{"_index":920,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.latlng",{"_index":1334,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.linkflow",{"_index":867,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.location.codeaddress(address).foreach",{"_index":1667,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.getcurrentposition().subscrib",{"_index":1682,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.getlatlng().lat.tostr",{"_index":2175,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.location.getlatlng().lng.tostr",{"_index":2177,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.location.reset",{"_index":1591,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.location.setlatlng(cent",{"_index":1664,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.map.buildbounds(this.cent",{"_index":1391,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.clearnodesact",{"_index":1401,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.hidepath",{"_index":1402,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.hiderect",{"_index":1394,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.initmap(el",{"_index":1204,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.reset",{"_index":1590,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.map.setcenter(this.cent",{"_index":1201,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.setcenter(this.map.getcentroid",{"_index":1398,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.setcentroid",{"_index":1397,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.setzoom(17",{"_index":1399,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.setzoom(this.zoom",{"_index":1203,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.showgraph",{"_index":1395,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.shownodes(odpair",{"_index":1410,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.showpaths(odpair",{"_index":1413,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.showrect(bound",{"_index":1392,"title":{},"body":{"components/MapComponent.html":{}}}],["this.maptypeid",{"_index":1208,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.maxflow",{"_index":869,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.maxzoom",{"_index":1209,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.min.getd",{"_index":1714,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getfullyear",{"_index":1712,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.gethour",{"_index":1715,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getminut",{"_index":1717,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getmonth",{"_index":1713,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.minzoom",{"_index":1210,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.moderatetrafficchart",{"_index":473,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.data.datasets[0].data",{"_index":543,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.data.label",{"_index":509,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.destroy",{"_index":474,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.options.title.text",{"_index":507,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficchart.upd",{"_index":548,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.moderatetrafficctx",{"_index":483,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.network",{"_index":1979,"title":{},"body":{"components/UiComponent.html":{}}}],["this.network.calclinkflows(respons",{"_index":1641,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.correctgraph",{"_index":1607,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.creategraph(respons",{"_index":1602,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getassignmentmatrix",{"_index":721,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.network.getgraph",{"_index":1635,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getlinkflow",{"_index":720,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.network.getnetwork().pip",{"_index":1599,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getnetworkdata",{"_index":1603,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.getodpair",{"_index":404,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{}}}],["this.network.gettim",{"_index":1610,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.gettimestr",{"_index":2102,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.network.gettrafficdata",{"_index":1640,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.reset",{"_index":1592,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.network.setbounds(bound",{"_index":1719,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.setodpairs(odpair",{"_index":1084,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.network.settime(tim",{"_index":1721,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.updategraph(respons",{"_index":1605,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.nod",{"_index":889,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodeid",{"_index":846,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.filter((nod",{"_index":935,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.find((nod",{"_index":896,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.push(nod",{"_index":907,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.numer",{"_index":1980,"title":{},"body":{"components/UiComponent.html":{}}}],["this.odmatrix",{"_index":718,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.opendialog('ar",{"_index":1982,"title":{},"body":{"components/UiComponent.html":{}}}],["this.opensnackbar(error",{"_index":1978,"title":{},"body":{"components/UiComponent.html":{}}}],["this.paths.findindex((path",{"_index":1233,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.push",{"_index":1228,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.reduce((prev",{"_index":1235,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.paths.splice(index",{"_index":1234,"title":{},"body":{"classes/Heap.html":{},"interfaces/Path.html":{}}}],["this.pathtyp",{"_index":1082,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.paus",{"_index":618,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.pend",{"_index":1976,"title":{},"body":{"components/UiComponent.html":{}}}],["this.populatechart",{"_index":480,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.processingtim",{"_index":612,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.quick",{"_index":626,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.receiveact",{"_index":374,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["this.rel",{"_index":893,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.relationid",{"_index":883,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.renderer.appendchild(this.iconcontain",{"_index":2100,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.renderer.removechild(this.iconcontain",{"_index":2103,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.reset",{"_index":635,"title":{},"body":{"injectables/ClockService.html":{},"injectables/SchedulerService.html":{}}}],["this.resetcondit",{"_index":2094,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.resetcount",{"_index":957,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.router.navigate(['/hom",{"_index":1990,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["this.scheduler.reset",{"_index":1988,"title":{},"body":{"components/UiComponent.html":{}}}],["this.scheduler.scheduledemand(data",{"_index":2249,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.scheduler.schedulenetwork(data",{"_index":2248,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.scheduler.schedulesimulation(data",{"_index":2250,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.sendact",{"_index":375,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["this.setconditions(weathercondit",{"_index":2095,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.show",{"_index":1271,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.simulatedtimeinterv",{"_index":608,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["this.simulatedtimeperiod",{"_index":607,"title":{},"body":{"injectables/ClockService.html":{},"components/SimulationComponent.html":{}}}],["this.simulation.getstatist",{"_index":479,"title":{},"body":{"components/ChartsComponent.html":{},"components/StatisticsComponent.html":{}}}],["this.simulation.init",{"_index":1648,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.simulation.propagateflow",{"_index":645,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.simulation.reset",{"_index":1595,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.simulation.resetflow",{"_index":634,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.slow",{"_index":624,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.snackbar.openfromcomponent(messagearchivedcompon",{"_index":1991,"title":{},"body":{"components/UiComponent.html":{}}}],["this.start",{"_index":616,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.startingtim",{"_index":724,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.stat",{"_index":2277,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.statist",{"_index":478,"title":{},"body":{"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["this.statistics.busiestedgecapac",{"_index":521,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.busiestedgedata",{"_index":546,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.busiestedgelabel",{"_index":514,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.heavytrafficdata",{"_index":542,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.heavytrafficlabel",{"_index":506,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.moderatetrafficdata",{"_index":544,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.moderatetrafficlabel",{"_index":510,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.statistics.periods.map((valu",{"_index":539,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.step",{"_index":622,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.stepp",{"_index":2243,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stepper.reset",{"_index":2278,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.stepper.selected.complet",{"_index":2247,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stepper.selectedindex",{"_index":2252,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stop",{"_index":620,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.store.dispatch",{"_index":637,"title":{},"body":{"injectables/ClockService.html":{},"injectables/WizardService.html":{}}}],["this.store.pipe(select(fromsimulation.end)).subscribe((end",{"_index":604,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.store.pipe(select(fromui.wizardstate)).subscribe((st",{"_index":2276,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.styl",{"_index":1212,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.subscript",{"_index":614,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.subscription.clos",{"_index":628,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.subscription.unsubscrib",{"_index":633,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.subscriptions.foreach((subscript",{"_index":285,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChartsComponent.html":{},"components/UiComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('bounds').valuechanges.subscrib",{"_index":1718,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('center').valuechanges.subscrib",{"_index":1663,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('odpairs').valuechanges.subscrib",{"_index":378,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('time').valuechanges.subscrib",{"_index":1720,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.formgroup.get('weatherconditions').valuechanges.subscrib",{"_index":385,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromsimulation.end)).subscribe((end",{"_index":1792,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromsimulation.periods)).subscribe((period",{"_index":1776,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromsimulation.simulation)).subscribe((simul",{"_index":1492,"title":{},"body":{"components/NumericComponent.html":{},"components/SimulationComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.currentstep)).subscribe((currentstep",{"_index":392,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.error)).subscribe((error",{"_index":1977,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.map)).subscribe((map",{"_index":1087,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.pending)).subscribe((pend",{"_index":1975,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.steps)).subscribe((step",{"_index":1403,"title":{},"body":{"components/MapComponent.html":{}}}],["this.sum(odmatrixassign",{"_index":737,"title":{},"body":{"injectables/DemandService.html":{}}}],["this.tim",{"_index":2101,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.timeinterv",{"_index":1778,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.timeperiod",{"_index":1780,"title":{},"body":{"components/SimulationComponent.html":{}}}],["this.totalavgspe",{"_index":1921,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.totalprocessingtim",{"_index":613,"title":{},"body":{"injectables/ClockService.html":{},"components/StatisticsComponent.html":{}}}],["this.totalsimulatedtim",{"_index":1918,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.totaltim",{"_index":1916,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["this.updatechart",{"_index":502,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.updatedata",{"_index":501,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.updateodpairs(map.data.selectednod",{"_index":1089,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.updateopt",{"_index":500,"title":{},"body":{"components/ChartsComponent.html":{}}}],["this.updatesimulatedtimeperiod",{"_index":647,"title":{},"body":{"injectables/ClockService.html":{}}}],["this.valuechang",{"_index":373,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["this.veloc",{"_index":862,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.walk(o",{"_index":965,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.weather.changeweather(weathercondit",{"_index":391,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["this.weather.getfactor",{"_index":1645,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.getweathercondit",{"_index":2093,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.getweatherdata(this.network.gettim",{"_index":1608,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.reset",{"_index":1593,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weather.updateweatherdata(respons",{"_index":1609,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.weathercondit",{"_index":2170,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.wizard.goon",{"_index":2251,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.goon(data",{"_index":1634,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putinerror(\"brows",{"_index":1693,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('invalid",{"_index":1679,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('zero",{"_index":1674,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror(error",{"_index":1113,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.wizard.putinerror(messag",{"_index":1631,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('check",{"_index":1606,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('comput",{"_index":1636,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('cr",{"_index":1601,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('get",{"_index":1597,"title":{},"body":{"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('initi",{"_index":1647,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.putonhold('search",{"_index":1665,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold('upd",{"_index":1604,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.removefromwait",{"_index":1633,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.reset",{"_index":1589,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.wizard.stepp",{"_index":2242,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.updatestep",{"_index":1114,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.wizard.updatestep(this.formgroup.valu",{"_index":1090,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizardform",{"_index":2229,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formstep",{"_index":2228,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formsteps').get([index]).valu",{"_index":2246,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.zoom",{"_index":1213,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["through",{"_index":1310,"title":{},"body":{"injectables/LocationService.html":{}}}],["throwerror",{"_index":813,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["throwerror('getweatherdata",{"_index":2186,"title":{},"body":{"injectables/WeatherService.html":{}}}],["thunderstorm",{"_index":2126,"title":{},"body":{"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["tick",{"_index":2456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/EnumValues.html":{},"components/HomeComponent.html":{},"components/PrivacyComponent.html":{},"injectables/SchedulerService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["time.gettim",{"_index":2192,"title":{},"body":{"injectables/WeatherService.html":{}}}],["time.gettimezoneoffset",{"_index":2189,"title":{},"body":{"injectables/WeatherService.html":{}}}],["timeinterv",{"_index":807,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"classes/Statistics.html":{},"interfaces/Tag.html":{}}}],["timeintervaldecr",{"_index":2551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeintervalincr",{"_index":2550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timelimit",{"_index":2499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeout",{"_index":1692,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["timeperiod",{"_index":1757,"title":{},"body":{"components/SimulationComponent.html":{},"classes/Statistics.html":{}}}],["timer",{"_index":587,"title":{},"body":{"injectables/ClockService.html":{}}}],["timezon",{"_index":2190,"title":{},"body":{"injectables/WeatherService.html":{}}}],["timezoneoffset",{"_index":2188,"title":{},"body":{"injectables/WeatherService.html":{}}}],["titl",{"_index":2451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["togglevalu",{"_index":310,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["togglevalue(pair",{"_index":339,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["toinch",{"_index":2142,"title":{},"body":{"injectables/WeatherService.html":{}}}],["toinches(valu",{"_index":2162,"title":{},"body":{"injectables/WeatherService.html":{}}}],["tool",{"_index":2370,"title":{},"body":{"index.html":{}}}],["toolbar",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["toolbox",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["top",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["tort",{"_index":2425,"title":{},"body":{"license.html":{}}}],["tosecond",{"_index":1773,"title":{},"body":{"components/SimulationComponent.html":{},"miscellaneous/functions.html":{}}}],["toseconds(periods.simulatedtimeinterv",{"_index":1783,"title":{},"body":{"components/SimulationComponent.html":{}}}],["toseconds(uiconfig.simulatedtimeinterv",{"_index":1784,"title":{},"body":{"components/SimulationComponent.html":{}}}],["toseconds(valu",{"_index":1038,"title":{},"body":{"classes/EnumValues.html":{},"miscellaneous/functions.html":{}}}],["total",{"_index":777,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{}}}],["totalavgspe",{"_index":1901,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["totalprocessingtim",{"_index":557,"title":{},"body":{"injectables/ClockService.html":{},"components/StatisticsComponent.html":{}}}],["totalsimulatedtim",{"_index":627,"title":{},"body":{"injectables/ClockService.html":{},"components/StatisticsComponent.html":{}}}],["totaltim",{"_index":1902,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["tr.mat",{"_index":1503,"title":{},"body":{"components/NumericComponent.html":{}}}],["traffic",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trafficchartopt",{"_index":467,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["trafficcount",{"_index":656,"title":{},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["trafficdata",{"_index":2473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trafficvolum",{"_index":655,"title":{},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{},"classes/Statistics.html":{}}}],["trafficvolumes[i",{"_index":1886,"title":{},"body":{"classes/Statistics.html":{}}}],["transform",{"_index":1283,"title":{},"body":{"components/HomeComponent.html":{},"components/UiComponent.html":{}}}],["transit",{"_index":2495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('void",{"_index":2483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translat",{"_index":1998,"title":{},"body":{"components/UiComponent.html":{},"dependencies.html":{}}}],["translatez",{"_index":1262,"title":{},"body":{"components/HomeComponent.html":{}}}],["transport",{"_index":885,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["travers",{"_index":969,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["tri",{"_index":937,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["trigger('hometransit",{"_index":2482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["turf/area",{"_index":2306,"title":{},"body":{"dependencies.html":{}}}],["turf/bear",{"_index":2311,"title":{},"body":{"dependencies.html":{}}}],["turf/cent",{"_index":2317,"title":{},"body":{"dependencies.html":{}}}],["turf/centroid",{"_index":2315,"title":{},"body":{"dependencies.html":{}}}],["turf/dist",{"_index":2312,"title":{},"body":{"dependencies.html":{}}}],["turf/help",{"_index":2308,"title":{},"body":{"dependencies.html":{}}}],["turf/invari",{"_index":2310,"title":{},"body":{"dependencies.html":{}}}],["turf/transform",{"_index":2313,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":745,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"guards/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"interfaces/Counts.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"interfaces/Map.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Simulation.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"interfaces/SimulationState.html":{},"interfaces/SimulationState-1.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":2435,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1775,"title":{},"body":{"components/SimulationComponent.html":{}}}],["typescript",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{}}}],["ui",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/MapState.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["ui'},{'nam",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ui.compon",{"_index":2024,"title":{},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{}}}],["ui.component.html",{"_index":1945,"title":{},"body":{"components/UiComponent.html":{}}}],["ui.component.scss",{"_index":1944,"title":{},"body":{"components/UiComponent.html":{}}}],["ui/ui",{"_index":602,"title":{},"body":{"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["ui/ui.module#uimodul",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["uicompon",{"_index":148,"title":{"components/UiComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["uiconfig",{"_index":367,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["uiconfig.links.heavytrafficcolor",{"_index":492,"title":{},"body":{"components/ChartsComponent.html":{}}}],["uiconfig.links.moderatetrafficcolor",{"_index":494,"title":{},"body":{"components/ChartsComponent.html":{}}}],["uiconfig.map.cent",{"_index":1385,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.map.zoom",{"_index":1386,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.maxodpair",{"_index":1095,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["uiconfig.simulatedtimeinterv",{"_index":609,"title":{},"body":{"injectables/ClockService.html":{}}}],["uiconfig.sp",{"_index":872,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["uiconfig.theta",{"_index":1010,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["uiconfig.timeintervaldecr",{"_index":642,"title":{},"body":{"injectables/ClockService.html":{}}}],["uiconfig.timeintervalincr",{"_index":641,"title":{},"body":{"injectables/ClockService.html":{}}}],["uiconfig.timelimit",{"_index":1716,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["uiconfig.weathericons[index",{"_index":389,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["uimodul",{"_index":2012,"title":{"modules/UiModule.html":{}},"body":{"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["uiroutingmodul",{"_index":2017,"title":{"modules/UiRoutingModule.html":{}},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["uistat",{"_index":2045,"title":{"interfaces/UiState.html":{}},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["ul",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{}}}],["unavail",{"_index":1690,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["undefin",{"_index":895,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{}}}],["under",{"_index":1940,"title":{},"body":{"components/TermsComponent.html":{}}}],["underlin",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{}}}],["unexpect",{"_index":1630,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["unix",{"_index":2195,"title":{},"body":{"injectables/WeatherService.html":{}}}],["unknown",{"_index":695,"title":{},"body":{"injectables/DemandService.html":{}}}],["unknown_error",{"_index":1678,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["updat",{"_index":376,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/ClockService.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"index.html":{}}}],["updatechart",{"_index":439,"title":{},"body":{"components/ChartsComponent.html":{}}}],["updatedata",{"_index":440,"title":{},"body":{"components/ChartsComponent.html":{}}}],["updateodpair",{"_index":1062,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["updateodpairs(nod",{"_index":1075,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["updateon",{"_index":2240,"title":{},"body":{"components/WizardComponent.html":{}}}],["updateopt",{"_index":441,"title":{},"body":{"components/ChartsComponent.html":{}}}],["updatesimulatedtimeperiod",{"_index":568,"title":{},"body":{"injectables/ClockService.html":{}}}],["updatestep",{"_index":2260,"title":{},"body":{"injectables/WizardService.html":{}}}],["updatestep(data",{"_index":2271,"title":{},"body":{"injectables/WizardService.html":{}}}],["updateweatherdata",{"_index":2143,"title":{},"body":{"injectables/WeatherService.html":{}}}],["updateweatherdata(data",{"_index":2164,"title":{},"body":{"injectables/WeatherService.html":{}}}],["uppercas",{"_index":2108,"title":{},"body":{"components/WeatherComponent.html":{}}}],["urban",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["url",{"_index":2171,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"classes/Edge.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"index.html":{},"license.html":{}}}],["usefactori",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":2047,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["utc",{"_index":2196,"title":{},"body":{"injectables/WeatherService.html":{}}}],["utctim",{"_index":2191,"title":{},"body":{"injectables/WeatherService.html":{}}}],["util",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["valid",{"_index":353,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["validators.max(uiconfig.rainintensity.max",{"_index":2237,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.max(uiconfig.snowintensity.max",{"_index":2238,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.max(uiconfig.visibility.max",{"_index":2234,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.min(0",{"_index":2233,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.pattern('^[0",{"_index":2235,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.requir",{"_index":2232,"title":{},"body":{"components/WizardComponent.html":{}}}],["validators.requiredtru",{"_index":2239,"title":{},"body":{"components/WizardComponent.html":{}}}],["valu",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/EnumValues.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"classes/MapChanged.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"classes/PeriodsChanged.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/Reset-1.html":{},"classes/Reset-2.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/SimulationChanged.html":{},"components/SimulationComponent.html":{},"classes/SimulationEnded.html":{},"classes/Statistics.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.destination.nodeid",{"_index":930,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["value.edgeid",{"_index":942,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["value.origin.nodeid",{"_index":928,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["valuechang",{"_index":274,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/NumericComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WeatherComponent.html":{}}}],["var",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["variabl",{"_index":2437,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varianc",{"_index":810,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["vehicl",{"_index":788,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"components/SimulationComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["veloc",{"_index":758,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["version",{"_index":954,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{}}}],["vertic",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/ChartsComponent.html":{}}}],["viewchild",{"_index":2223,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewchild('stepp",{"_index":2218,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewencapsul",{"_index":1377,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["viewencapsulation.non",{"_index":1360,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["visibl",{"_index":803,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"interfaces/WeatherConditions.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"injectables/ClockService.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Heap.html":{},"components/HomeComponent.html":{},"interfaces/LinkFlow.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"components/NumericComponent.html":{},"interfaces/OdPair.html":{},"interfaces/Path.html":{},"components/PrivacyComponent.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["volum",{"_index":496,"title":{},"body":{"components/ChartsComponent.html":{},"components/NumericComponent.html":{},"miscellaneous/variables.html":{}}}],["voluntarili",{"_index":1538,"title":{},"body":{"components/PrivacyComponent.html":{}}}],["wait",{"_index":1632,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["walk",{"_index":964,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["walk(o",{"_index":976,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["want",{"_index":1984,"title":{},"body":{"components/UiComponent.html":{}}}],["warranti",{"_index":2410,"title":{},"body":{"license.html":{}}}],["way",{"_index":1496,"title":{},"body":{"components/NumericComponent.html":{},"components/PrivacyComponent.html":{}}}],["waynam",{"_index":654,"title":{},"body":{"interfaces/Counts.html":{},"components/NumericComponent.html":{},"interfaces/NumericalSimulation.html":{},"interfaces/Simulation.html":{}}}],["weather",{"_index":321,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"injectables/SchedulerService.html":{},"interfaces/Tag.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["weather'},{'nam",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["weather.component.html",{"_index":2067,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":2066,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.descript",{"_index":2097,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":2132,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.compon",{"_index":2038,"title":{},"body":{"modules/UiModule.html":{}}}],["weather/weather.modul",{"_index":1469,"title":{},"body":{"modules/NetworkModule.html":{}}}],["weathercompon",{"_index":150,"title":{"components/WeatherComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["weathercondit",{"_index":363,"title":{"interfaces/WeatherConditions.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"components/WeatherComponent.html":{},"interfaces/WeatherConditions.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{}}}],["weatherconditions.descript",{"_index":388,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherconditions.icon",{"_index":390,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherconditionscontrol",{"_index":394,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["weatherdescript",{"_index":347,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"interfaces/WeatherConditions.html":{},"miscellaneous/enumerations.html":{}}}],["weathericon",{"_index":2535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weathermodul",{"_index":1467,"title":{"modules/WeatherModule.html":{}},"body":{"modules/NetworkModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservic",{"_index":322,"title":{"injectables/WeatherService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"injectables/SchedulerService.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["web",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{},"index.html":{}}}],["weight",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/HomeComponent.html":{},"components/WeatherComponent.html":{}}}],["whether",{"_index":2423,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1571,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["width",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["without",{"_index":2392,"title":{},"body":{"license.html":{}}}],["wizard",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"classes/Reset-2.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wizard.component.html",{"_index":2204,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.component.scss",{"_index":2203,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.servic",{"_index":357,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["wizard/chang",{"_index":2031,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/estim",{"_index":2029,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/scheduler.servic",{"_index":1972,"title":{},"body":{"components/UiComponent.html":{},"modules/UiModule.html":{}}}],["wizard/search",{"_index":2026,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/select",{"_index":2028,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/simulation/simulation.compon",{"_index":2033,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/statistics/statistics.compon",{"_index":2034,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.compon",{"_index":2025,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.servic",{"_index":2041,"title":{},"body":{"modules/UiModule.html":{}}}],["wizardact",{"_index":1151,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{}}}],["wizardactiontyp",{"_index":1139,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{}}}],["wizardactiontypes.goon",{"_index":1137,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.reset",{"_index":1150,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.stepchang",{"_index":1145,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steperror",{"_index":1147,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steppend",{"_index":1148,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset-2.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardcompon",{"_index":152,"title":{"components/WizardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/ChartsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/NumericComponent.html":{},"components/PrivacyComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/TermsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["wizardform",{"_index":2206,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizardreduc",{"_index":2354,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wizardreducer(st",{"_index":2282,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/functions.html":{}}}],["wizardservic",{"_index":318,"title":{"injectables/WizardService.html":{}},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"injectables/SchedulerService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"modules/UiModule.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"overview.html":{}}}],["wizardst",{"_index":2058,"title":{"interfaces/WizardState.html":{}},"body":{"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":1321,"title":{},"body":{"injectables/LocationService.html":{}}}],["wrappedtext",{"_index":1253,"title":{},"body":{"components/HomeComponent.html":{}}}],["wrapper",{"_index":1275,"title":{},"body":{"components/HomeComponent.html":{}}}],["x",{"_index":534,"title":{},"body":{"components/ChartsComponent.html":{},"injectables/DemandService.html":{},"miscellaneous/variables.html":{}}}],["xadjust",{"_index":536,"title":{},"body":{"components/ChartsComponent.html":{}}}],["xax",{"_index":2453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xi",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":519,"title":{},"body":{"components/ChartsComponent.html":{},"miscellaneous/variables.html":{}}}],["yadjust",{"_index":530,"title":{},"body":{"components/ChartsComponent.html":{}}}],["yax",{"_index":2458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ye",{"_index":1289,"title":{},"body":{"components/InfoDialogComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":729,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{}}}],["zero",{"_index":956,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["zindex",{"_index":802,"title":{},"body":{"classes/Edge.html":{},"interfaces/LinkFlow.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"interfaces/OdPair.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["zone.j",{"_index":2337,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"components/GoogleMapComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about/about.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/about/about.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : new Date().getFullYear()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/about/about.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n    currentYear: number = new Date().getFullYear();\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    STRADA\n    An urban traffic web simulator that uses data in real time\n    Copyright&nbsp;©&nbsp;{{ currentYear }} Roberto&nbsp;Simonetti - MIT license\n    Project developed for the dissertation of my bachelor's degree in computer engineering\n    Links\n    \n        \n            \n                Repository:\n                STRADA source code\n            \n        \n        \n            \n                Official documentation:\n                STRADA documentation\n            \n        \n    \n    Built with\n    \n        \n            \n                Angular, TypeScript & Firebase\n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                @import '../../styles/variables';\n\n.app-about {\n    padding: 16px;\n    text-align: center;\n\n    h1 {\n        font-weight: bold;\n    }\n    \n    > p {\n        font-style: italic;\n        font-size: 14px;\n    }\n    \n    a {\n        text-decoration: underline;\n        color: inherit;\n    \n        &:hover {\n            text-decoration: underline;\n        }\n    }\n    \n    ul {\n        list-style: none;\n        padding: 0;\n        margin-top: -24px;\n        font-size: 14px;\n    }    \n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    STRADA    An urban traffic web simulator that uses data in real time    Copyright © {{ currentYear }} Roberto Simonetti - MIT license    Project developed for the dissertation of my bachelor\\'s degree in computer engineering    Links                                        Repository:                STRADA source code                                                        Official documentation:                STRADA documentation                            Built with                                        Angular, TypeScript & Firebase                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent { }\n\n    \n\n    \n        \n\n    \n        \n            \n            \n                STRADA\n            \n\n            \n\n            \n                \n            \n            \n                \n                    About\n                \n            \n        \n    \n\n    \n\n        \n            \n        \n\n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @import '../styles/variables';\n\n.app-root {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    .mat-drawer-container {\n        background: #ffffff;\n    }\n    \n    .mat-toolbar {   \n        .toolbar-logo {\n            height: 32px;\n            width: 32px;\n            vertical-align: middle;\n        }\n\n        a {\n            text-decoration: none;\n            color: inherit;\n            margin: 0 8px;\n    \n            h1 {\n                font-size: inherit;\n                font-weight: 700;\n            }\n        }\n    }\n}\n\n.mat-menu-panel {\n    .mat-menu-item {\n        .mat-icon {\n            line-height: 1;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    STRADA                                                                                                                About                                                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPrivacyComponent\n\nPrivacyComponent\n\nAppModule -->\n\nPrivacyComponent->AppModule\n\n\n\n\n\nTermsComponent\n\nTermsComponent\n\nAppModule -->\n\nTermsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AboutComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                PrivacyComponent\n                            \n                            \n                                TermsComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    DemandModule\n                            \n                            \n                                    LocationModule\n                            \n                            \n                                    NetworkModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    SimulationModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { StoreModule } from '@ngrx/store';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { PrivacyComponent } from './privacy/privacy.component';\nimport { TermsComponent } from './terms/terms.component';\nimport { LocationModule } from './location/location.module';\nimport { NetworkModule } from './network/network.module';\nimport { DemandModule } from './demand/demand.module';\nimport { SimulationModule } from './simulation/simulation.module';\n\nimport { loadScripts } from './utils';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        AboutComponent,\n        PrivacyComponent,\n        TermsComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        SharedModule.forRoot(),\n        StoreModule.forRoot({}),\n        LocationModule,\n        NetworkModule,\n        DemandModule,\n        SimulationModule\n    ],\n    providers: [\n        {\n            provide: APP_INITIALIZER,\n            useFactory: loadScripts,\n            deps: [],\n            multi: true\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPreloadingStrategy.html":{"url":"classes/AppPreloadingStrategy.html","title":"class - AppPreloadingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPreloadingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-preloading-strategy.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        PreloadingStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preload\n                            \n                            \n                        \n                    \n                \n                \n                    \npreload(route: Route, load: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-preloading-strategy.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    Route\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        load\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { PreloadingStrategy, Route } from \"@angular/router\";\nimport { Observable, of } from \"rxjs\";\n\nexport class AppPreloadingStrategy implements PreloadingStrategy {\n\n    preload(route: Route, load: Function): Observable {\n        return route.data && route.data.preload ? load() : of(null);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { AppPreloadingStrategy } from './app-preloading-strategy';\n\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { PrivacyComponent } from './privacy/privacy.component';\nimport { TermsComponent } from './terms/terms.component';\n\n@NgModule({\n    providers: [AppPreloadingStrategy],\n    imports: [\n        RouterModule.forRoot([\n            { path: '', redirectTo: 'home', pathMatch: 'full' },\n            { path: 'home', component: HomeComponent },\n            { path: 'about', component: AboutComponent },\n            {\n                path: 'simulation',\n                loadChildren: './ui/ui.module#UiModule',\n                data: { preload: false }\n            },\n            { path: 'privacy', component: PrivacyComponent },\n            { path: 'terms', component: TermsComponent },\n            { path: '**', redirectTo: 'home' }\n        ], { preloadingStrategy: AppPreloadingStrategy })\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseComponent.html":{"url":"classes/BaseComponent.html","title":"class - BaseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/base.component.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class inherited from UI components.\n\n            \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { OnInit, OnDestroy } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * Abstract class inherited from UI components.\n */\nexport abstract class BaseComponent implements OnInit, OnDestroy {\n\n    subscriptions: Subscription[] = [];\n\n    abstract ngOnInit(): void;\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    /**\n     * Subscribes to the form changes.\n     */\n    abstract valueChanges(): void;\n\n    /**\n     * Subscribes to the actions sent by other components.\n     */\n    abstract receiveActions(): void;\n\n    /**\n     * Subscribes to the actions sent to other components.\n     */\n    abstract sendActions(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanComponentDeactivate.html":{"url":"interfaces/CanComponentDeactivate.html","title":"interface - CanComponentDeactivate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CanComponentDeactivate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/can-deactivate-guard.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canDeactivate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canDeactivate\n                                    \n                                \n                                \n                                    \n                                        canDeactivate:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable() export class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate): boolean | Observable | Promise {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CanDeactivateGuard.html":{"url":"guards/CanDeactivateGuard.html","title":"guard - CanDeactivateGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    CanDeactivateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/can-deactivate-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate(component: CanComponentDeactivate)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/can-deactivate-guard.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    CanComponentDeactivate\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean | Observable | Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable() export class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate): boolean | Observable | Promise {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeOfConditionsComponent.html":{"url":"components/ChangeOfConditionsComponent.html","title":"component - ChangeOfConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangeOfConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-change-of-conditions\n            \n\n            \n                styleUrls\n                ./change-of-conditions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-of-conditions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                descriptions\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildOdPair\n                            \n                            \n                                getVisibility\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                toggleValue\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    odPairs\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService, network: NetworkService, weather: WeatherService, demand: DemandService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        demand\n                                                  \n                                                        \n                                                                    DemandService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildOdPair\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildOdPair(odPair: OdPair, demand: number, startingTime: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:125\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        odPair\n                                                        \n                                                                    OdPair\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        demand\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        startingTime\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormGroup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetVisibility(pair: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pair\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleValue(pair: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:114\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pair\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            descriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        descriptions:     WeatherDescription[]\n\n                    \n                \n                    \n                        \n                            Type :     WeatherDescription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odPairs\n                    \n                \n\n                \n                    \n                        getodPairs()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:32\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, AbstractControl, Validators } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\nimport * as combine from 'mout/array/combine';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport { WeatherService } from '../../../network/weather/weather.service';\nimport { DemandService } from '../../../demand/demand.service';\nimport * as fromUi from '../../models/reducers';\nimport { WeatherDescription, WeatherConditions } from '../../../network/weather/weather';\nimport { OdPair } from '../../../network/graph';\nimport { EnumValues } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-change-of-conditions',\n    templateUrl: './change-of-conditions.component.html',\n    styleUrls: ['./change-of-conditions.component.scss']\n})\nexport class ChangeOfConditionsComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    descriptions: WeatherDescription[] = [];\n\n    get odPairs(): FormArray {\n        return this.formGroup.get('odPairs') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService,\n        private weather: WeatherService,\n        private demand: DemandService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates demand service data on value changes.\n        this.subscriptions.push(this.formGroup.get('odPairs').valueChanges.subscribe(\n            (odPairs: any[]) => {\n                const demand = odPairs.map((pair: any) => {\n                    return pair.demand;\n                });\n                const startingTimes = odPairs.map((pair: any) => {\n                    return pair.startingTime;\n                });\n                this.demand.changeDemand(demand);\n                this.demand.changeStartingTimes(startingTimes);\n            }\n        ));\n        // Updates weather service data on value changes.\n        this.subscriptions.push(this.formGroup.get('weatherConditions').valueChanges.subscribe(\n            (weatherConditions: WeatherConditions) => {\n                const index = EnumValues.getValues(WeatherDescription)\n                    .findIndex(description => description == weatherConditions.description);\n                if (index != -1) {\n                    const icon = uiConfig.weatherIcons[index];\n                    weatherConditions.icon = icon;\n                }\n                this.weather.changeWeather(weatherConditions);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            const odPairsControl = this.formGroup.get('odPairs') as FormArray;\n            const weatherConditionsControl = this.formGroup.get('weatherConditions');\n            switch (currentStep) {\n                case 0:\n                    // Resets control.\n                    if (odPairsControl.length > 0) {\n                        for (let i = odPairsControl.length - 1; i >= 0; i--) {\n                            odPairsControl.removeAt(i);\n                        }\n                    }\n                    break;\n                case this.index:\n                    const odPairs = this.network.getOdPairs();\n                    const demand = this.demand.getOdMatrix();\n                    const startingTimes = this.demand.getStartingTimes();\n                    for (let i = 0; i \n    \n\n    \n        \n    \n        \n            \n                \n                    O\n                    D\n                    Demand\n                    Time\n                    \n                \n                \n                    \n                        {{ pair.value.origin }}\n                    \n                    \n                        {{ pair.value.destination }}\n                    \n                    \n                        \n                            \n                            \n                                Invalid value\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                Invalid value\n                            \n                        \n                    \n                    \n                        \n                            {{ getVisibility(pair) }}\n                        \n                    \n                \n            \n        \n        \n        \n            \n                \n                    \n                        {{ description }}\n                    \n                \n            \n            \n                \n                m\n                \n                    Invalid value\n                \n            \n            \n                \n                mm\n                \n                    Invalid value\n                \n            \n            \n                \n                mm\n                \n                    Invalid value\n                \n            \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n                \n                    ./change-of-conditions.component.scss\n                \n                .header {\n    background-color: #eceff1;\n    padding: 4px;\n    text-align: center;\n    font-weight: 500;\n}\n\n.cell {\n    background-color: #eceff1;\n    height: 64px;\n    padding: 4px;\n    text-align: center;\n\n    .mat-icon-button {\n        .mat-icon {\n            font-size: 20px;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            O                    D                    Demand                    Time                                                                                                {{ pair.value.origin }}                                                                {{ pair.value.destination }}                                                                                                                                                        Invalid value                                                                                                                                                                                                            Invalid value                                                                                                                                                {{ getVisibility(pair) }}                                                                                                                                                                        {{ description }}                                                                                            m                                    Invalid value                                                                        mm                                    Invalid value                                                                        mm                                    Invalid value                                                    Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangeOfConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChartsComponent.html":{"url":"components/ChartsComponent.html","title":"component - ChartsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChartsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/charts/charts.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-charts\n            \n\n            \n                styleUrls\n                ./charts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./charts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                busiestChart\n                            \n                            \n                                busiestCtx\n                            \n                            \n                                heavyTrafficChart\n                            \n                            \n                                heavyTrafficCtx\n                            \n                            \n                                moderateTrafficChart\n                            \n                            \n                                moderateTrafficCtx\n                            \n                            \n                                statistics\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCharts\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                populateCharts\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                updateCharts\n                            \n                            \n                                updateData\n                            \n                            \n                                updateOptions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, store: Store, simulation: SimulationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/charts/charts.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateCharts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            populateCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \npopulateCharts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateCharts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:186\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateData\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:180\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busiestChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestChart:     Chart\n\n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busiestCtx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestCtx:     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heavyTrafficChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heavyTrafficChart:     Chart\n\n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heavyTrafficCtx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heavyTrafficCtx:     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moderateTrafficChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        moderateTrafficChart:     Chart\n\n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moderateTrafficCtx\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        moderateTrafficCtx:     HTMLCanvasElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLCanvasElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statistics:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/charts/charts.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, OnDestroy, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Store, select } from '@ngrx/store';\nimport { Chart } from 'chart.js';\n\nimport { SimulationService } from '../../simulation/simulation.service';\nimport * as fromUi from '../models/reducers';\nimport { formatTimeFromSeconds } from '../utils';\nimport { trafficChartOptions, busiestChartOptions, busiestColor } from './charts-config';\nimport { uiConfig } from '../ui-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-charts',\n    templateUrl: './charts.component.html',\n    styleUrls: ['./charts.component.scss']\n})\nexport class ChartsComponent extends BaseComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    heavyTrafficCtx: HTMLCanvasElement;\n\n    moderateTrafficCtx: HTMLCanvasElement;\n\n    busiestCtx: HTMLCanvasElement;\n\n    heavyTrafficChart: Chart;\n\n    moderateTrafficChart: Chart;\n\n    busiestChart: Chart;\n\n    statistics: any;\n\n    constructor(\n        private elementRef: ElementRef,\n        private store: Store,\n        private simulation: SimulationService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        //\n    }\n\n    ngAfterViewInit(): void {\n        this.createCharts();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n        if (this.heavyTrafficChart) { this.heavyTrafficChart.destroy(); }\n        if (this.moderateTrafficChart) { this.moderateTrafficChart.destroy(); }\n        if (this.busiestChart) { this.busiestChart.destroy(); }\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 5:\n                    this.statistics = this.simulation.getStatistics();\n                    this.populateCharts();\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    createCharts(): void {\n        this.heavyTrafficCtx = this.elementRef.nativeElement.querySelector('#heavyTrafficChart');\n        this.moderateTrafficCtx = this.elementRef.nativeElement.querySelector('#moderateTrafficChart');\n        this.busiestCtx = this.elementRef.nativeElement.querySelector('#busiestChart');\n\n        this.heavyTrafficChart = new Chart(this.heavyTrafficCtx, {\n            type: 'horizontalBar',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        data: [],\n                        hoverBackgroundColor: uiConfig.links.heavyTrafficColor\n                    }\n                ]\n            },\n            options: trafficChartOptions\n        });\n        this.moderateTrafficChart = new Chart(this.moderateTrafficCtx, {\n            type: 'horizontalBar',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        data: [],\n                        hoverBackgroundColor: uiConfig.links.moderateTrafficColor\n                    }\n                ]\n            },\n            options: trafficChartOptions\n        });\n        this.busiestChart = new Chart(this.busiestCtx, {\n            type: 'line',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'Traffic volume',\n                        steppedLine: true,\n                        data: [],\n                        borderColor: busiestColor,\n                        fill: false\n                    }\n                ]\n            },\n            options: busiestChartOptions\n        });\n    }\n\n    populateCharts(): void {\n        this.updateOptions();\n        this.updateData();\n        this.updateCharts();\n    }\n\n    updateOptions(): void {\n        this.heavyTrafficChart.options.title.text = 'Heavy traffic';\n        this.heavyTrafficChart.data.labels = this.statistics.heavyTrafficLabels;\n        this.moderateTrafficChart.options.title.text = 'Moderate traffic';\n        this.moderateTrafficChart.data.labels = this.statistics.moderateTrafficLabels;\n        this.busiestChart.options.title.text = 'Busiest edge ' + this.statistics.busiestEdgeLabel;\n        this.busiestChart.options.annotation.annotations.push({\n            type: 'line',\n            mode: 'horizontal',\n            scaleID: \"y-axis-0\",\n            value: this.statistics.busiestEdgeCapacity,\n            borderColor: '#666',\n            borderWidth: 2,\n            label: {\n                backgroundColor: 'rgba(255,255,255,1.0)',\n                fontStyle: \"normal\",\n                fontColor: \"#666\",\n                position: \"right\",\n                yAdjust: 0,\n                content: \"Capacity\",\n                enabled: true\n            }\n        });\n        this.busiestChart.options.annotation.annotations.push({\n            type: 'line',\n            mode: 'vertical',\n            scaleID: \"x-axis-0\",\n            value: formatTimeFromSeconds(this.statistics.busiestEdgeDelay),\n            borderColor: '#666',\n            borderWidth: 2,\n            label: {\n                backgroundColor: 'rgba(255,255,255,1.0)',\n                fontStyle: \"normal\",\n                fontColor: \"#666\",\n                position: \"center\",\n                xAdjust: 0,\n                content: \"Delay\",\n                enabled: true\n            }\n        });\n        this.busiestChart.data.labels = this.statistics.periods.map((value: number) => formatTimeFromSeconds(value));\n    }\n\n    updateData(): void {\n        this.heavyTrafficChart.data.datasets[0].data = this.statistics.heavyTrafficData;\n        this.moderateTrafficChart.data.datasets[0].data = this.statistics.moderateTrafficData;\n        this.busiestChart.data.datasets[0].data = this.statistics.busiestEdgeData;\n    }\n\n    updateCharts(): void {\n        this.heavyTrafficChart.update();\n        this.moderateTrafficChart.update();\n        this.busiestChart.update();\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n\n\n    \n        \n    \n\n    \n\n    \n                \n                    ./charts.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChartsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClockService.html":{"url":"injectables/ClockService.html","title":"injectable - ClockService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ClockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/clock.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endSimulation\n                            \n                            \n                                    Private\n                                interval\n                            \n                            \n                                    Private\n                                processingTime\n                            \n                            \n                                    Private\n                                simulatedTimeInterval\n                            \n                            \n                                    Private\n                                simulatedTimePeriod\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                totalProcessingTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                execute\n                            \n                            \n                                    Public\n                                getStatistics\n                            \n                            \n                                    Private\n                                pause\n                            \n                            \n                                    Public\n                                pressControl\n                            \n                            \n                                    Private\n                                quick\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                slow\n                            \n                            \n                                    Private\n                                start\n                            \n                            \n                                    Private\n                                step\n                            \n                            \n                                    Private\n                                stop\n                            \n                            \n                                    Private\n                                updateSimulatedTimePeriod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, simulation: SimulationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/clock.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        execute()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:180\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getStatistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStatistics()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pause\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pause()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pressControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pressControl(control: Control)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    Control\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            quick\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        quick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:163\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            slow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        slow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:148\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        start()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:103\n                            \n                        \n\n\n                \n                    \n                            Starts simulation.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            step\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        step()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:141\n                            \n                        \n\n\n                \n                    \n                            Performs one step.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stop()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSimulatedTimePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateSimulatedTimePeriod()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:195\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            endSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endSimulation:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            interval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        interval:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:36\n                            \n                        \n\n                \n                    \n                        Simulation timer.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            processingTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:41\n                            \n                        \n\n                \n                    \n                        PropagateFlow processing time (ms).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            simulatedTimeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimeInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:31\n                            \n                        \n\n                \n                    \n                        Simulated time interval.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            simulatedTimePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimePeriod:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:26\n                            \n                        \n\n                \n                    \n                        Simulated running time.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            totalProcessingTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalProcessingTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/clock.service.ts:43\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Observable, interval, Subscription } from \"rxjs\";\nimport { takeWhile } from \"rxjs/operators\";\n\nimport { Store, select } from '@ngrx/store';\n\nimport { SimulationService } from \"./simulation.service\";\nimport * as fromSimulation from './models/reducers';\nimport { SimulationActionTypes } from './models/actions/simulation.actions';\nimport { uiConfig } from \"../ui/ui-config\";\n\nexport enum Control {\n    start = 'start',\n    pause = 'pause',\n    stop = 'stop',\n    step = 'step',\n    slow = 'slow',\n    quick = 'quick'\n}\n\n@Injectable() export class ClockService {\n\n    /**\n     * Simulated running time.\n     */\n    private simulatedTimePeriod: number;\n\n    /**\n     * Simulated time interval.\n     */\n    private simulatedTimeInterval: number;\n\n    /**\n     * Simulation timer.\n     */\n    private interval: Observable;\n\n    /**\n     * PropagateFlow processing time (ms).\n     */\n    private processingTime: number = 0;\n\n    private totalProcessingTime: number = 0;\n\n    private endSimulation: boolean = false;\n\n    private subscription: Subscription;\n\n    constructor(\n        private store: Store,\n        private simulation: SimulationService\n    ) {\n        this.store.pipe(select(fromSimulation.end)).subscribe((end: boolean) => {\n            this.endSimulation = end;\n        });\n        this.simulatedTimePeriod = 0;\n        this.simulatedTimeInterval = uiConfig.simulatedTimeInterval;\n    }\n\n    public reset(): void {\n        this.simulatedTimePeriod = 0;\n        this.simulatedTimeInterval = uiConfig.simulatedTimeInterval;\n        this.interval = null;\n        this.processingTime = 0;\n        this.totalProcessingTime = 0;\n        this.endSimulation = false;\n        this.subscription = null;\n    }\n\n    public pressControl(control: Control): void {\n        switch (control) {\n            case Control.start:\n                this.start();\n                break;\n            case Control.pause:\n                this.pause();\n                break;\n            case Control.stop:\n                this.stop();\n                break;\n            case Control.step:\n                this.step();\n                break;\n            case Control.slow:\n                this.slow();\n                break;\n            case Control.quick:\n                this.quick();\n                break;\n        }\n    }\n\n    public getStatistics(): any {\n        return {\n            totalSimulatedTime: this.simulatedTimePeriod,\n            totalProcessingTime: this.totalProcessingTime\n        };\n    }\n\n    /**\n     * Starts simulation.\n     */\n    private start(): void {\n        if (!this.subscription || this.subscription.closed) {\n            // Sets interval.\n            this.interval = interval(this.simulatedTimeInterval);\n            this.subscription = this.interval.pipe(\n                takeWhile(() => !this.endSimulation)\n            ).subscribe(() => {\n                this.execute();\n            });\n        }\n    }\n\n    private pause(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    private stop(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n        }\n        this.simulation.resetFlows();\n        this.reset();\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n        });\n        this.store.dispatch({\n            type: SimulationActionTypes.SimulationEnded,\n            payload: false\n        });\n    }\n\n    /**\n     * Performs one step.\n     */\n    private step(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n        }\n        this.execute();\n    }\n\n    private slow(): void {\n        if (this.subscription && !this.subscription.closed) {\n            this.subscription.unsubscribe();\n            this.simulatedTimeInterval += uiConfig.timeIntervalIncrement;\n            this.start();\n        } else {\n            this.simulatedTimeInterval += uiConfig.timeIntervalIncrement;\n        }\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n        });\n    }\n\n    private quick(): void {\n        if (this.simulatedTimeInterval - uiConfig.timeIntervalDecrement > this.processingTime) {\n            if (this.subscription && !this.subscription.closed) {\n                this.subscription.unsubscribe();\n                this.simulatedTimeInterval -= uiConfig.timeIntervalDecrement;\n                this.start();\n            } else {\n                this.simulatedTimeInterval -= uiConfig.timeIntervalDecrement;\n            }\n            // Updates simulation state.\n            this.store.dispatch({\n                type: SimulationActionTypes.PeriodsChanged,\n                payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n            });\n        }\n    }\n\n    private execute(): void {\n        const startTime = Date.now();\n        this.simulation.propagateFlows();\n        const endTime = Date.now();\n        // Updates processing time.\n        this.processingTime = endTime - startTime;\n        this.totalProcessingTime += this.processingTime;\n        this.updateSimulatedTimePeriod();\n        // Updates simulation state.\n        this.store.dispatch({\n            type: SimulationActionTypes.PeriodsChanged,\n            payload: { simulatedTimeInterval: this.simulatedTimeInterval, simulatedTimePeriod: this.simulatedTimePeriod }\n        });\n    }\n\n    private updateSimulatedTimePeriod(): void {\n        this.simulatedTimePeriod += this.simulatedTimeInterval;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Counts.html":{"url":"interfaces/Counts.html","title":"interface - Counts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Counts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/simulation-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        arrivedVehicles\n                                \n                                \n                                        startedVehicles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arrivedVehicles\n                                    \n                                \n                                \n                                    \n                                        arrivedVehicles:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startedVehicles\n                                    \n                                \n                                \n                                    \n                                        startedVehicles:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NumericalSimulation {\n\n    edge: string;\n    wayName: string;\n    trafficVolume: number;\n    trafficCount: number;\n    delay: number | string;\n    stops: number;\n\n}\n\nexport interface Counts {\n\n    startedVehicles: number;\n    arrivedVehicles: number;\n\n}\n\nexport interface Simulation {\n\n    /**\n     * Simulation data.\n     */\n    data: NumericalSimulation[];\n    /**\n     * Simulation counts.\n     */\n    counts: Counts;\n    /**\n     * Simulation avg. speed.\n     */\n    avgSpeed: number;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DemandModule.html":{"url":"modules/DemandModule.html","title":"module - DemandModule","body":"\n                   \n\n\n\n\n  Modules\n  DemandModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\n\nDemandService\n\nDemandService\n\n\n\nDemandModule\n\nDemandModule\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/demand/demand.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     DemandService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { DemandService } from './demand.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [DemandService]\n})\nexport class DemandModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DemandService.html":{"url":"injectables/DemandService.html","title":"injectable - DemandService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DemandService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/demand/demand.service.ts\n        \n\n            \n                Description\n            \n            \n                Estimates the O/D matrix of the traffic demand.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                odMatrix\n                            \n                            \n                                    Private\n                                startingTimes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                argmin\n                            \n                            \n                                    Public\n                                calcOdMatrix\n                            \n                            \n                                    Public\n                                changeDemand\n                            \n                            \n                                    Public\n                                changeStartingTimes\n                            \n                            \n                                    Private\n                                estimate\n                            \n                            \n                                    Public\n                                getOdMatrix\n                            \n                            \n                                    Public\n                                getStartingTimes\n                            \n                            \n                                    Public\n                                gls\n                            \n                            \n                                    Private\n                                isOnPath\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                sum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/demand/demand.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            argmin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        argmin(linkFlows: LinkFlow[], odMatrixAssignment: number[][])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:85\n                            \n                        \n\n\n                \n                    \n                            Argument of the minimum function.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcOdMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcOdMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Calculates O/D matrix.\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeDemand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeDemand(demand: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        demand\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeStartingTimes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeStartingTimes(startingTimes: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startingTimes\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            estimate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        estimate(linkFlows: LinkFlow[], odMatrixAssignment: number[][], x: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:104\n                            \n                        \n\n\n                \n                    \n                            Estimates the sum for the unknown demand.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        x\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The unknown demand\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getOdMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getOdMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getStartingTimes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStartingTimes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        gls(linkFlows: LinkFlow[], assignmentMatrix: [][][])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Generalized Least Squares (GLS).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        linkFlows\n                                                        \n                                                                    LinkFlow[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The link flows\n\n                                                        \n                                                \n                                                \n                                                        assignmentMatrix\n                                                        \n                                                                    [][][]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix [pairs,paths,edges]\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    The array of the demand\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isOnPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isOnPath(odMatrixAssignment: number[][], i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            Checks that the edge belongs to one of the paths of the O/D pair.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the edge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sum(odMatrixAssignment: number[][], i: number, x: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:121\n                            \n                        \n\n\n                \n                    \n                            Sums the unknown demand probability for each path.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        odMatrixAssignment\n                                                        \n                                                                    number[][]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Assignment matrix of the O/D pair\n\n                                                        \n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the edge\n\n                                                        \n                                                \n                                                \n                                                        x\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The unknown demand\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            odMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        odMatrix:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:17\n                            \n                        \n\n                \n                    \n                        The array of the demand.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            startingTimes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startingTimes:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:22\n                            \n                        \n\n                \n                    \n                        Starting time in seconds for each O/D pair.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { NetworkService } from '../network/network.service';\nimport { LinkFlow } from '../network/graph';\nimport { round } from '../utils';\nimport { uiConfig } from '../ui/ui-config';\n\n/**\n * Estimates the O/D matrix of the traffic demand.\n */\n@Injectable() export class DemandService {\n\n    /**\n     * The array of the demand.\n     */\n    private odMatrix: number[] = [];\n\n    /**\n     * Starting time in seconds for each O/D pair.\n     */\n    private startingTimes: number[] = [];\n\n    constructor(private network: NetworkService) { }\n\n    public reset(): void {\n        this.odMatrix = [];\n    }\n\n    /**\n     * Calculates O/D matrix.\n     */\n    public calcOdMatrix(): Observable {\n        // Gets link flows from network.\n        const linkFlows = this.network.getLinkFlows();\n        // Gets assignment matrix from network.\n        const assignmentMatrix = this.network.getAssignmentMatrix();\n        // Calculates demand.\n        this.odMatrix = this.gls(linkFlows, assignmentMatrix);\n        // Initializes starting times.\n        this.startingTimes = Array(this.odMatrix.length).fill(0);\n        return of(null);\n    }\n\n    public getOdMatrix(): number[] {\n        return this.odMatrix;\n    }\n\n    public changeDemand(demand: number[]): void {\n        if (demand.length > 0) {\n            this.odMatrix = demand;\n        }\n    }\n\n    public getStartingTimes(): number[] {\n        return this.startingTimes;\n    }\n\n    public changeStartingTimes(startingTimes: number[]): void {\n        if (startingTimes.length > 0) {\n            this.startingTimes = startingTimes;\n        }\n    }\n\n    /**\n     * Generalized Least Squares (GLS).\n     * @param linkFlows The link flows\n     * @param assignmentMatrix Assignment matrix [pairs,paths,edges]\n     * @returns The array of the demand\n     */\n    public gls(linkFlows: LinkFlow[], assignmentMatrix: number[][][]): number[] {\n        const demand: number[] = [];\n        // Calculates argument of the minimum for each O/D pair.\n        for (let z = 0; z  0 ? this.argmin(linkFlows, assignmentMatrix[z]) : null;\n        }\n        return demand;\n    }\n\n    /**\n     * Argument of the minimum function.\n     * @param linkFlows The link flows\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     */\n    private argmin(linkFlows: LinkFlow[], odMatrixAssignment: number[][]): number {\n        const estimations: number[] = [];\n        // The unknown demand.\n        let x = 0;\n        estimations[x] = this.estimate(linkFlows, odMatrixAssignment, x);\n        if (estimations[x] == 0) { return 0; }\n        do {\n            x++;\n            estimations[x] = this.estimate(linkFlows, odMatrixAssignment, x);\n        } while (estimations[x]  0 && this.isOnPath(odMatrixAssignment, i)) {\n                const base = linkFlows[i].value - this.sum(odMatrixAssignment, i, x);\n                sum += Math.pow(base, 2) / linkFlows[i].variance;\n            }\n        }\n        return round(sum, 2);\n    }\n\n    /**\n     * Sums the unknown demand probability for each path.\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     * @param i The index of the edge\n     * @param x The unknown demand\n     */\n    private sum(odMatrixAssignment: number[][], i: number, x: number): number {\n        let sum = 0;\n        for (let n = 0; n  0) {\n                sum += odMatrixAssignment[n][i] * x;\n            }\n        }\n        return round(sum, 2);\n    }\n\n    /**\n     * Checks that the edge belongs to one of the paths of the O/D pair.\n     * @param odMatrixAssignment Assignment matrix of the O/D pair\n     * @param i The index of the edge\n     */\n    private isOnPath(odMatrixAssignment: number[][], i: number): boolean {\n        for (let n = 0; n  0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Edge.html":{"url":"classes/Edge.html","title":"class - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Link between two nodes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                density\n                            \n                            \n                                    Public\n                                destination\n                            \n                            \n                                    Public\n                                distance\n                            \n                            \n                                    Public\n                                drawingOptions\n                            \n                            \n                                    Public\n                                duration\n                            \n                            \n                                    Public\n                                durationInTraffic\n                            \n                            \n                                    Public\n                                edgeId\n                            \n                            \n                                    Public\n                                flow\n                            \n                            \n                                    Public\n                                freeFlowVelocity\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                linkFlow\n                            \n                            \n                                    Public\n                                maxFlow\n                            \n                            \n                                    Public\n                                origin\n                            \n                            \n                                    Public\n                                tags\n                            \n                            \n                                    Public\n                                velocity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calcLinkFlow\n                            \n                            \n                                    Public\n                                calcMaxFlow\n                            \n                            \n                                    Protected\n                                draw\n                            \n                            \n                                    Protected\n                                getCapacity\n                            \n                            \n                                    Public\n                                getKjam\n                            \n                            \n                                    Public\n                                getVariance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(edgeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:152\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edgeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            density\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        density:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:132\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destination\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        destination:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            distance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        distance:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:110\n                            \n                        \n\n                \n                    \n                        Indicates the distance in meters.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            drawingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        drawingOptions:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:146\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            duration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        duration:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:115\n                            \n                        \n\n                \n                    \n                        Indicates the duration in seconds.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            durationInTraffic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        durationInTraffic:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:120\n                            \n                        \n\n                \n                    \n                        Indicates the total duration of the edge, taking into account current traffic conditions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            edgeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        edgeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:134\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            freeFlowVelocity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        freeFlowVelocity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:125\n                            \n                        \n\n                \n                    \n                        Free flow speed (m/s).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            linkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        linkFlow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:139\n                            \n                        \n\n                \n                    \n                        Number of vehicles calculated from traffic data.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maxFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxFlow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:144\n                            \n                        \n\n                \n                    \n                        Maximum flow of the link.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            origin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        origin:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            velocity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        velocity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:130\n                            \n                        \n\n                \n                    \n                        Instant speed (m/s).\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcLinkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcLinkFlow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:161\n                            \n                        \n\n\n                \n                    \n                            Calculates the value of the link flow.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcMaxFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcMaxFlow(factor: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:192\n                            \n                        \n\n\n                \n                    \n                            Calculates the max flow of the edge.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        factor\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Weather Adjustment Factor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            draw\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        draw(color: string, zIndex: number, visible: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:212\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        color\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        zIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        visible\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCapacity(timeInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:208\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getKjam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getKjam()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:204\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getVariance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getVariance()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:200\n                            \n                        \n\n\n                \n                    \n                            Gets the variance of measurement error of link flow.\n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number, visible: boolean = true): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', visible);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public findOppositeEdge(edge: Edge): Edge {\n        return this.edges.find((value: Edge) =>\n            value.origin.nodeId == edge.destination.nodeId && value.destination.nodeId == edge.origin.nodeId\n        );\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnumValues.html":{"url":"classes/EnumValues.html","title":"class - EnumValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnumValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getNames\n                            \n                            \n                                    Static\n                                getValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getNames\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNames(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/utils.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValues(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/utils.ts:9\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export type EnumValueType = string | number;\n\nexport class EnumValues {\n\n    public static getNames(e: any): string[] {\n        return Object.keys(e).filter((key: string) => isNaN(+key));\n    }\n\n    public static getValues(e: any): T[] {\n        return this.getNames(e).map((name: string) => e[name]) as T[];\n    }\n\n}\n\nexport function toSeconds(value: number): number {\n    return value / 1000;\n}\n\n/**\n * Format time to M:SS\n * @param s Seconds\n * @returns M:SS\n */\nexport function formatTimeFromSeconds(s: number): string {\n    return Math.floor(s / 60) + ':' + ('0' + Math.floor(s % 60)).slice(-2);\n}\n\n/**\n * Format time to M:SS.mmm\n * @param ms Milliseconds\n * @returns M:SS.mmm\n */\nexport function formatTimeFromMilliseconds(ms: number): string {\n    return Math.floor(ms / 1000 / 60) + ':' +\n        ('0' + Math.floor((ms / 1000) % 60)).slice(-2) + '.' +\n        ('00' + (ms - Math.floor(ms / 1000) * 1000)).slice(-3);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EstimateOfDemandComponent.html":{"url":"components/EstimateOfDemandComponent.html","title":"component - EstimateOfDemandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EstimateOfDemandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-estimate-of-demand\n            \n\n            \n                styleUrls\n                ./estimate-of-demand.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./estimate-of-demand.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pathTypes\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDestination\n                            \n                            \n                                addOrigin\n                            \n                            \n                                deleteOdPair\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                updateOdPairs\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    odPairs\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addDestination\n                            \n                            \n                        \n                    \n                \n                \n                    \naddDestination(control: FormArray, origin: string, destination: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:150\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    FormArray\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        origin\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        destination\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addOrigin\n                            \n                            \n                        \n                    \n                \n                \n                    \naddOrigin(control: FormArray, origin: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:142\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    FormArray\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        origin\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteOdPair\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteOdPair(i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateOdPairs\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateOdPairs(node: Node)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pathTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pathTypes:     PathType[]\n\n                    \n                \n                    \n                        \n                            Type :     PathType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odPairs\n                    \n                \n\n                \n                    \n                        getodPairs()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport * as fromUi from '../../models/reducers';\nimport { Map } from '../../models/ui-state';\nimport { PathType, OdPair, Node } from '../../../network/graph';\nimport { EnumValues } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-estimate-of-demand',\n    templateUrl: './estimate-of-demand.component.html',\n    styleUrls: ['./estimate-of-demand.component.scss']\n})\nexport class EstimateOfDemandComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    pathTypes: PathType[];\n\n    get odPairs(): FormArray {\n        return this.formGroup.get('odPairs') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n\n        this.pathTypes = EnumValues.getValues(PathType);\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates network service data on value changes.\n        this.subscriptions.push(this.formGroup.get('odPairs').valueChanges.subscribe(\n            (odPairs: OdPair[]) => {\n                this.network.setOdPairs(odPairs);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 0:\n                    // Resets control.\n                    const control = this.formGroup.get('odPairs') as FormArray;\n                    if (control.length > 0) {\n                        for (let i = control.length - 1; i >= 0; i--) {\n                            control.removeAt(i);\n                        }\n                    }\n                    break;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromUi.map)).subscribe((map: Map) => {\n            if (map && map.data.selectedNode) {\n                this.updateOdPairs(map.data.selectedNode);\n\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    deleteOdPair(i: number): void {\n        // Updates control.\n        const control = this.formGroup.get('odPairs') as FormArray;\n        control.removeAt(i);\n        // Updates step state.\n        this.wizard.updateStep(this.formGroup.value, this.index);\n    }\n\n    updateOdPairs(node: Node): void {\n        const control = this.formGroup.get('odPairs') as FormArray;\n        const odPairs = control.value;\n\n        let error = null;\n\n        if (odPairs.length > 0) {\n            const odPair = odPairs[odPairs.length - 1];\n            // Checks limit.\n            if (odPairs.length == uiConfig.maxOdPairs && odPairs[uiConfig.maxOdPairs - 1].destination) {\n                error = `The maximum number of O/D pairs is ${uiConfig.maxOdPairs}`;\n                // Checks if valid node.\n            } else if (odPair.destination == null && node.incomingEdges.length == 0) {\n                error = `The node cannot be a destination`;\n            } else if (odPair.destination && node.outgoingEdges.length == 0) {\n                error = `The node cannot be an origin`;\n                // Checks if last O/D pair is completed.\n            } else if (odPair.destination) {\n                // Adds origin.\n                this.addOrigin(control, node.label);\n                // Checks if same node.\n            } else if (odPair.origin == node.label) {\n                error = `The origin and destination nodes cannot be the same`;\n            } else {\n                // Checks if the pair is valid.\n                if (odPairs.filter(pair => pair.origin == odPair.origin && pair.destination == node.label).length > 0) {\n                    error = `O/D pair already selected`;\n                } else {\n                    // Adds destination.\n                    this.addDestination(control, odPair.origin, node.label);\n                }\n            }\n        } else {\n            if (node.outgoingEdges.length == 0) {\n                error = `The node cannot be an origin`;\n            } else {\n                // Adds origin.\n                this.addOrigin(control, node.label);\n            }\n        }\n\n        if (error) {\n            this.wizard.putInError(error);\n        } else {\n            // Updates step state.\n            this.wizard.updateStep({ odPairs: control.value }, 2);\n        }\n    }\n\n    addOrigin(control: FormArray, origin: string): void {\n        control.push(this.formBuilder.group({\n            origin: origin,\n            destination: null,\n            pathType: null\n        }));\n    }\n\n    addDestination(control: FormArray, origin: string, destination: string): void {\n        control.get([control.length - 1]).patchValue({\n            origin: origin,\n            destination: destination,\n            pathType: PathType.distance\n        });\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                O\n                D\n                Path\n                \n            \n            \n                \n                    {{ pair.value.origin }}\n                \n                \n                    {{ pair.value.destination }}\n                \n                \n                    \n                        \n                            {{ path }}\n                        \n                    \n                \n                \n                    \n                        delete\n                    \n                \n            \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n                \n                    ./estimate-of-demand.component.scss\n                \n                .header {\n    background-color: #eceff1;\n    padding: 4px;\n    text-align: center;\n    font-weight: 500;\n}\n\n.cell {\n    background-color: #eceff1;\n    height: 48px;\n    padding: 4px;\n    text-align: center;\n\n    .mat-icon-button {\n        .mat-icon {\n            font-size: 20px;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        O                D                Path                                                                            {{ pair.value.origin }}                                                    {{ pair.value.destination }}                                                                                                        {{ path }}                                                                                                                        delete                                                                        Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EstimateOfDemandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : new Date().getFullYear()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n    currentYear: number = new Date().getFullYear();\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                \n                    \n                        Privacy\n                    \n                \n                \n                    \n                        Terms of service\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n            Copyright&nbsp;©&nbsp;{{ currentYear }} Roberto&nbsp;Simonetti - MIT license\n        \n    \n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                @import '../../../styles/variables';\n\nfooter {\n    margin-top: 8px;\n    padding: 16px;\n    font-size: 12px;\n    text-align: center;\n        \n    .footer-logo {\n        img {\n            height: 48px;\n            width: 48px;\n        } \n    }\n        \n    .footer-links {\n        margin: 0 16px;\n\n        ul {\n            list-style: none;\n            padding: 0;\n\n            li {\n                margin: 2px;\n            }\n            \n            a {\n                text-decoration: none;\n                color: inherit;\n            \n                &:hover {\n                    text-decoration: underline;\n                }\n            }\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                Privacy                                                                                                Terms of service                                                                                        Copyright © {{ currentYear }} Roberto Simonetti - MIT license            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoOn.html":{"url":"classes/GoOn.html","title":"class - GoOn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoOn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.GoOn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GoogleMapComponent.html":{"url":"components/GoogleMapComponent.html","title":"component - GoogleMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GoogleMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/google-map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                google-map\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMap\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/google-map.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                    \n                        Center map. Required.\n\n                            \n                            Type :    google.maps.LatLngLiteral\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDefaultUI\n                    \n                    \n                        Enables/disables all default UI.\n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDoubleClickZoom\n                    \n                    \n                        Enables/disables zoom and center on double click. Enabled by default.\n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gestureHandling\n                    \n                    \n                        This setting controls how gestures on the map are handled.\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapTypeId\n                    \n                    \n                        The initial map mapTypeId. Defaults to ROADMAP.\n\n                            \n                            Type :    google.maps.MapTypeId\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                    \n                        The maximum zoom level which will be displayed on the map.\n\n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                    \n                        The minimum zoom level which will be displayed on the map.\n\n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                    \n                        Styles to apply to each of the default map types.\n\n                            \n                            Type :    google.maps.MapTypeStyle[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                    \n                        The initial map zoom level. Required.\n\n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createMap(el: HTMLElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            On changes, updates center map & zoom.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            On init, creates map.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     MapService\n\n                    \n                \n                    \n                        \n                            Type :     MapService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChange, ElementRef } from '@angular/core';\n\nimport { MapService } from './/map.service';\n\n@Component({\n    selector: 'google-map',\n    template: `\n        \n        \n        `\n})\nexport class GoogleMapComponent implements OnInit, OnChanges {\n\n    /**\n     * Center map. Required.\n     */\n    @Input() center: google.maps.LatLngLiteral;\n    /**\n     * The initial map zoom level. Required.\n     */\n    @Input() zoom: number;\n    /**\n     * Enables/disables all default UI.\n     */\n    @Input() disableDefaultUI: boolean;\n    /**\n     * Enables/disables zoom and center on double click. Enabled by default.\n     */\n    @Input() disableDoubleClickZoom: boolean;\n    /**\n     * The initial map mapTypeId. Defaults to ROADMAP.\n     */\n    @Input() mapTypeId: google.maps.MapTypeId;\n    /**\n     * The maximum zoom level which will be displayed on the map.\n     */\n    @Input() maxZoom: number;\n    /**\n     * The minimum zoom level which will be displayed on the map.\n     */\n    @Input() minZoom: number;\n    /**\n     * This setting controls how gestures on the map are handled.\n     */\n    @Input() gestureHandling: string;\n    /**\n     * Styles to apply to each of the default map types.\n     */\n    @Input() styles: google.maps.MapTypeStyle[];\n\n    constructor(public map: MapService, private elementRef: ElementRef) { }\n\n    /**\n     * On init, creates map.\n     */\n    ngOnInit(): void {\n        // Gets the map element.\n        const el: HTMLElement = this.elementRef.nativeElement.querySelector('#map');\n\n        this.createMap(el);\n    }\n\n    /**\n     * On changes, updates center map & zoom.\n     */\n    ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n        if (changes['center']) { this.map.setCenter(this.center); }\n        if (changes['zoom']) { this.map.setZoom(this.zoom); }\n    }\n\n    private createMap(el: HTMLElement): void {\n        this.map.initMap(el, {\n            center: this.center,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            mapTypeId: this.mapTypeId,\n            maxZoom: this.maxZoom as number,\n            minZoom: this.minZoom as number,\n            gestureHandling: this.gestureHandling as string,\n            styles: this.styles,\n            zoom: this.zoom as number\n        });\n    }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GoogleMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Heap.html":{"url":"classes/Heap.html","title":"class - Heap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Heap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/k-shortest-path.ts\n        \n\n            \n                Description\n            \n            \n                Heap data structure containing paths.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                paths\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPaths\n                            \n                            \n                                    Public\n                                getShortestPath\n                            \n                            \n                                    Public\n                                pop\n                            \n                            \n                                    Public\n                                push\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paths:     Path[]\n\n                    \n                \n                    \n                        \n                            Type :     Path[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:23\n                            \n                        \n\n                \n                    \n                        The queue of paths.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPaths()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Path[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getShortestPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getShortestPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:45\n                            \n                        \n\n\n                \n                    \n                            Returns the shortest path in the heap by cost.\n\n\n                            \n                                Returns :     Path\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pop(pathId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:37\n                            \n                        \n\n\n                \n                    \n                            Removes a path from the heap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The id of the path\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            push\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        push(path: Path)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/k-shortest-path.ts:29\n                            \n                        \n\n\n                \n                    \n                            Inserts a path into the heap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    Path\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The path to insert\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Edge, Node } from \"./graph\";\n\n/**\n * Path to generic node.\n */\nexport interface Path {\n\n    pathId: number;\n    node: Node;\n    edges: Edge[];\n    cost: number;\n\n}\n\n/**\n * Heap data structure containing paths.\n */\nexport class Heap {\n\n    /**\n     * The queue of paths.\n     */\n    private paths: Path[] = [];\n\n    /**\n     * Inserts a path into the heap.\n     * @param path The path to insert\n     */\n    public push(path: Path): void {\n        this.paths.push({ pathId: path.pathId, node: path.node, edges: path.edges, cost: path.cost });\n    }\n\n    /**\n     * Removes a path from the heap.\n     * @param pathId The id of the path\n     */\n    public pop(pathId: number): void {\n        const index = this.paths.findIndex((path: Path) => path.pathId == pathId);\n        this.paths.splice(index, 1);\n    }\n\n    /**\n     * Returns the shortest path in the heap by cost.\n     */\n    public getShortestPath(): Path {\n        return this.paths.reduce((prev: Path, curr: Path) => prev.cost \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        show:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ElementRef } from '@angular/core';\n\nimport * as anime from 'animejs';\n\nimport { HOME_TRANSITION } from './home.transition';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss'],\n    animations: [HOME_TRANSITION]\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n\n    show: boolean = false;\n\n    constructor(private elementRef: ElementRef) { }\n\n    ngOnInit(): void {\n        //\n    }\n\n    ngAfterViewInit(): void {\n        const element: HTMLElement = this.elementRef.nativeElement.querySelector('.headline .letters');\n        const text: string = element.innerText;\n        const letters: string[] = text.split('');\n\n        let wrappedText = '';\n        for (const letter of letters) {\n            wrappedText += `${letter}`;\n        }\n\n        element.innerHTML = wrappedText;\n\n        // Anime.\n        const basicTimeline = anime.timeline();\n        basicTimeline\n            .add({\n                targets: '.headline .letter',\n                scale: [0.3, 1],\n                opacity: [0, 1],\n                translateZ: 0,\n                easing: 'linear',\n                delay: (el, i) => {\n                    return 70 * (i + 1);\n                }\n            }).add({\n                targets: '.headline .line',\n                scaleX: [0, 1],\n                opacity: [0.5, 1],\n                easing: 'linear',\n                offset: '-=840',\n                delay: (el, i, l) => {\n                    return 70 * (l - i);\n                },\n                complete: (anim) => {\n                    this.show = true;\n                }\n            });\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                STRADA\n                \n            \n        \n        \n            \n                Simulation of TRAffic DAta\n                An urban traffic web simulator that uses data in real time\n                GET STARTED\n                \n                \n                More info\n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                @import '../../styles/variables';\n\nheader {\n    text-align: center;\n    color: $primary-color-text;\n}\n\n.headline {\n    font-weight: 900;\n    font-size: 5em;\n\n    .headline-wrapper {\n        position: relative;\n        display: inline-block;\n        padding-top: 0.1em;\n        padding-right: 0.05em;\n        padding-bottom: 0.15em;\n    }\n\n    .letter {\n        display: inline-block;\n    }\n\n    .line {\n        opacity: 0;\n        position: absolute;\n        left: 0;\n        height: 5px;\n        width: 100%;\n        background-color: $primary-color-text;\n        transform-origin: 0 0;\n    }\n    .line-top { top: 0; }\n    .line-bottom { bottom: 0; }\n}\n\n.subheading {\n    height: 30vh;\n\n    .info {\n        font-size: 14px;\n        text-decoration: underline;\n        color: inherit;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        STRADA                                                                        Simulation of TRAffic DAta                An urban traffic web simulator that uses data in real time                GET STARTED                                                More info                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/info-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                info-dialog\n            \n\n\n\n            \n                template\n                Info\n\n    {{ data }}\n\n\n    No\n    Yes\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/info-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n    selector: 'info-dialog',\n    template: `\n        Info\n        \n            {{ data }}\n        \n        \n            No\n            Yes\n        \n    `,\n    styles: []\n})\nexport class InfoDialogComponent {\n\n    constructor(\n        public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) { }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Info    {{ data }}    No    Yes'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LinkFlow.html":{"url":"interfaces/LinkFlow.html","title":"interface - LinkFlow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LinkFlow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        variance\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    linkFlow attribute.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variance\n                                    \n                                \n                                \n                                    \n                                        variance:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Variance is the inverse of density.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number, visible: boolean = true): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', visible);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public findOppositeEdge(edge: Edge): Edge {\n        return this.edges.find((value: Edge) =>\n            value.origin.nodeId == edge.destination.nodeId && value.destination.nodeId == edge.origin.nodeId\n        );\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationService\n\nLocationService\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/location/location.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     LocationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { LocationService } from './location.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [LocationService]\n})\nexport class LocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/location/location.service.ts\n        \n\n            \n                Description\n            \n            \n                Responsible for identifying the geographic coordinates of the simulation area,\nthrough geocoding or geolocation.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geocoder\n                            \n                            \n                                    Private\n                                latLng\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                codeAddress\n                            \n                            \n                                    Public\n                                getCurrentPosition\n                            \n                            \n                                    Public\n                                getLatLng\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                setLatLng\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/location/location.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            codeAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        codeAddress(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Geocoding service.\nWraps the Google Maps API geocoding service into an observable.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Tries HTML5 geolocation.\nWraps the Geolocation API into an observable.\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLatLng()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     google.maps.LatLngLiteral\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLatLng(latLng: s/map.html\">google.maps.LatLngLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLngLiteral\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geocoder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocoder:     google.maps.Geocoder\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            latLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        latLng:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:15\n                            \n                        \n\n                \n                    \n                        Center of the area (latitude, longitude).\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\n\n/**\n * Responsible for identifying the geographic coordinates of the simulation area,\n * through geocoding or geolocation.\n */\n@Injectable() export class LocationService {\n\n    /**\n     * Center of the area (latitude, longitude).\n     */\n    private latLng: google.maps.LatLngLiteral;\n\n    private geocoder: google.maps.Geocoder;\n\n    constructor() {\n        if (!environment.testing) {\n            this.geocoder = new google.maps.Geocoder();\n        }\n    }\n\n    public reset(): void {\n        this.latLng = null;\n    }\n\n    /**\n     * Geocoding service.\n     * Wraps the Google Maps API geocoding service into an observable.\n     */\n    public codeAddress(address: string): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes geocode method of Google Maps API geocoding.\n            this.geocoder.geocode({ address: address }, (\n                (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        observer.next(results);\n                        observer.complete();\n                    } else {\n                        observer.error(status);\n                    }\n                })\n            );\n        });\n    }\n\n    /**\n     * Tries HTML5 geolocation.\n     * Wraps the Geolocation API into an observable.\n     */\n    public getCurrentPosition(): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes getCurrentPosition method of Geolocation API.\n            navigator.geolocation.getCurrentPosition(\n                (position: Position) => {\n                    observer.next(position);\n                    observer.complete();\n                },\n                (error: PositionError) => {\n                    observer.error(error);\n                }\n            );\n        });\n    }\n\n    public getLatLng(): google.maps.LatLngLiteral {\n        return this.latLng;\n    }\n\n    public setLatLng(latLng: google.maps.LatLngLiteral): void {\n        this.latLng = latLng;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Map.html":{"url":"interfaces/Map.html","title":"interface - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/ui-state.ts\n        \n\n            \n                Description\n            \n            \n                Map model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Map data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Step {\n\n    /**\n     * Form model data.\n     */\n    data: any;\n\n}\n\n/**\n * Map model.\n */\nexport interface Map {\n\n    /**\n     * Map data.\n     */\n    data: any;\n\n}\n\n/**\n * Initial steps.\n */\nexport const STEPS: Step[] = [];\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MapChanged.html":{"url":"classes/MapChanged.html","title":"class - MapChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MapChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/map.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/map.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/map.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : MapActionTypes.MapChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/map.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Map } from '../ui-state';\n\n/**\n * ngrx: map Actions.\n */\nexport enum MapActionTypes {\n\n    MapChanged = '[Map] Map Changed',\n    Reset = '[Map] Reset'\n\n}\n\nexport class MapChanged implements Action {\n\n    public readonly type: string = MapActionTypes.MapChanged;\n\n    constructor(public payload: { map: Map }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = MapActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type MapActions = MapChanged | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/map.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-map\n            \n\n            \n                styleUrls\n                ./map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                currentStep\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, map: MapService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/map.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            center\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        center:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDefaultUI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDefaultUI:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDoubleClickZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDoubleClickZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gestureHandling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gestureHandling:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapTypeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapTypeId:     google.maps.MapTypeId\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeId\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            styles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        styles:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { MapService } from './map.service';\nimport { NetworkService } from '../../network/network.service';\nimport * as fromUi from '../models/reducers';\nimport { Step } from '../models/ui-state';\nimport { mapStyle } from './map.style';\nimport { OdPair } from '../../network/graph';\nimport { uiConfig } from '../ui-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-map',\n    templateUrl: './map.component.html',\n    styleUrls: ['./map.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MapComponent extends BaseComponent implements OnInit {\n\n    // Center map. Required.\n    center: google.maps.LatLngLiteral;\n\n    // The initial map zoom level. Required.\n    zoom: number;\n\n    disableDefaultUI: boolean;\n    disableDoubleClickZoom: boolean;\n    mapTypeId: google.maps.MapTypeId;\n    maxZoom: number;\n    minZoom: number;\n    gestureHandling: string;\n    styles: google.maps.MapTypeStyle[];\n\n    currentStep: number;\n\n    constructor(\n        private store: Store,\n        private map: MapService,\n        private network: NetworkService\n    ) {\n        super();\n        // Map options.\n        this.disableDefaultUI = true;\n        this.disableDoubleClickZoom = false;\n        this.mapTypeId = google.maps.MapTypeId.ROADMAP;\n        this.maxZoom = 18;\n        this.minZoom = 4;\n        this.gestureHandling = 'cooperative';\n        this.styles = mapStyle;\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            this.currentStep = currentStep;\n            switch (currentStep) {\n                case 0:\n                    this.center = uiConfig.map.center;\n                    this.zoom = uiConfig.map.zoom;\n                    break;\n                case 1:\n                    // Builds & shows initial rectangle.\n                    const bounds: google.maps.LatLngBoundsLiteral = this.map.buildBounds(this.center);\n                    this.map.showRect(bounds);\n                    break;\n                case 2:\n                    // Hides the rectangle.\n                    this.map.hideRect();\n                    // Shows graph.\n                    this.map.showGraph();\n                    // Sets centroid.\n                    this.map.setCentroid();\n                    // Sets map.\n                    this.map.setCenter(this.map.getCentroid());\n                    this.map.setZoom(17);\n                    break;\n                case 3:\n                    // Clears nodes actions.\n                    this.map.clearNodesActions();\n                    break;\n                case 4:\n                    // Hides paths.\n                    this.map.hidePaths();\n                    break;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromUi.steps)).subscribe((steps: Step[]) => {\n            switch (this.currentStep) {\n                case 0:\n                    if (steps[0]) {\n                        // Updates center map.\n                        this.center = steps[0].data.center;\n                        this.zoom = 16;\n                    } else {\n                        this.center = uiConfig.map.center;\n                        this.zoom = uiConfig.map.zoom;\n                    }\n                    break;\n                case 2:\n                    if (steps[2]) {\n                        // Shows/hides O/D nodes.\n                        const odPairs: OdPair[] = steps[2].data.odPairs;\n                        this.map.showNodes(odPairs);\n                    }\n                    break;\n                case 3:\n                    if (steps[3] && steps[3].data.odPairs) {\n                        // Shows/hides O/D paths.\n                        const odPairs = steps[3].data.odPairs;\n                        this.map.showPaths(odPairs);\n                    }\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./map.component.scss\n                \n                #map {\n    height: 70vh;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapState.html":{"url":"interfaces/MapState.html","title":"interface - MapState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MapState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers/map.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Map state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        map\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import deepClone from 'mout/lang/deepClone';\n\nimport { Map } from \"../ui-state\";\nimport { MapActions, MapActionTypes } from '../actions/map.actions';\n\n/**\n * Map state management.\n */\nexport interface MapState {\n\n    map: Map;\n\n}\n\nexport const initialMapState: MapState = {\n    map: null\n};\n\n/**\n * ngrx: map Reducer.\n */\nexport function mapReducer(state: MapState = deepClone(initialMapState), action: MapActions): MapState {\n    switch (action.type) {\n        case MapActionTypes.MapChanged: {\n            state.map = action.payload.map;\n            return {\n                ...state,\n                map: deepClone(state.map)\n            };\n        }\n        case MapActionTypes.Reset: {\n            return deepClone(initialMapState);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getMap: (state: MapState) => Map = (state: MapState) => state.map;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconRegistry,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatTableModule\n} from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nconst materialModules: any[] = [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatTableModule\n];\n\n@NgModule({\n    imports: materialModules,\n    exports: materialModules\n})\nexport class MaterialModule {\n\n    constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n        matIconRegistry.addSvgIcon(\n            'more_vert', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_more_vert_24px.svg')\n        );\n        matIconRegistry.addSvgIcon(\n            'code', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_code_24px.svg')\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Member.html":{"url":"interfaces/Member.html","title":"interface - Member","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Member\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation's member.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ref\n                                \n                                \n                                        role\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                    \n                                \n                                \n                                    \n                                        ref:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number, visible: boolean = true): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', visible);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public findOppositeEdge(edge: Edge): Edge {\n        return this.edges.find((value: Edge) =>\n            value.origin.nodeId == edge.destination.nodeId && value.destination.nodeId == edge.origin.nodeId\n        );\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageArchivedComponent.html":{"url":"components/MessageArchivedComponent.html","title":"component - MessageArchivedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MessageArchivedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/message-archived.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snack-bar\n            \n\n\n\n            \n                template\n                {{ data }}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/message-archived.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_SNACK_BAR_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/message-archived.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\n@Component({\n    selector: 'snack-bar',\n    template: `\n        {{ data }}\n    `,\n    styles: []\n})\nexport class MessageArchivedComponent {\n\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data }}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageArchivedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NetworkModule.html":{"url":"modules/NetworkModule.html","title":"module - NetworkModule","body":"\n                   \n\n\n\n\n  Modules\n  NetworkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\n\nWeatherModule\n\nWeatherModule\n\n\n\nNetworkModule\n\nNetworkModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/network.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     NetworkService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    WeatherModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherModule } from './weather/weather.module';\n\nimport { NetworkService } from './network.service';\n\n@NgModule({\n    imports: [WeatherModule],\n    declarations: [],\n    providers: [NetworkService]\n})\nexport class NetworkModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Node.html":{"url":"classes/Node.html","title":"class - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Node represents a specific point on the earth's surface defined by its latitude and longitude.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                count\n                            \n                            \n                                    Public\n                                drawingOptions\n                            \n                            \n                                    Public\n                                incomingEdges\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                lat\n                            \n                            \n                                    Public\n                                lon\n                            \n                            \n                                    Public\n                                nodeId\n                            \n                            \n                                    Public\n                                outgoingEdges\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nodeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:84\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        count:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:84\n                            \n                        \n\n                \n                    \n                        Used by the k shortest path routing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            drawingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        drawingOptions:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            incomingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        incomingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lat:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lon:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            outgoingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outgoingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number, visible: boolean = true): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', visible);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public findOppositeEdge(edge: Edge): Edge {\n        return this.edges.find((value: Edge) =>\n            value.origin.nodeId == edge.destination.nodeId && value.destination.nodeId == edge.origin.nodeId\n        );\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NumericComponent.html":{"url":"components/NumericComponent.html","title":"component - NumericComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NumericComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/numeric/numeric.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-numeric\n            \n\n            \n                styleUrls\n                ./numeric.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./numeric.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/numeric/numeric.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     NumericalSimulation[]\n\n                    \n                \n                    \n                        \n                            Type :     NumericalSimulation[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedColumns:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['edge', 'wayName', 'trafficVolume', 'trafficCount', 'delay', 'stops']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/numeric/numeric.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromSimulation from '../../simulation/models/reducers';\nimport { Simulation, NumericalSimulation } from '../../simulation/models/simulation-state';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-numeric',\n    templateUrl: './numeric.component.html',\n    styleUrls: ['./numeric.component.scss']\n})\nexport class NumericComponent extends BaseComponent implements OnInit {\n\n    data: NumericalSimulation[] = [];\n\n    displayedColumns: string[] = ['edge', 'wayName', 'trafficVolume', 'trafficCount', 'delay', 'stops'];\n\n    constructor(\n        private store: Store\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.simulation)).subscribe((simulation: Simulation) => {\n            if (simulation && simulation.data) {\n                this.data = simulation.data;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n         Edge \n         {{ element.edge }} \n    \n    \n         Way name \n         {{ element.wayName }} \n    \n    \n         Traffic volume \n         {{ element.trafficVolume }} \n    \n    \n         Traffic count \n         {{ element.trafficCount }} \n    \n    \n         Delay (s) \n         {{ element.delay }} \n    \n    \n         Stops (s) \n         {{ element.stops }} \n    \n    \n    \n\n    \n\n    \n                \n                    ./numeric.component.scss\n                \n                table {\n    width: 100%;\n\n    tr.mat-row {\n        height: 36px;\n\n        td.mat-cell {\n            font-size: 12px;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Edge          {{ element.edge }}                  Way name          {{ element.wayName }}                  Traffic volume          {{ element.trafficVolume }}                  Traffic count          {{ element.trafficCount }}                  Delay (s)          {{ element.delay }}                  Stops (s)          {{ element.stops }}             '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NumericComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NumericalSimulation.html":{"url":"interfaces/NumericalSimulation.html","title":"interface - NumericalSimulation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NumericalSimulation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/simulation-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        delay\n                                \n                                \n                                        edge\n                                \n                                \n                                        stops\n                                \n                                \n                                        trafficCount\n                                \n                                \n                                        trafficVolume\n                                \n                                \n                                        wayName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delay\n                                    \n                                \n                                \n                                    \n                                        delay:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edge\n                                    \n                                \n                                \n                                    \n                                        edge:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stops\n                                    \n                                \n                                \n                                    \n                                        stops:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trafficCount\n                                    \n                                \n                                \n                                    \n                                        trafficCount:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trafficVolume\n                                    \n                                \n                                \n                                    \n                                        trafficVolume:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wayName\n                                    \n                                \n                                \n                                    \n                                        wayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NumericalSimulation {\n\n    edge: string;\n    wayName: string;\n    trafficVolume: number;\n    trafficCount: number;\n    delay: number | string;\n    stops: number;\n\n}\n\nexport interface Counts {\n\n    startedVehicles: number;\n    arrivedVehicles: number;\n\n}\n\nexport interface Simulation {\n\n    /**\n     * Simulation data.\n     */\n    data: NumericalSimulation[];\n    /**\n     * Simulation counts.\n     */\n    counts: Counts;\n    /**\n     * Simulation avg. speed.\n     */\n    avgSpeed: number;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OdPair.html":{"url":"interfaces/OdPair.html","title":"interface - OdPair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OdPair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                An O/D pair is described by the origin and destination nodes, and the type of path.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destination\n                                \n                                \n                                        origin\n                                \n                                \n                                        pathType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathType\n                                    \n                                \n                                \n                                    \n                                        pathType:     PathType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PathType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number, visible: boolean = true): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', visible);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public findOppositeEdge(edge: Edge): Edge {\n        return this.edges.find((value: Edge) =>\n            value.origin.nodeId == edge.destination.nodeId && value.destination.nodeId == edge.origin.nodeId\n        );\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Path.html":{"url":"interfaces/Path.html","title":"interface - Path","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Path\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/k-shortest-path.ts\n        \n\n            \n                Description\n            \n            \n                Path to generic node.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cost\n                                \n                                \n                                        edges\n                                \n                                \n                                        node\n                                \n                                \n                                        pathId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                    \n                                \n                                \n                                    \n                                        cost:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                    \n                                \n                                \n                                    \n                                        edges:     Edge[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Edge[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:     Node\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Node\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathId\n                                    \n                                \n                                \n                                    \n                                        pathId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Edge, Node } from \"./graph\";\n\n/**\n * Path to generic node.\n */\nexport interface Path {\n\n    pathId: number;\n    node: Node;\n    edges: Edge[];\n    cost: number;\n\n}\n\n/**\n * Heap data structure containing paths.\n */\nexport class Heap {\n\n    /**\n     * The queue of paths.\n     */\n    private paths: Path[] = [];\n\n    /**\n     * Inserts a path into the heap.\n     * @param path The path to insert\n     */\n    public push(path: Path): void {\n        this.paths.push({ pathId: path.pathId, node: path.node, edges: path.edges, cost: path.cost });\n    }\n\n    /**\n     * Removes a path from the heap.\n     * @param pathId The id of the path\n     */\n    public pop(pathId: number): void {\n        const index = this.paths.findIndex((path: Path) => path.pathId == pathId);\n        this.paths.splice(index, 1);\n    }\n\n    /**\n     * Returns the shortest path in the heap by cost.\n     */\n    public getShortestPath(): Path {\n        return this.paths.reduce((prev: Path, curr: Path) => prev.cost \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PeriodsChanged.html":{"url":"classes/PeriodsChanged.html","title":"class - PeriodsChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PeriodsChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.PeriodsChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyComponent.html":{"url":"components/PrivacyComponent.html","title":"component - PrivacyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PrivacyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/privacy/privacy.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy\n            \n\n            \n                styleUrls\n                ./privacy.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./privacy.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/privacy/privacy.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/privacy/privacy.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-privacy',\n    templateUrl: './privacy.component.html',\n    styleUrls: ['./privacy.component.scss']\n})\nexport class PrivacyComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            Privacy Policy of STRADA\n        \n        \n            This privacy policy describes how your personal data are used and protected by the application\n                STRADA\n            \n            The information is provided pursuant to art. 13 of Legislative Decree no. 196/2003 and EU Regulation 2016/679\n                General Data Protection Regulation (GDPR).\n            \n            Categories of processed data\n            The app does not collect any personal data.\n            Data you provide voluntarily\n            The data and the results are displayed by the app for the time in which you remain connected, and no data is\n                in any way acquired or saved.\n            Cookies\n            The app makes no use of cookies, neither profiling nor technical.\n            External services\n            The app uses Google Maps APIs, for which please refer to its privacy policy:\n                Google Privacy Policy\n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./privacy.component.scss\n                \n                .app-privacy {\n    .mat-card {\n        max-width: 600px;\n\n        a {\n            text-decoration: underline;\n            color: inherit;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Privacy Policy of STRADA                            This privacy policy describes how your personal data are used and protected by the application                STRADA                        The information is provided pursuant to art. 13 of Legislative Decree no. 196/2003 and EU Regulation 2016/679                General Data Protection Regulation (GDPR).                        Categories of processed data            The app does not collect any personal data.            Data you provide voluntarily            The data and the results are displayed by the app for the time in which you remain connected, and no data is                in any way acquired or saved.            Cookies            The app makes no use of cookies, neither profiling nor technical.            External services            The app uses Google Maps APIs, for which please refer to its privacy policy:                Google Privacy Policy                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Relation.html":{"url":"classes/Relation.html","title":"class - Relation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Relation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                relationId\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(relationId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:229\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relationId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        members:     Member[]\n\n                    \n                \n                    \n                        \n                            Type :     Member[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:227\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            relationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        relationId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:225\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:229\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number, visible: boolean = true): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', visible);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public findOppositeEdge(edge: Edge): Edge {\n        return this.edges.find((value: Edge) =>\n            value.origin.nodeId == edge.destination.nodeId && value.destination.nodeId == edge.origin.nodeId\n        );\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.Reset\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-1.html":{"url":"classes/Reset-1.html","title":"class - Reset-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/map.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/map.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/map.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : MapActionTypes.Reset\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/map.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Map } from '../ui-state';\n\n/**\n * ngrx: map Actions.\n */\nexport enum MapActionTypes {\n\n    MapChanged = '[Map] Map Changed',\n    Reset = '[Map] Reset'\n\n}\n\nexport class MapChanged implements Action {\n\n    public readonly type: string = MapActionTypes.MapChanged;\n\n    constructor(public payload: { map: Map }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = MapActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type MapActions = MapChanged | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset-2.html":{"url":"classes/Reset-2.html","title":"class - Reset-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.Reset\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchedulerService.html":{"url":"injectables/SchedulerService.html","title":"injectable - SchedulerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SchedulerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/wizard/scheduler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reset\n                            \n                            \n                                scheduleDemand\n                            \n                            \n                                scheduleNetwork\n                            \n                            \n                                scheduleSimulation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wizard: WizardService, map: MapService, location: LocationService, network: NetworkService, weather: WeatherService, demand: DemandService, simulation: SimulationService, clock: ClockService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/scheduler.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        demand\n                                                  \n                                                        \n                                                                    DemandService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clock\n                                                  \n                                                        \n                                                                    ClockService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Resets the whole application.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleDemand\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleDemand(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nCalcs shortest paths\nCalcs incidence matrix\nCalcs assignment matrix\nGets traffic data\nCalcs link flows\nCalcs O/D matrix\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleNetwork\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleNetwork(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nGets network\nCreates the graph\nGets network data\nAssociates data to the graph\nCorrects graph data\nGets and updates weather data\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleSimulation(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/scheduler.service.ts:181\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nCalcs max flow for each edge.\nInits the simulation.\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { switchMap } from \"rxjs/operators\";\n\nimport { WizardService } from \"./wizard.service\";\nimport { MapService } from \"../map/map.service\";\nimport { LocationService } from \"../../location/location.service\";\nimport { NetworkService } from \"../../network/network.service\";\nimport { WeatherService } from \"../../network/weather/weather.service\";\nimport { DemandService } from \"../../demand/demand.service\";\nimport { SimulationService } from \"../../simulation/simulation.service\";\nimport { ClockService } from \"../../simulation/clock.service\";\n\n@Injectable() export class SchedulerService {\n\n    constructor(\n        private wizard: WizardService,\n        private map: MapService,\n        private location: LocationService,\n        private network: NetworkService,\n        private weather: WeatherService,\n        private demand: DemandService,\n        private simulation: SimulationService,\n        private clock: ClockService\n    ) { }\n\n    /**\n     * Resets the whole application.\n     */\n    public reset(): void {\n        setTimeout(() => {\n            // Wizard.\n            this.wizard.reset();\n            // Services.\n            this.map.reset();\n            this.location.reset();\n            this.network.reset();\n            this.weather.reset();\n            this.demand.reset();\n            this.simulation.reset();\n            this.clock.reset();\n        });\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Gets network\n     * - Creates the graph\n     * - Gets network data\n     * - Associates data to the graph\n     * - Corrects graph data\n     * - Gets and updates weather data\n     */\n    scheduleNetwork(data: any, index: number, nextIndex: number): void {\n        this.wizard.putOnHold('Getting the network');\n        const stream = this.network.getNetwork().pipe(\n            switchMap((response: any) => {\n                this.wizard.putOnHold('Creating the graph');\n                return this.network.createGraph(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting network data');\n                return this.network.getNetworkData();\n            }),\n            switchMap((response: any) => {\n                this.wizard.putOnHold('Updating the graph');\n                return this.network.updateGraph(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Checking the data');\n                return this.network.correctGraph();\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting weather data');\n                return this.weather.getWeatherData(this.network.getTime());\n            }),\n            switchMap((response: any) => {\n                return this.weather.updateWeatherData(response, this.network.getTime());\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    case 'getNetwork':\n                        message = 'Network cannot be retrieved. Check your Internet connection and try again';\n                        break;\n                    case 'createGraph':\n                        message = 'Graph cannnot be created. Please, try with another area';\n                        break;\n                    case 'getNetworkData':\n                        message = 'Network data cannot be retrieved. Past the quota limits traffic data become paid.' +\n                            'This is an open source project: install your own version of it';\n                        break;\n                    case 'correctGraph':\n                        message = 'Graph data are not available. Please, try with another area';\n                        break;\n                    case 'getWeatherData':\n                        message = 'Weather data cannot be retrieved. Please, try at another time';\n                        break;\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Calcs shortest paths\n     * - Calcs incidence matrix\n     * - Calcs assignment matrix\n     * - Gets traffic data\n     * - Calcs link flows\n     * - Calcs O/D matrix\n     */\n    scheduleDemand(data: any, index: number, nextIndex: number): void {\n        const graph = this.network.getGraph();\n        const odPairs = this.network.getOdPairs();\n\n        this.wizard.putOnHold('Computing shortest paths');\n        const stream = graph.calcShortestPaths(odPairs).pipe(\n            switchMap(() => {\n                return graph.calcIncidenceMatrix();\n            }),\n            switchMap(() => {\n                return graph.calcAssignmentMatrix(odPairs);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Getting traffic data');\n                return this.network.getTrafficData();\n            }),\n            switchMap((response: any) => {\n                return this.network.calcLinkFlows(response);\n            }),\n            switchMap(() => {\n                this.wizard.putOnHold('Computing demand');\n                return this.demand.calcOdMatrix();\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    case 'calcShortestPaths':\n                        message = 'There are no routes. Please, try with another area';\n                        break;\n                    case 'getTrafficData':\n                        message = 'Traffic data cannot be retrieved. Past the quota limits traffic data become paid.' +\n                            'This is an open source project: install your own version of it';\n                        break;\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Calcs max flow for each edge.\n     * - Inits the simulation.\n     */\n    scheduleSimulation(data: any, index: number, nextIndex: number): void {\n        const graph = this.network.getGraph();\n        const factors = this.weather.getFactors();\n\n        this.wizard.putOnHold('Computing max flows');\n        const stream = graph.calcMaxflows(factors[0]).pipe(\n            switchMap(() => {\n                this.wizard.putOnHold('Initializing simulation');\n                return this.simulation.init();\n            })\n        );\n\n        stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    default:\n                        message = 'Unexpected error';\n                }\n                this.wizard.putInError(message);\n                this.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n                this.wizard.goOn(data, index, nextIndex);\n            }\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchForTheAreaComponent.html":{"url":"components/SearchForTheAreaComponent.html","title":"component - SearchForTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchForTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-search-for-the-area\n            \n\n            \n                styleUrls\n                ./search-for-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-for-the-area.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentPosition\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                search\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wizard: WizardService, location: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearch(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { WizardService } from '../wizard.service';\nimport { LocationService } from '../../../location/location.service';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-search-for-the-area',\n    templateUrl: './search-for-the-area.component.html',\n    styleUrls: ['./search-for-the-area.component.scss']\n})\nexport class SearchForTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor(\n        private wizard: WizardService,\n        private location: LocationService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates location service data on value changes.\n        this.subscriptions.push(this.formGroup.get('center').valueChanges.subscribe(\n            (center: google.maps.LatLngLiteral) => {\n                this.location.setLatLng(center);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        //\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    search(address: string): void {\n        if (!!address) {\n            // Updates pending state.\n            this.wizard.putOnHold('Searching address');\n            // Converts the address into geographic coordinates.\n            this.location.codeAddress(address).forEach(\n                (results: google.maps.GeocoderResult[]) => {\n                    this.formGroup.get('center').setValue({\n                        lat: results[0].geometry.location.lat(),\n                        lng: results[0].geometry.location.lng()\n                    });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                })\n                .then()\n                .catch((error: google.maps.GeocoderStatus) => {\n                    if (error === google.maps.GeocoderStatus.ZERO_RESULTS) {\n                        // Updates error state.\n                        this.wizard.putInError('Zero results');\n                    } else {\n                        // INVALID_REQUEST, OVER_QUERY_LIMIT, REQUEST_DENIED, UNKNOWN_ERROR\n                        // Updates error state.\n                        this.wizard.putInError('Invalid request');\n                    }\n                });\n        }\n    }\n\n    getCurrentPosition(): void {\n        if (navigator.geolocation) {\n            // Updates pending state.\n            this.wizard.putOnHold('Getting position');\n            this.location.getCurrentPosition().subscribe(\n                (position: Position) => {\n                    this.formGroup.get('center').setValue({ lat: position.coords.latitude, lng: position.coords.longitude });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                },\n                (error: PositionError) => {\n                    if (error.code > 0) {\n                        let message: string;\n                        switch (error.code) {\n                            case error.PERMISSION_DENIED:\n                                message = 'Permission denied';\n                                break;\n                            case error.POSITION_UNAVAILABLE:\n                                message = 'Position unavailable';\n                                break;\n                            case error.TIMEOUT:\n                                message = 'Position timeout';\n                                break;\n                        }\n                        // Updates error state.\n                        this.wizard.putInError(message);\n                    }\n                });\n\n        } else {\n            // Updates error state.\n            this.wizard.putInError(\"Browser doesn't support geolocation\");\n        }\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                search\n            \n        \n        Get current position\n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n                \n                    ./search-for-the-area.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    search                            Get current position                Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchForTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectionOfTheAreaComponent.html":{"url":"components/SelectionOfTheAreaComponent.html","title":"component - SelectionOfTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectionOfTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-selection-of-the-area\n            \n\n            \n                styleUrls\n                ./selection-of-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./selection-of-the-area.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    min\n                                \n                                \n                                    max\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n\n                \n                    \n                        getmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:28\n                                \n                            \n                    \n                        \n                                Min moment: current time.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n\n                \n                    \n                        getmax()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:35\n                                \n                            \n                    \n                        \n                                Max moment: current day.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport * as fromUi from '../../models/reducers';\nimport { Map } from '../../models/ui-state';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-selection-of-the-area',\n    templateUrl: './selection-of-the-area.component.html',\n    styleUrls: ['./selection-of-the-area.component.scss']\n})\nexport class SelectionOfTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    /**\n     * Min moment: current time.\n     */\n    get min(): Date {\n        return new Date();\n    }\n\n    /**\n     * Max moment: current day.\n     */\n    get max(): Date {\n        return new Date(\n            this.min.getFullYear(),\n            this.min.getMonth(),\n            this.min.getDate(),\n            this.min.getHours() + uiConfig.timeLimit,\n            this.min.getMinutes()\n        );\n    }\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates network service data on value changes.\n        this.subscriptions.push(this.formGroup.get('bounds').valueChanges.subscribe(\n            (bounds: google.maps.LatLngBoundsLiteral) => {\n                this.network.setBounds(bounds);\n            }\n        ));\n        this.subscriptions.push(this.formGroup.get('time').valueChanges.subscribe(\n            (time: Date) => {\n                this.network.setTime(time);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.map)).subscribe((map: Map) => {\n            if (map && map.data.bounds) {\n                this.formGroup.get('bounds').setValue(map.data.bounds);\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                calendar_today\n            \n            Optional. Leave it empty for the current time\n            \n                \n                \n                    Please, enter a time between the current time and the next 24 hours\n                \n                \n                    Please, insert a valid time or select it\n                \n            \n        \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n                \n                    ./selection-of-the-area.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    calendar_today                        Optional. Leave it empty for the current time                                                                Please, enter a time between the current time and the next 24 hours                                                    Please, insert a valid time or select it                                                            Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectionOfTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FooterComponent\n                            \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FooterComponent\n                            \n                            \n                                    InfoDialogComponent\n                            \n                            \n                                    MaterialModule\n                            \n                            \n                                    MessageArchivedComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialModule } from './material.module';\n\nimport { FooterComponent } from './footer/footer.component';\nimport { MessageArchivedComponent } from './message-archived.component';\nimport { InfoDialogComponent } from './info-dialog.component';\n\nimport { CanDeactivateGuard } from './can-deactivate-guard.service';\n\nconst sharedModules: any[] = [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n];\n\n@NgModule({\n    entryComponents: [\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    declarations: [\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    imports: sharedModules,\n    exports: [\n        sharedModules,\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ]\n})\nexport class SharedModule {\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: SharedModule,\n            providers: [\n                CanDeactivateGuard\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Simulation.html":{"url":"interfaces/Simulation.html","title":"interface - Simulation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Simulation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/simulation-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        avgSpeed\n                                \n                                \n                                        counts\n                                \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avgSpeed\n                                    \n                                \n                                \n                                    \n                                        avgSpeed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Simulation avg. speed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        counts\n                                    \n                                \n                                \n                                    \n                                        counts:     Counts\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Counts\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Simulation counts.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     NumericalSimulation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NumericalSimulation[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Simulation data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NumericalSimulation {\n\n    edge: string;\n    wayName: string;\n    trafficVolume: number;\n    trafficCount: number;\n    delay: number | string;\n    stops: number;\n\n}\n\nexport interface Counts {\n\n    startedVehicles: number;\n    arrivedVehicles: number;\n\n}\n\nexport interface Simulation {\n\n    /**\n     * Simulation data.\n     */\n    data: NumericalSimulation[];\n    /**\n     * Simulation counts.\n     */\n    counts: Counts;\n    /**\n     * Simulation avg. speed.\n     */\n    avgSpeed: number;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimulationChanged.html":{"url":"classes/SimulationChanged.html","title":"class - SimulationChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimulationChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.SimulationChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimulationComponent.html":{"url":"components/SimulationComponent.html","title":"component - SimulationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimulationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/simulation/simulation.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-simulation\n            \n\n            \n                styleUrls\n                ./simulation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simulation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avgSpeed\n                            \n                            \n                                control\n                            \n                            \n                                counts\n                            \n                            \n                                endSimulation\n                            \n                            \n                                simulatedTimeInterval\n                            \n                            \n                                simulatedTimePeriod\n                            \n                            \n                                timeInterval\n                            \n                            \n                                timePeriod\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                pressControl\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, clock: ClockService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/simulation/simulation.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clock\n                                                  \n                                                        \n                                                                    ClockService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pressControl\n                            \n                            \n                        \n                    \n                \n                \n                    \npressControl(control: Control)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    Control\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avgSpeed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        avgSpeed:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     \n\n                    \n                \n                    \n                        \n                            Default value : Control\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        counts:     Counts\n\n                    \n                \n                    \n                        \n                            Type :     Counts\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endSimulation:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulatedTimeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimeInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulatedTimePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulatedTimePeriod:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timePeriod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timePeriod:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { ClockService, Control } from '../../../simulation/clock.service';\nimport * as fromSimulation from '../../../simulation/models/reducers';\nimport { Simulation, Counts } from '../../../simulation/models/simulation-state';\nimport { toSeconds, formatTimeFromSeconds, formatTimeFromMilliseconds } from '../../utils';\nimport { uiConfig } from '../../ui-config';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-simulation',\n    templateUrl: './simulation.component.html',\n    styleUrls: ['./simulation.component.scss']\n})\nexport class SimulationComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    timeInterval: number;\n\n    timePeriod: string;\n\n    simulatedTimeInterval: number;\n\n    simulatedTimePeriod: string;\n\n    counts: Counts;\n\n    avgSpeed: number;\n\n    endSimulation: boolean;\n\n    control: typeof Control = Control;\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private clock: ClockService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.periods)).subscribe((periods: any) => {\n            if (periods) {\n                if (typeof periods.timeInterval !== \"undefined\") {\n                    this.timeInterval = periods.timeInterval;\n                }\n                if (typeof periods.timePeriods !== \"undefined\") {\n                    this.timePeriod = formatTimeFromSeconds(periods.timePeriods[periods.timePeriods.length - 1]);\n                }\n                if (typeof periods.simulatedTimeInterval !== \"undefined\") {\n                    this.simulatedTimeInterval = toSeconds(periods.simulatedTimeInterval);\n                } else {\n                    this.simulatedTimeInterval = toSeconds(uiConfig.simulatedTimeInterval);\n                }\n                if (typeof periods.simulatedTimePeriod !== \"undefined\") {\n                    this.simulatedTimePeriod = formatTimeFromMilliseconds(periods.simulatedTimePeriod);\n                } else {\n                    this.simulatedTimePeriod = formatTimeFromMilliseconds(0);\n                }\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.simulation)).subscribe((simulation: Simulation) => {\n            if (simulation && simulation.counts) {\n                this.counts = simulation.counts;\n            }\n            if (simulation && simulation.avgSpeed) {\n                this.avgSpeed = simulation.avgSpeed;\n            }\n        }));\n        this.subscriptions.push(this.store.pipe(select(fromSimulation.end)).subscribe((end: boolean) => {\n            this.endSimulation = end;\n            this.avgSpeed = 0;\n            this.formGroup.get('endSimulation').setValue(end);\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    pressControl(control: Control): void {\n        this.clock.pressControl(control);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        stop\n                    \n                \n                \n                    \n                        play_arrow\n                    \n                \n                \n                    \n                        pause\n                    \n                \n            \n            \n                \n                    \n                        fast_rewind\n                    \n                \n                \n                    \n                        skip_next\n                    \n                \n                \n                    \n                        fast_forward\n                    \n                \n            \n        \n        \n        \n            Time interval: {{ timeInterval }} s\n            Time period: {{ timePeriod }}\n            Simulated time interval: {{ simulatedTimeInterval }} s\n            Simulated time period: {{ simulatedTimePeriod }}\n        \n        \n        \n            Started vehicles: {{ counts?.startedVehicles || 0 }}\n            Arrived vehicles: {{ counts?.arrivedVehicles || 0 }}\n        \n        \n        \n            Avg. speed: {{ avgSpeed || 0 }} m/s\n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n                \n                    ./simulation.component.scss\n                \n                .cell {\n    background-color: #eceff1;\n    height: 48px;\n    padding: 4px;\n    text-align: center;\n\n    .mat-icon-button {\n        .mat-icon {\n            font-size: 24px;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    stop                                                                                                play_arrow                                                                                                pause                                                                                                                        fast_rewind                                                                                                skip_next                                                                                                fast_forward                                                                                    Time interval: {{ timeInterval }} s            Time period: {{ timePeriod }}            Simulated time interval: {{ simulatedTimeInterval }} s            Simulated time period: {{ simulatedTimePeriod }}                                    Started vehicles: {{ counts?.startedVehicles || 0 }}            Arrived vehicles: {{ counts?.arrivedVehicles || 0 }}                                    Avg. speed: {{ avgSpeed || 0 }} m/s                        Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimulationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimulationEnded.html":{"url":"classes/SimulationEnded.html","title":"class - SimulationEnded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimulationEnded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/actions/simulation.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/simulation/models/actions/simulation.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SimulationActionTypes.SimulationEnded\n                        \n                    \n                        \n                            \n                                    Defined in src/app/simulation/models/actions/simulation.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Simulation } from '../simulation-state';\n\n/**\n * ngrx: simulation Actions.\n */\nexport enum SimulationActionTypes {\n\n    SimulationChanged = '[Simulation] Simulation Changed',\n    SimulationEnded = '[Simulation] Simulation Ended',\n    PeriodsChanged = '[Simulation] Periods Changed',\n    Reset = '[Simulation] Reset'\n\n}\n\nexport class SimulationChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationChanged;\n\n    constructor(public payload: { simulation: Simulation }) { }\n\n}\n\nexport class SimulationEnded implements Action {\n\n    public readonly type: string = SimulationActionTypes.SimulationEnded;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class PeriodsChanged implements Action {\n\n    public readonly type: string = SimulationActionTypes.PeriodsChanged;\n\n    constructor(public payload: any) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = SimulationActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type SimulationActions = SimulationChanged | SimulationEnded | PeriodsChanged | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimulationModule.html":{"url":"modules/SimulationModule.html","title":"module - SimulationModule","body":"\n                   \n\n\n\n\n  Modules\n  SimulationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\n\nClockService\n\nClockService\n\n\n\nSimulationModule\n\nSimulationModule\n\nSimulationModule -->\n\nClockService->SimulationModule\n\n\n\n\n\nSimulationService\n\nSimulationService\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/simulation/simulation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     ClockService\n                            \n                            \n                                     SimulationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { StoreModule } from \"@ngrx/store\";\n\nimport { SimulationService } from './simulation.service';\nimport { ClockService } from './clock.service';\nimport { reducers } from './models/reducers';\n\n@NgModule({\n    imports: [\n        StoreModule.forFeature('simulation', reducers)\n    ],\n    declarations: [],\n    providers: [SimulationService, ClockService]\n})\nexport class SimulationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimulationState.html":{"url":"interfaces/SimulationState.html","title":"interface - SimulationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimulationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/reducers.ts\n        \n\n            \n                Description\n            \n            \n                Simulation state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        simulation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        simulation\n                                    \n                                \n                                \n                                    \n                                        simulation:     fromSimulation.SimulationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromSimulation.SimulationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector, MemoizedSelector } from \"@ngrx/store\";\n\nimport * as fromSimulation from './reducers/simulation.reducer';\nimport { Simulation } from \"./simulation-state\";\n\n/**\n * Simulation state management.\n */\nexport interface SimulationState {\n\n    simulation: fromSimulation.SimulationState;\n\n}\n\nexport const reducers: ActionReducerMap = {\n    simulation: fromSimulation.simulationReducer\n};\n\nexport const featureSimulationState: MemoizedSelector = createFeatureSelector('simulation');\n\n/**\n * Exports the simulation state.\n */\nexport const simulationState: MemoizedSelector = createSelector(\n    featureSimulationState,\n    (state: SimulationState) => state.simulation\n);\n\nexport const simulation: MemoizedSelector = createSelector(\n    simulationState,\n    fromSimulation.getSimulation\n);\n\n/**\n * Exports the end state.\n */\nexport const end: MemoizedSelector = createSelector(\n    simulationState,\n    fromSimulation.getEnd\n);\n\n/**\n * Exports the periods state.\n */\nexport const periods: MemoizedSelector = createSelector(\n    simulationState,\n    fromSimulation.getPeriods\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimulationState-1.html":{"url":"interfaces/SimulationState-1.html","title":"interface - SimulationState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimulationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/models/reducers/simulation.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Simulation state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        end\n                                \n                                \n                                        periods\n                                \n                                \n                                        simulation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                    \n                                \n                                \n                                    \n                                        end:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        periods\n                                    \n                                \n                                \n                                    \n                                        periods:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        simulation\n                                    \n                                \n                                \n                                    \n                                        simulation:     Simulation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Simulation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import deepClone from 'mout/lang/deepClone';\n\nimport { Simulation } from \"../simulation-state\";\nimport { SimulationActions, SimulationActionTypes } from '../actions/simulation.actions';\n\n/**\n * Simulation state management.\n */\nexport interface SimulationState {\n\n    simulation: Simulation;\n    end: boolean;\n    periods: any;\n\n}\n\nexport const initialSimulationState: SimulationState = {\n    simulation: null,\n    end: false,\n    periods: null\n};\n\n/**\n * ngrx: simulation Reducer.\n */\nexport function simulationReducer(state: SimulationState = deepClone(initialSimulationState), action: SimulationActions): SimulationState {\n    switch (action.type) {\n        case SimulationActionTypes.SimulationChanged: {\n            state.simulation = action.payload.simulation;\n            return {\n                ...state,\n                simulation: deepClone(state.simulation)\n            };\n        }\n        case SimulationActionTypes.SimulationEnded: {\n            return {\n                ...state,\n                end: action.payload\n            };\n        }\n        case SimulationActionTypes.PeriodsChanged: {\n            state.periods = action.payload;\n            return {\n                ...state,\n                periods: deepClone(state.periods)\n            };\n        }\n        case SimulationActionTypes.Reset: {\n            return deepClone(initialSimulationState);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getSimulation: (state: SimulationState) => Simulation = (state: SimulationState) => state.simulation;\n\nexport const getEnd: (state: SimulationState) => boolean = (state: SimulationState) => state.end;\n\nexport const getPeriods: (state: SimulationState) => any = (state: SimulationState) => state.periods;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Statistics.html":{"url":"classes/Statistics.html","title":"class - Statistics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Statistics\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/statistics.ts\n        \n\n            \n                Description\n            \n            \n                Extracts statistics from the graph.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getBusiestEdge\n                            \n                            \n                                    Static\n                                getBusiestEdgeCapacity\n                            \n                            \n                                    Static\n                                getBusiestEdgeData\n                            \n                            \n                                    Static\n                                getBusiestEdgeDelay\n                            \n                            \n                                    Static\n                                getBusiestEdgeLabel\n                            \n                            \n                                    Static\n                                getHeavyTrafficData\n                            \n                            \n                                    Private\n                                    Static\n                                getHeavyTrafficEdges\n                            \n                            \n                                    Static\n                                getHeavyTrafficLabels\n                            \n                            \n                                    Private\n                                    Static\n                                getModerateTrafficEdges\n                            \n                            \n                                    Static\n                                getModerateTrafficLabels\n                            \n                            \n                                    Static\n                                getModerateyTrafficData\n                            \n                            \n                                    Private\n                                    Static\n                                getTrafficVolumes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getBusiestEdge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdge(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LtmEdge\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeCapacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeCapacity(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeData(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeDelay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeDelay(edges: LtmEdge[], timePeriods: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timePeriods\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBusiestEdgeLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBusiestEdgeLabel(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getHeavyTrafficData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeavyTrafficData(edges: LtmEdge[], timeInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timeInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getHeavyTrafficEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeavyTrafficEdges(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LtmEdge[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getHeavyTrafficLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeavyTrafficLabels(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getModerateTrafficEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModerateTrafficEdges(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LtmEdge[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getModerateTrafficLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModerateTrafficLabels(edges: LtmEdge[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getModerateyTrafficData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModerateyTrafficData(edges: LtmEdge[], timeInterval: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edges\n                                                        \n                                                                    LtmEdge[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timeInterval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getTrafficVolumes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTrafficVolumes(edge: LtmEdge)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/statistics.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    LtmEdge\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { LtmEdge } from \"./ltm-graph\";\n\n/**\n * Extracts statistics from the graph.\n */\nexport class Statistics {\n\n    public static getHeavyTrafficLabels(edges: LtmEdge[]): string[] {\n        return this.getHeavyTrafficEdges(edges).map((edge: LtmEdge) => edge.label);\n    }\n\n    public static getModerateTrafficLabels(edges: LtmEdge[]): string[] {\n        return this.getModerateTrafficEdges(edges).map((edge: LtmEdge) => edge.label);\n    }\n\n    public static getHeavyTrafficData(edges: LtmEdge[], timeInterval: number): number[] {\n        return this.getHeavyTrafficEdges(edges).map((edge: LtmEdge) => edge.heavyTrafficCount * timeInterval);\n    }\n\n    public static getModerateyTrafficData(edges: LtmEdge[], timeInterval: number): number[] {\n        return this.getModerateTrafficEdges(edges).map((edge: LtmEdge) => edge.moderateTrafficCount * timeInterval);\n    }\n\n    public static getBusiestEdgeLabel(edges: LtmEdge[]): string {\n        const edge = this.getBusiestEdge(edges);\n        return edge.label;\n    }\n\n    public static getBusiestEdgeData(edges: LtmEdge[]): number[] {\n        const edge = this.getBusiestEdge(edges);\n        return this.getTrafficVolumes(edge);\n    }\n\n    public static getBusiestEdgeCapacity(edges: LtmEdge[]): number {\n        const edge = this.getBusiestEdge(edges);\n        return Math.trunc(edge.maxFlow * edge.duration) > 1 ?\n            Math.trunc(edge.maxFlow * edge.duration) + 1 :\n            1;\n    }\n\n    public static getBusiestEdgeDelay(edges: LtmEdge[], timePeriods: number[]): number {\n        const edge = this.getBusiestEdge(edges);\n        const trafficVolumes = this.getTrafficVolumes(edge);\n\n        let i = 0;\n        let first: number;\n        let last: number;\n        do {\n            if (trafficVolumes[i] > 0 && first == null) {\n                first = i;\n            }\n            if (trafficVolumes[i] > 0) {\n                last = i + 1;\n            }\n            i++;\n        } while (i  Math.abs(curr - targetTime)  edge.heavyTrafficCount > 0);\n    }\n\n    private static getModerateTrafficEdges(edges: LtmEdge[]): LtmEdge[] {\n        return edges.filter((edge: LtmEdge) => edge.moderateTrafficCount > 0);\n    }\n\n    private static getBusiestEdge(edges: LtmEdge[]): LtmEdge {\n        return edges.reduce((prev: LtmEdge, curr: LtmEdge) =>\n            prev.heavyTrafficCount + prev.moderateTrafficCount > curr.heavyTrafficCount + curr.moderateTrafficCount ? prev : curr\n        );\n    }\n\n    private static getTrafficVolumes(edge: LtmEdge): number[] {\n        return edge.upstream.map((value: number, i: number) => value - edge.downstream[i]);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatisticsComponent.html":{"url":"components/StatisticsComponent.html","title":"component - StatisticsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatisticsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/statistics/statistics.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-statistics\n            \n\n            \n                styleUrls\n                ./statistics.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./statistics.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                totalAvgSpeed\n                            \n                            \n                                totalProcessingTime\n                            \n                            \n                                totalSimulatedTime\n                            \n                            \n                                totalTime\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, simulation: SimulationService, clock: ClockService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/statistics/statistics.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clock\n                                                  \n                                                        \n                                                                    ClockService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalAvgSpeed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalAvgSpeed:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalProcessingTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalProcessingTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalSimulatedTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalSimulatedTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalTime:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { SimulationService } from '../../../simulation/simulation.service';\nimport { ClockService } from '../../../simulation/clock.service';\nimport * as fromUi from '../../models/reducers';\nimport { formatTimeFromSeconds, formatTimeFromMilliseconds } from '../../utils';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-statistics',\n    templateUrl: './statistics.component.html',\n    styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    totalTime: string;\n\n    totalSimulatedTime: string;\n\n    totalProcessingTime: string;\n\n    totalAvgSpeed: number;\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private simulation: SimulationService,\n        private clock: ClockService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case this.index:\n                    const simulationStatistics = this.simulation.getStatistics();\n                    const clockStatistics = this.clock.getStatistics();\n                    this.totalTime = formatTimeFromSeconds(simulationStatistics.totalTime);\n                    this.totalSimulatedTime = formatTimeFromMilliseconds(clockStatistics.totalSimulatedTime);\n                    this.totalProcessingTime = formatTimeFromMilliseconds(clockStatistics.totalProcessingTime);\n                    this.totalAvgSpeed = simulationStatistics.totalAvgSpeed;\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n}\n\n    \n\n    \n        \n    \n        \n            Total time: {{ totalTime }}\n            Total simulated time: {{ totalSimulatedTime }}\n            Total processing time: {{ totalProcessingTime }}\n        \n        \n        \n            Total avg. speed: {{ totalAvgSpeed || 0 }} m/s\n        \n    \n\n    \n        Exit\n            navigate_next\n        \n    \n\n    \n\n    \n                \n                    ./statistics.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Total time: {{ totalTime }}            Total simulated time: {{ totalSimulatedTime }}            Total processing time: {{ totalProcessingTime }}                                    Total avg. speed: {{ totalAvgSpeed || 0 }} m/s                        Exit            navigate_next            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatisticsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Step.html":{"url":"interfaces/Step.html","title":"interface - Step","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Step\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/ui-state.ts\n        \n\n            \n                Description\n            \n            \n                Step model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Form model data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Step {\n\n    /**\n     * Form model data.\n     */\n    data: any;\n\n}\n\n/**\n * Map model.\n */\nexport interface Map {\n\n    /**\n     * Map data.\n     */\n    data: any;\n\n}\n\n/**\n * Initial steps.\n */\nexport const STEPS: Step[] = [];\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepChanged.html":{"url":"classes/StepChanged.html","title":"class - StepChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepError.html":{"url":"classes/StepError.html","title":"class - StepError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepPending.html":{"url":"classes/StepPending.html","title":"class - StepPending","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepPending\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string | boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string | boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepPending\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../ui-state';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: string | boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Tag describes the meaning of the particular element to which it is attached.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\n\nimport * as combine from 'mout/array/combine';\n\nimport { Heap, Path } from './k-shortest-path';\nimport { round } from '../utils';\nimport { environment } from '../../environments/environment';\nimport { uiConfig } from '../ui/ui-config';\n\nexport enum PathType {\n    distance = 'distance',\n    duration = 'duration'\n}\n\n/**\n * An O/D pair is described by the origin and destination nodes, and the type of path.\n */\nexport interface OdPair {\n\n    origin: string;\n    destination: string;\n    pathType: PathType;\n\n}\n\nexport interface LinkFlow {\n\n    /**\n     * linkFlow attribute.\n     */\n    value: number;\n    /**\n     * Variance is the inverse of density.\n     */\n    variance: number;\n\n}\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public label: string;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    public drawingOptions: { marker?: google.maps.Marker } = {};\n\n    /**\n     * Used by the k shortest path routing.\n     */\n    public count: number = 0;\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public label: string;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    /**\n     * Free flow speed (m/s).\n     */\n    public freeFlowVelocity: number;\n\n    /**\n     * Instant speed (m/s).\n     */\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    /**\n     * Number of vehicles calculated from traffic data.\n     */\n    public linkFlow: number;\n\n    /**\n     * Maximum flow of the link.\n     */\n    public maxFlow: number;\n\n    public drawingOptions: {\n        originalPath?: google.maps.LatLng[],\n        path?: google.maps.LatLng[],\n        polyline?: google.maps.Polyline,\n        marker?: google.maps.Marker,\n        infowindow?: google.maps.InfoWindow\n    } = {};\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the link flow.\n     */\n    public calcLinkFlow(): void {\n        // Min distance is 1 meter.\n        if (this.distance == 0) { this.distance = 1; }\n        // Min duration is 1 second.\n        if (this.duration == 0) {\n            this.duration = round(this.distance / (50 / 3.6)) > 1 ? round(this.distance / (50 / 3.6)) : 1;\n        }\n        // Calculates free flow velocity (m/s).\n        this.freeFlowVelocity = round(this.distance / this.duration, 2);\n        // Calculates link flow.\n        if (this.durationInTraffic > 0 && this.durationInTraffic >= this.duration) {\n            // Calculates velocity (m/s).\n            this.velocity = round(this.distance / this.durationInTraffic, 2);\n            // Calculates density.\n            this.density = round(this.getKjam() * (this.freeFlowVelocity - this.velocity) / this.freeFlowVelocity, 2);\n            // Calculates flow.\n            this.flow = round(this.density * this.velocity, 2);\n            // Calculates link flow.\n            this.linkFlow = round(this.density * this.distance);\n        } else {\n            this.velocity = 0;\n            this.density = 0;\n            this.flow = 0;\n            this.linkFlow = 0;\n        }\n    }\n\n    /**\n     * Calculates the max flow of the edge.\n     * @param factor Weather Adjustment Factor\n     */\n    public calcMaxFlow(factor: number): void {\n        const maxFlow = this.getKjam() * this.freeFlowVelocity;\n        this.maxFlow = round(maxFlow * factor, 2);\n    }\n\n    /**\n     * Gets the variance of measurement error of link flow.\n     */\n    public getVariance(): number {\n        return this.density > 0 ? round(1 / this.density, 2) : 1;\n    }\n\n    public getKjam(): number {\n        return round(1 / uiConfig.sp, 2);\n    }\n\n    protected getCapacity(timeInterval: number): number {\n        return this.maxFlow * timeInterval;\n    }\n\n    protected draw(color: string, zIndex: number, visible: boolean = true): void {\n        this.drawingOptions.polyline.set('strokeColor', color);\n        this.drawingOptions.polyline.set('zIndex', zIndex);\n        this.drawingOptions.marker.set('visible', visible);\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    protected nodes: Node[] = [];\n\n    protected edges: Edge[] = [];\n\n    protected relations: Relation[] = [];\n\n    /**\n     * Paths for each O/D pair [pairs,paths,edges].\n     */\n    protected shortestPaths: Edge[][][] = [];\n\n    protected incidenceMatrix: boolean[][][] = [];\n\n    protected assignmentMatrix: number[][][] = [];\n\n    private heap: Heap;\n\n    /**\n     * Shortest paths drawing options.\n     */\n    private drawingOptions: {\n        polylines?: google.maps.Polyline[][];\n    } = {};\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public getEdge(edgeId: number): Edge {\n        return this.edges.find((edge: Edge) => edge.edgeId == edgeId);\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Key:oneway\n     * @param edgeId Id of the edge\n     */\n    public isOneway(edgeId: number): boolean {\n        return !!this.getEdge(edgeId).tags.find(tag => tag.key == 'oneway' && tag.value != 'no') ||\n            this.isRoundabout(edgeId);\n    }\n\n    /**\n     * https://wiki.openstreetmap.org/wiki/Tag:junction%3Droundabout\n     * @param edgeId Id of the edge\n     */\n    public isRoundabout(edgeId: number): boolean {\n        return this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'roundabout') ||\n            this.getEdge(edgeId).tags.find(tag => tag.key == 'junction' && tag.value == 'circular') ?\n            true : false;\n    }\n\n    public findOppositeEdge(edge: Edge): Edge {\n        return this.edges.find((value: Edge) =>\n            value.origin.nodeId == edge.destination.nodeId && value.destination.nodeId == edge.origin.nodeId\n        );\n    }\n\n    public getOdNode(label: string): Node {\n        return this.nodes.find((node: Node) => node.label == label);\n    }\n\n    public getOdNodes(): Node[] {\n        return this.nodes.filter((node: Node) => node.label);\n    }\n\n    /**\n     * Calculates the set of minimum paths.\n     * @param odPairs The O/D pairs\n     */\n    public calcShortestPaths(odPairs: OdPair[]): Observable {\n        try {\n            for (let i = 0; i  edge.label);\n    }\n\n    /**\n     * Calculates the incidence matrix of paths for O/D pairs.\n     */\n    public calcIncidenceMatrix(): Observable {\n        const edges = this.getPathsEdges();\n        for (let z = 0; z  value.edgeId == edges[m].edgeId)) {\n                        // The path crosses the edge.\n                        this.incidenceMatrix[z][n][m] = true;\n                    } else {\n                        // The path does not cross the edge.\n                        this.incidenceMatrix[z][n][m] = false;\n                    }\n                }\n            }\n        }\n        return of(null);\n    }\n\n    public getIncidenceMatrix(): boolean[][][] {\n        return this.incidenceMatrix;\n    }\n\n    /**\n     * Calculates the assignment matrix.\n     * @param odPairs The O/D pairs\n     */\n    public calcAssignmentMatrix(odPairs: OdPair[]): Observable {\n        // Calculates the probabilities of shortest paths.\n        const shortestPathsProbabilities = this.calcShortestPathsProbabilities(odPairs);\n\n        // Assignment matrix.\n        for (let z = 0; z  {\n        const edges = this.getPathsEdges();\n        for (const edge of edges) {\n            edge.calcMaxFlow(factor);\n        }\n        return of(null);\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link distance or duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param o Source node\n     * @param d Destination node\n     * @param pathType Distance or duration\n     * @param k The number of shortest paths to compute\n     * @returns The set of shortest paths\n     */\n    private ksp(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Sets to zero the count property of the nodes.\n        this.resetCount();\n        // Instantiates the heap.\n        this.heap = new Heap();\n        // Inserts the path of origin into heap with cost 0.\n        this.heap.push({ pathId: 0, node: o, edges: [], cost: 0 });\n        // Walks the graph.\n        return this.walk(o, d, pathType, k);\n    }\n\n    /**\n     * Breadth First Search (BFS) algorithm for traversing and searching tree data\n     * explores the neighbor nodes first, before moving to the next level neighbors.\n     */\n    private walk(o: Node, d: Node, pathType: string, k: number): Path[] {\n        // Set of shortest paths from origin to destination.\n        const shortestPaths: Path[] = [];\n\n        let pathId = 1;\n        let node: Node;\n        while (this.heap.getPaths().length > 0 && d.count  edge.origin.nodeId == node.nodeId) ? false : true;\n    }\n\n    private resetCount(): void {\n        for (const node of this.nodes) {\n            node.count = 0;\n        }\n    }\n\n    /**\n     * Removes the alternative paths that differ only for two links.\n     * @param shortestPaths The shortest paths as created by the algorithm\n     */\n    private filterPaths(shortestPaths: Path[]): void {\n        if (shortestPaths.length > 1) {\n            let i = 0;\n            do {\n                const pathA = shortestPaths[i].edges;\n                const pathB = shortestPaths[i + 1].edges;\n                const sharedEdges = pathA.filter((edgeOfA: Edge) =>\n                    pathB.find((edgeOfB: Edge) =>\n                        edgeOfB.edgeId == edgeOfA.edgeId));\n                if (pathA.length - sharedEdges.length  value.edgeId == edge.edgeId)) {\n                        edges.push(edge);\n                        edge.label = 'E' + count++;\n                        if (!environment.testing) {\n                            edge.drawingOptions.infowindow.setContent('Edge: ' + edge.label);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Multinomial logit model.\n     * @param odPairs The O/D pairs\n     */\n    private calcShortestPathsProbabilities(odPairs: OdPair[]): number[][] {\n        // Gets the total cost of paths.\n        const pathCosts = this.calcPathCosts(odPairs);\n        const shortestPathsProbabilities: number[][] = [];\n        // Theta parameter adjustment.\n        const parameter = uiConfig.theta * 100;\n        // Calculates numerator.\n        const exps: number[][] = [];\n        for (let z = 0; z  {\n                return value > 0 ? Math.exp(-value / parameter) : 0;\n            });\n        }\n        // Calculates denominator.\n        const sumExps: number[] = [];\n        for (let z = 0; z  a + b, 0);\n            sumExps.push(sum);\n        }\n        // Probabilities.\n        for (let z = 0; z  0 ? round(exps[z][n] / sumExps[z], 3) : 0;\n                shortestPathsProbabilities[z].push(p);\n            }\n        }\n        return shortestPathsProbabilities;\n    }\n\n    private calcPathCosts(odPairs: OdPair[]): number[][] {\n        const pathCosts: number[][] = [];\n        for (let z = 0; z \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TermsComponent.html":{"url":"components/TermsComponent.html","title":"component - TermsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TermsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/terms/terms.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-terms\n            \n\n            \n                styleUrls\n                ./terms.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./terms.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/terms/terms.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/terms/terms.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-terms',\n    templateUrl: './terms.component.html',\n    styleUrls: ['./terms.component.scss']\n})\nexport class TermsComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            Terms of service of STRADA\n        \n        \n            These Terms of service govern your use of the application\n                STRADA\n            \n            By using the app, you accept these Terms in full. If you disagree with these Terms or any part of these Terms,\n                you must not use the app.\n            \n            Privacy Policy of the app\n            \n                Privacy Policy\n            \n            License to use\n            The app is released under the MIT license.\n            External services\n            The app uses Google Maps APIs. By using the app, you are bound by Google's Terms of Service:\n                Google Terms of Service\n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./terms.component.scss\n                \n                .app-terms {\n    .mat-card {\n        max-width: 600px;\n\n        a {\n            text-decoration: underline;\n            color: inherit;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Terms of service of STRADA                            These Terms of service govern your use of the application                STRADA                        By using the app, you accept these Terms in full. If you disagree with these Terms or any part of these Terms,                you must not use the app.                        Privacy Policy of the app                            Privacy Policy                        License to use            The app is released under the MIT license.            External services            The app uses Google Maps APIs. By using the app, you are bound by Google\\'s Terms of Service:                Google Terms of Service                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TermsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiComponent.html":{"url":"components/UiComponent.html","title":"component - UiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/ui.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                CanComponentDeactivate\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ui\n            \n\n            \n                styleUrls\n                ./ui.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                network\n                            \n                            \n                                numerical\n                            \n                            \n                                pending\n                            \n                            \n                                statistics\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                            \n                                exit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                openSnackBar\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, snackBar: MatSnackBar, dialog: MatDialog, cdr: ChangeDetectorRef, store: Store, scheduler: SchedulerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/ui.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduler\n                                                  \n                                                        \n                                                                    SchedulerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable | boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDialog(data: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:114\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            network\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        network:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numerical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numerical:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statistics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statistics:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { Subscription, Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { CanComponentDeactivate } from '../shared/can-deactivate-guard.service';\nimport { SchedulerService } from './wizard/scheduler.service';\nimport * as fromUi from './models/reducers';\n\nimport { MessageArchivedComponent } from '../shared/message-archived.component';\nimport { InfoDialogComponent } from '../shared/info-dialog.component';\n\n@Component({\n    selector: 'app-ui',\n    templateUrl: './ui.component.html',\n    styleUrls: ['./ui.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UiComponent implements OnInit, OnDestroy, CanComponentDeactivate {\n\n    pending: boolean = false;\n\n    network: boolean = true;\n\n    numerical: boolean = false;\n\n    statistics: boolean = false;\n\n    subscriptions: Subscription[] = [];\n\n    constructor(\n        private router: Router,\n        private snackBar: MatSnackBar,\n        private dialog: MatDialog,\n        private cdr: ChangeDetectorRef,\n        private store: Store,\n        private scheduler: SchedulerService\n    ) { }\n\n    ngOnInit(): void {\n        // Pending state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.pending)).subscribe((pending: boolean) => {\n            this.pending = pending;\n        }));\n        // Error state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.error)).subscribe((error: string) => {\n            if (error) {\n                this.openSnackBar(error);\n            }\n        }));\n        // Panels.\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 0:\n                    this.network = true;\n                    this.numerical = false;\n                    this.statistics = false;\n                    this.cdr.detectChanges();\n                    break;\n                case 4:\n                    this.numerical = true;\n                    this.statistics = false;\n                    this.cdr.detectChanges();\n                    break;\n                case 5:\n                    this.numerical = true;\n                    this.statistics = true;\n                    this.cdr.detectChanges();\n                    break;\n            }\n        }));\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    canDeactivate(): Observable | boolean {\n        return this.openDialog('Are you sure you want to exit the simulation?').pipe(\n            tap((dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.scheduler.reset();\n                }\n            })\n        );\n    }\n\n    reset(): void {\n        this.openDialog('Are you sure you want to reset the simulation?').subscribe(\n            (dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.scheduler.reset();\n                }\n            });\n    }\n\n    exit(): void {\n        this.router.navigate(['/home']);\n    }\n\n    openSnackBar(message: string): void {\n        this.snackBar.openFromComponent(MessageArchivedComponent, {\n            data: message,\n            duration: 5000,\n            panelClass: ['error-snackbar']\n        });\n    }\n\n    openDialog(data: string): Observable {\n        const dialogRef = this.dialog.open(InfoDialogComponent, {\n            width: '250px',\n            data: data,\n            hasBackdrop: true,\n            panelClass: 'info-dialog'\n        });\n\n        return dialogRef.afterClosed();\n    }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        {{ pending }}\n    \n\n\n\n    \n        \n            \n        \n        \n            \n                \n                    \n                        \n                            Network\n                        \n                    \n                    \n                \n                \n                    \n                        \n                            Numerical\n                        \n                    \n                    \n                \n                \n                    \n                        \n                            Statistics\n                        \n                    \n                    \n                \n            \n        \n    \n    \n        \n        \n            Reset\n            Exit\n        \n    \n\n\n\n    \n\n    \n                \n                    ./ui.component.scss\n                \n                @import '../../styles/variables';\n\n.ui-content {\n    min-height: 100%;\n\n    .mat-card {\n        margin: 8px;\n    }\n\n    .actions {\n        margin: 8px;\n\n        button {\n            font-size: 12px;\n            width: 50%;\n        }\n    }\n}\n\n/* MatSnackBar */\n.error-snackbar {\n    text-align: center;\n    font-size: 14px;\n}\n\n.centered {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 9999;\n\n    .message {\n        position: relative;\n        width: 90px;\n        top: 8px;\n        font-size: 14px;\n        text-align: center;\n        color: $secondary-color-dark;\n    }\n}\n\n.ops {\n    opacity :0.4;\n}\n\n/* Time Picker */\n.owl-dialog-container {\n    overflow: hidden;\n\n    .owl-dt-dialog-container {\n        font-size: 14px;\n    }\n\n    .owl-dt-container-control-button {\n        color: $secondary-color;\n    }\n}\n\n.mat-accordion {\n    .mat-expansion-panel {\n        margin: 8px;\n    }\n}   \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ pending }}                                                                                                                                                Network                                                                                                                                                                        Numerical                                                                                                                                                                        Statistics                                                                                                                                        Reset            Exit            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n  Modules\n  UiModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nChartsComponent\n\nChartsComponent\n\nUiModule -->\n\nChartsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nNumericComponent\n\nNumericComponent\n\nUiModule -->\n\nNumericComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nSchedulerService\n\nSchedulerService\n\nUiModule -->\n\nSchedulerService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ChangeOfConditionsComponent\n                            \n                            \n                                ChartsComponent\n                            \n                            \n                                EstimateOfDemandComponent\n                            \n                            \n                                GoogleMapComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                NumericComponent\n                            \n                            \n                                SearchForTheAreaComponent\n                            \n                            \n                                SelectionOfTheAreaComponent\n                            \n                            \n                                SimulationComponent\n                            \n                            \n                                StatisticsComponent\n                            \n                            \n                                UiComponent\n                            \n                            \n                                WeatherComponent\n                            \n                            \n                                WizardComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapService\n                            \n                            \n                                     SchedulerService\n                            \n                            \n                                     WizardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    UiRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiRoutingModule } from './ui-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { StoreModule } from \"@ngrx/store\";\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n\nimport { UiComponent } from './ui.component';\nimport { WizardComponent } from './wizard/wizard.component';\nimport { SearchForTheAreaComponent } from './wizard/search-for-the-area/search-for-the-area.component';\nimport { SelectionOfTheAreaComponent } from './wizard/selection-of-the-area/selection-of-the-area.component';\nimport { EstimateOfDemandComponent } from './wizard/estimate-of-demand/estimate-of-demand.component';\nimport { ChangeOfConditionsComponent } from './wizard/change-of-conditions/change-of-conditions.component';\nimport { SimulationComponent } from './wizard/simulation/simulation.component';\nimport { StatisticsComponent } from './wizard/statistics/statistics.component';\nimport { MapComponent } from './map/map.component';\nimport { GoogleMapComponent } from './map/google-map.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { NumericComponent } from './numeric/numeric.component';\nimport { ChartsComponent } from './charts/charts.component';\n\nimport { WizardService } from './wizard/wizard.service';\nimport { SchedulerService } from './wizard/scheduler.service';\nimport { MapService } from './map/map.service';\nimport { reducers } from './models/reducers';\n\n@NgModule({\n    imports: [\n        UiRoutingModule,\n        SharedModule,\n        StoreModule.forFeature('ui', reducers),\n        OwlDateTimeModule,\n        OwlNativeDateTimeModule\n    ],\n    declarations: [\n        UiComponent,\n        WizardComponent,\n        SearchForTheAreaComponent,\n        SelectionOfTheAreaComponent,\n        EstimateOfDemandComponent,\n        ChangeOfConditionsComponent,\n        SimulationComponent,\n        StatisticsComponent,\n        MapComponent,\n        GoogleMapComponent,\n        WeatherComponent,\n        NumericComponent,\n        ChartsComponent\n    ],\n    providers: [\n        WizardService,\n        SchedulerService,\n        MapService\n    ]\n})\nexport class UiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiRoutingModule.html":{"url":"modules/UiRoutingModule.html","title":"module - UiRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  UiRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { CanDeactivateGuard } from '../shared/can-deactivate-guard.service';\n\nimport { UiComponent } from './ui.component';\n\n@NgModule({\n    imports: [\n        RouterModule.forChild([\n            { path: '', component: UiComponent, pathMatch: 'full', canDeactivate: [CanDeactivateGuard] }\n        ])\n    ],\n    exports: [RouterModule]\n})\nexport class UiRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UiState.html":{"url":"interfaces/UiState.html","title":"interface - UiState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UiState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers.ts\n        \n\n            \n                Description\n            \n            \n                User interface state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        map\n                                \n                                \n                                        wizard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:     fromMap.MapState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromMap.MapState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wizard\n                                    \n                                \n                                \n                                    \n                                        wizard:     fromWizard.WizardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromWizard.WizardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector, MemoizedSelector } from \"@ngrx/store\";\n\nimport * as fromWizard from './reducers/wizard.reducer';\nimport * as fromMap from './reducers/map.reducer';\nimport { Step, Map } from \"./ui-state\";\n\n/**\n * User interface state management.\n */\nexport interface UiState {\n\n    wizard: fromWizard.WizardState;\n    map: fromMap.MapState;\n\n}\n\nexport const reducers: ActionReducerMap = {\n    wizard: fromWizard.wizardReducer,\n    map: fromMap.mapReducer\n};\n\nexport const featureUiState: MemoizedSelector = createFeatureSelector('ui');\n\n/**\n * Exports the wizard state.\n */\nexport const wizardState: MemoizedSelector = createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n);\n\n/**\n * Exports the steps state.\n */\nexport const steps: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getSteps\n);\n\n/**\n * Exports the current step state.\n */\nexport const currentStep: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n);\n\n/**\n * Exports the error state.\n */\nexport const error: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getError\n);\n\n/**\n * Exports the pending state.\n */\nexport const pending: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getPending\n);\n\n/**\n * Exports the map state.\n */\nexport const mapState: MemoizedSelector = createSelector(\n    featureUiState,\n    (state: UiState) => state.map\n);\n\nexport const map: MemoizedSelector = createSelector(\n    mapState,\n    fromMap.getMap\n);\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/weather/weather.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-weather\n            \n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                icon\n                            \n                            \n                                iconContainer\n                            \n                            \n                                time\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                resetConditions\n                            \n                            \n                                sendActions\n                            \n                            \n                                setConditions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                ngOnInit\n                            \n                            \n                                    Abstract\n                                receiveActions\n                            \n                            \n                                    Abstract\n                                sendActions\n                            \n                            \n                                    Abstract\n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, renderer: s/end.html\">Renderer2, store: Store, weather: WeatherService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/weather/weather.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIcon(code: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HTMLImageElement\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetConditions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetConditions(weather: WeatherConditions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                        \n                                                                    WeatherConditions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconContainer:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     any | string\n\n                    \n                \n                    \n                        \n                            Type :     any | string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ElementRef, Renderer2 } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WeatherService } from '../../network/weather/weather.service';\nimport { NetworkService } from '../../network/network.service';\nimport * as fromUi from '../models/reducers';\nimport { WeatherConditions } from '../../network/weather/weather';\nimport { appConfig } from '../../app-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-weather',\n    templateUrl: './weather.component.html',\n    styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent extends BaseComponent implements OnInit, AfterViewInit {\n\n    description: string = '-';\n\n    iconContainer: HTMLElement;\n\n    icon: any;\n\n    time: any | string = '';\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        private store: Store,\n        private weather: WeatherService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    ngAfterViewInit(): void {\n        this.iconContainer = this.elementRef.nativeElement.querySelector('#iconContainer');\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            const weatherConditions = this.weather.getWeatherConditions();\n            switch (currentStep) {\n                case 0:\n                    this.resetConditions();\n                    break;\n                case 3:\n                    this.setConditions(weatherConditions);\n                    break;\n                case 4:\n                    this.resetConditions();\n                    this.setConditions(weatherConditions);\n                    break;\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    setConditions(weather: WeatherConditions): void {\n        this.description = weather.description;\n        this.icon = this.getIcon(weather.icon);\n        this.renderer.appendChild(this.iconContainer, this.icon);\n        this.time = this.network.getTimeString();\n    }\n\n    resetConditions(): void {\n        this.description = '-';\n        if (this.icon) {\n            this.renderer.removeChild(this.iconContainer, this.icon);\n            this.icon = null;\n            this.time = '';\n        }\n    }\n\n    getIcon(code: string): HTMLImageElement {\n        const icon = new Image();\n        if (!!code) {\n            icon.src = appConfig.apis.openWeatherMap.iconUrl + '/' + code + '.png';\n        }\n        return icon;\n    }\n\n}\n\n    \n\n    \n        \n    \n        Weather {{ description | uppercase }}\n        \n        {{ time }}\n    \n\n    \n\n    \n                \n                    ./weather.component.scss\n                \n                .mat-card {\n    .mat-card-content{\n        font-size: 14px;\n        font-weight: 500;\n        height: 50px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Weather {{ description | uppercase }}                {{ time }}    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherConditions.html":{"url":"interfaces/WeatherConditions.html","title":"interface - WeatherConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/weather/weather.ts\n        \n\n            \n                Description\n            \n            \n                Weather conditions data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        rainIntensity\n                                \n                                \n                                            Optional\n                                        snowIntensity\n                                \n                                \n                                            Optional\n                                        visibility\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The code of the icon.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rainIntensity\n                                    \n                                \n                                \n                                    \n                                        rainIntensity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Millimeters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snowIntensity\n                                    \n                                \n                                \n                                    \n                                        snowIntensity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Millimeters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                    \n                                \n                                \n                                    \n                                        visibility:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Meters.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherConditions {\n\n    description: string;\n    /**\n     * The code of the icon.\n     */\n    icon?: string;\n    /**\n     * Meters.\n     */\n    visibility?: number;\n    /**\n     * Millimeters.\n     */\n    rainIntensity?: number;\n    /**\n     * Millimeters.\n     */\n    snowIntensity?: number;\n\n}\n\nexport enum WeatherDescription {\n    clearSky = 'clear sky',\n    fewClouds = 'few clouds',\n    scatteredClouds = 'scattered clouds',\n    brokenClouds = 'broken clouds',\n    showerRain = 'shower rain',\n    rain = 'rain',\n    thunderstorm = 'thunderstorm',\n    snow = 'snow',\n    mist = 'mist',\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherService\n\nWeatherService\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/weather/weather.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     WeatherService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherService } from './weather.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [WeatherService]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Gets the weather data from the Weather or Forecast resources\nand provides reduction factors for graph values based on weather conditions.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                weatherConditions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addWeatherConditions\n                            \n                            \n                                    Private\n                                calcFactor\n                            \n                            \n                                    Public\n                                changeWeather\n                            \n                            \n                                    Public\n                                getFactors\n                            \n                            \n                                    Public\n                                getWeatherConditions\n                            \n                            \n                                    Public\n                                getWeatherData\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Private\n                                toInches\n                            \n                            \n                                    Public\n                                updateWeatherData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, location: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/weather/weather.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addWeatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addWeatherConditions(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calcFactor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcFactor(adjustmentFactorCoefficients: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:114\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adjustmentFactorCoefficients\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeWeather(weather: WeatherConditions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Changes the current weather conditions.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                        \n                                                                    WeatherConditions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The weather conditions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFactors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFactors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:96\n                            \n                        \n\n\n                \n                    \n                            Calculates Weather Adjustment Factors.\n\n\n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    The factor for max flow parameter\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getWeatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getWeatherConditions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     WeatherConditions\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getWeatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getWeatherData(time?: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Gets weather data from the Weather resource. The Forecast resource is called only if the optional parameter 'time' is evaluated.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional parameter for forecasting data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            toInches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toInches(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateWeatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateWeatherData(data: any, time?: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Updates weather conditions with the data obtained from OpenWeatherMap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Weather data\n\n                                                        \n                                                \n                                                \n                                                        time\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional parameter for forecasting data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            weatherConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherConditions:     WeatherConditions\n\n                    \n                \n                    \n                        \n                            Type :     WeatherConditions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { LocationService } from '../../location/location.service';\nimport { WeatherConditions } from './weather';\nimport { round } from '../../utils';\nimport { appConfig } from '../../app-config';\nimport { uiConfig } from '../../ui/ui-config';\n\n/**\n * Gets the weather data from the Weather or Forecast resources\n * and provides reduction factors for graph values based on weather conditions.\n */\n@Injectable() export class WeatherService {\n\n    private weatherConditions: WeatherConditions;\n\n    constructor(private http: HttpClient, private location: LocationService) { }\n\n    public reset(): void {\n        this.weatherConditions = null;\n    }\n\n    public getWeatherConditions(): WeatherConditions {\n        return this.weatherConditions;\n    }\n\n    /**\n     * Gets weather data from the Weather resource. The Forecast resource is called only if the optional parameter 'time' is evaluated.\n     * @param time Optional parameter for forecasting data\n     */\n    public getWeatherData(time?: Date): Observable {\n        const url: string = time ? appConfig.apis.openWeatherMap.forecastUrl : appConfig.apis.openWeatherMap.weatherUrl;\n        const options = {\n            params: new HttpParams()\n                .set('lat', this.location.getLatLng().lat.toString())\n                .set('lon', this.location.getLatLng().lng.toString())\n                .set('units', 'metric')\n                .set('appid', appConfig.apis.openWeatherMap.apiKey)\n        };\n\n        return this.http.get(url, options).pipe(\n            map((response: any) => response),\n            catchError((error: any) => throwError('getWeatherData'))\n        );\n    }\n\n    /**\n     * Updates weather conditions with the data obtained from OpenWeatherMap.\n     * @param data Weather data\n     * @param time Optional parameter for forecasting data\n     */\n    public updateWeatherData(data: any, time?: Date): Observable {\n        if (time != null && data.list.length > 0) {\n            const timezoneOffset = time.getTimezoneOffset() * 60 * 1000; // Timezone offset in milliseconds\n            const utcTime = time.getTime() + timezoneOffset;\n\n            let preDt: number = data.list[0].dt * 1000; // Converts Unix UTC in milliseconds\n            let forecast: any = data.list[0];\n            for (let i = 1; i = utcTime) {\n                    forecast = nextDt - utcTime = 1) {\n            return 1;\n        } else {\n            return round(factor, 2);\n        }\n    }\n\n    private toInches(value: number): number {\n        return value / 10 / 2.54;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardComponent.html":{"url":"components/WizardComponent.html","title":"component - WizardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/wizard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-wizard\n            \n\n            \n                styleUrls\n                ./wizard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stepper\n                            \n                            \n                                wizardForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stepClick\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formSteps\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, wizard: WizardService, scheduler: SchedulerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduler\n                                                  \n                                                        \n                                                                    SchedulerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nstepClick(event: StepperSelectionEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Updates current step and step data.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    StepperSelectionEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                SelectionChange stepper event.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('stepper')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formSteps\n                    \n                \n\n                \n                    \n                        getformSteps()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/wizard.component.ts:24\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatStepper } from '@angular/material';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\n\nimport { WizardService } from './wizard.service';\nimport { SchedulerService } from './scheduler.service';\nimport { pairsValidator } from '../directives/pairs.directive';\nimport { uiConfig } from '../ui-config';\n\n@Component({\n    selector: 'ui-wizard',\n    templateUrl: './wizard.component.html',\n    styleUrls: ['./wizard.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class WizardComponent implements OnInit {\n\n    @ViewChild('stepper') stepper: MatStepper;\n\n    wizardForm: FormGroup;\n\n    get formSteps(): FormArray {\n        return this.wizardForm.get('formSteps') as FormArray;\n    }\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private wizard: WizardService,\n        private scheduler: SchedulerService\n    ) { }\n\n    ngOnInit(): void {\n        // Creates form model.\n        this.wizardForm = this.formBuilder.group({\n            formSteps: this.formBuilder.array([\n                this.formBuilder.group({\n                    address: [''],\n                    center: [null, [Validators.required]]\n                }),\n                this.formBuilder.group({\n                    bounds: [null, [Validators.required]],\n                    time: [null]\n                }),\n                this.formBuilder.group({\n                    odPairs: this.formBuilder.array([], pairsValidator())\n                }),\n                this.formBuilder.group({\n                    odPairs: this.formBuilder.array([]),\n                    weatherConditions: this.formBuilder.group({\n                        description: [null],\n                        icon: [null],\n                        visibility: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.visibility.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ],\n                        rainIntensity: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.rainIntensity.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ],\n                        snowIntensity: [\n                            null,\n                            [Validators.required,\n                            Validators.min(0),\n                            Validators.max(uiConfig.snowIntensity.max),\n                            Validators.pattern('^[0-9]*$')]\n                        ]\n                    })\n                }),\n                this.formBuilder.group({\n                    endSimulation: [false, [Validators.requiredTrue]]\n                }),\n                this.formBuilder.group({})\n            ])\n        }, { updateOn: 'blur' });\n\n        this.wizard.stepper = this.stepper;\n    }\n\n    /**\n     * Updates current step and step data.\n     * @param event SelectionChange stepper event.\n     */\n    stepClick(event: StepperSelectionEvent): void {\n        const index: number = event.previouslySelectedIndex;\n        const nextIndex: number = event.selectedIndex;\n        const data = this.wizardForm.get('formSteps').get([index]).value;\n\n        if (nextIndex > index) {\n            this.stepper.selected.completed = true;\n            switch (nextIndex) {\n                case 2:\n                    this.scheduler.scheduleNetwork(data, index, nextIndex);\n                    break;\n                case 3:\n                    this.scheduler.scheduleDemand(data, index, nextIndex);\n                    break;\n                case 4:\n                    this.scheduler.scheduleSimulation(data, index, nextIndex);\n                    break;\n                default:\n                    this.wizard.goOn(\n                        data,\n                        index,\n                        nextIndex\n                    );\n            }\n        }\n    }\n\n    exit(): void {\n        if (this.stepper.selectedIndex == 5) {\n            this.router.navigate(['/home']);\n        }\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        Search for the area\n                    \n                    \n                \n                \n                    \n                        Selection of the area\n                    \n                    \n                \n                \n                    \n                        Estimate of demand\n                    \n                    \n                \n                \n                    \n                        Change of conditions\n                    \n                    \n                \n                \n                    \n                        Simulation\n                    \n                    \n                \n                \n                    \n                        Statistics\n                    \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./wizard.component.scss\n                \n                .wizard-content {\n    .navigation {\n        text-align: right;\n        margin-top: 16px;\n\n        .mat-button {\n            padding-right: 16px;\n            padding-left: 8px;\n        }\n        .mat-raised-button {\n            padding-left: 16px;\n            padding-right: 8px;\n        }\n    }\n    \n    .full-width {\n        width: 100%;\n    }\n\n    .mat-button,\n    .mat-raised-button {\n        font-size: 12px;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Search for the area                                                                                                                    Selection of the area                                                                                                                    Estimate of demand                                                                                                                    Change of conditions                                                                                                                    Simulation                                                                                                                    Statistics                                                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'ChartsComponent', 'selector': 'ui-charts'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'NumericComponent', 'selector': 'ui-numeric'},{'name': 'PrivacyComponent', 'selector': 'app-privacy'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WizardService.html":{"url":"injectables/WizardService.html","title":"injectable - WizardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WizardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/wizard/wizard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                stepper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                goOn\n                            \n                            \n                                    Public\n                                putInError\n                            \n                            \n                                    Public\n                                putOnHold\n                            \n                            \n                                    Public\n                                removeFromError\n                            \n                            \n                                    Public\n                                removeFromWaiting\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                updateStep\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goOn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goOn(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putInError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putInError(error: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putOnHold\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putOnHold(message?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFromError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFromError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFromWaiting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFromWaiting()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateStep(data: any, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { MatStepper } from \"@angular/material\";\n\nimport { Store, select } from '@ngrx/store';\n\nimport * as fromUi from '../models/reducers';\nimport { WizardActionTypes } from '../models/actions/wizard.actions';\nimport { WizardState } from \"../models/reducers/wizard.reducer\";\n\n@Injectable() export class WizardService {\n\n    public state: WizardState;\n\n    public stepper: MatStepper;\n\n    constructor(private store: Store) {\n        this.store.pipe(select(fromUi.wizardState)).subscribe((state: WizardState) => {\n            this.state = state;\n        });\n    }\n\n    public reset(): void {\n        // Stepper.\n        this.stepper.reset();\n        // UI state.\n        this.store.dispatch({\n            type: WizardActionTypes.Reset\n        });\n    }\n\n    public updateStep(data: any, index: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepChanged,\n            payload: { step: { data: data }, index: index }\n        });\n    }\n\n    public putInError(error: string): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepError,\n            payload: error\n        });\n    }\n\n    public putOnHold(message?: string): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: message || true\n        });\n    }\n\n    public removeFromError(): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepError,\n            payload: null\n        });\n    }\n\n    public removeFromWaiting(): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: false\n        });\n    }\n\n    public goOn(data: any, index: number, nextIndex: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.GoOn,\n            payload: { step: { data: data }, index: index, nextIndex: nextIndex }\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardState.html":{"url":"interfaces/WizardState.html","title":"interface - WizardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers/wizard.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Wizard state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentStep\n                                \n                                \n                                        error\n                                \n                                \n                                        pending\n                                \n                                \n                                        steps\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentStep\n                                    \n                                \n                                \n                                    \n                                        currentStep:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:     Step[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Step[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import deepClone from 'mout/lang/deepClone';\n\nimport { Step, STEPS } from \"../ui-state\";\nimport { WizardActions, WizardActionTypes } from '../actions/wizard.actions';\n\n/**\n * Wizard state management.\n */\nexport interface WizardState {\n\n    steps: Step[];\n    currentStep: number;\n    error: string | null;\n    pending: string | boolean;\n\n}\n\nexport const initialWizardState: WizardState = {\n    steps: STEPS,\n    currentStep: 0,\n    error: null,\n    pending: false\n};\n\n/**\n * ngrx: wizard Reducer.\n */\nexport function wizardReducer(state: WizardState = deepClone(initialWizardState), action: WizardActions): WizardState {\n    switch (action.type) {\n        case WizardActionTypes.StepChanged: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: deepClone(state.steps),\n                error: null,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepError: {\n            return {\n                ...state,\n                error: action.payload,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepPending: {\n            return {\n                ...state,\n                error: null,\n                pending: action.payload\n            };\n        }\n        case WizardActionTypes.GoOn: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: deepClone(state.steps),\n                currentStep: action.payload.nextIndex\n            };\n        }\n        case WizardActionTypes.Reset: {\n            return deepClone(initialWizardState);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getSteps: (state: WizardState) => Step[] = (state: WizardState) => state.steps;\n\nexport const getCurrentStep: (state: WizardState) => number = (state: WizardState) => state.currentStep;\n\nexport const getError: (state: WizardState) => string = (state: WizardState) => state.error;\n\nexport const getPending: (state: WizardState) => string | boolean = (state: WizardState) => state.pending;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 7.0.4\n        \n            @angular/common : 7.0.4\n        \n            @angular/compiler : 7.0.4\n        \n            @angular/core : 7.0.4\n        \n            @angular/forms : 7.0.4\n        \n            @angular/http : 7.0.4\n        \n            @angular/platform-browser : 7.0.4\n        \n            @angular/platform-browser-dynamic : 7.0.4\n        \n            @angular/router : 7.0.4\n        \n            @angular/material : 7.0.4\n        \n            @angular/cdk : 7.0.4\n        \n            @angular/flex-layout : 7.0.0-beta.19\n        \n            @ngrx/store : 6.1.2\n        \n            @turf/area : 6.0.1\n        \n            @turf/helpers : 6.1.4\n        \n            @turf/invariant : 6.1.2\n        \n            @turf/bearing : 6.0.1\n        \n            @turf/distance : 6.0.1\n        \n            @turf/transform-translate : 5.1.5\n        \n            @turf/centroid : 6.0.2\n        \n            @turf/center : 6.0.1\n        \n            ng-pick-datetime : 7.0.0\n        \n            mout : 1.1.0\n        \n            everpolate : 0.0.3\n        \n            chart.js : 2.7.3\n        \n            chartjs-plugin-annotation : 0.5.7\n        \n            web-animations-js : 2.3.1\n        \n            hammerjs : 2.0.8\n        \n            animejs : 2.2.0\n        \n            qs : 6.5.2\n        \n            core-js : 2.5.7\n        \n            rxjs : 6.3.3\n        \n            zone.js : 0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Control   (src/.../clock.service.ts)\n                        \n                        \n                            MapActionTypes   (src/.../map.actions.ts)\n                        \n                        \n                            PathType   (src/.../graph.ts)\n                        \n                        \n                            SimulationActionTypes   (src/.../simulation.actions.ts)\n                        \n                        \n                            WeatherDescription   (src/.../weather.ts)\n                        \n                        \n                            WizardActionTypes   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/simulation/clock.service.ts\n    \n        \n            \n                \n                    \n                        \n                        Control\n                    \n                \n                        \n                            \n                                 start\n                            \n                        \n                        \n                            \n                                Value : start\n                            \n                        \n                        \n                            \n                                 pause\n                            \n                        \n                        \n                            \n                                Value : pause\n                            \n                        \n                        \n                            \n                                 stop\n                            \n                        \n                        \n                            \n                                Value : stop\n                            \n                        \n                        \n                            \n                                 step\n                            \n                        \n                        \n                            \n                                Value : step\n                            \n                        \n                        \n                            \n                                 slow\n                            \n                        \n                        \n                            \n                                Value : slow\n                            \n                        \n                        \n                            \n                                 quick\n                            \n                        \n                        \n                            \n                                Value : quick\n                            \n                        \n            \n        \n\n    src/app/ui/models/actions/map.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MapActionTypes\n                    \n                \n                    \n                        \n                            ngrx: map Actions.\n\n                        \n                    \n                        \n                            \n                                 MapChanged\n                            \n                        \n                        \n                            \n                                Value : [Map] Map Changed\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value : [Map] Reset\n                            \n                        \n            \n        \n\n    src/app/network/graph.ts\n    \n        \n            \n                \n                    \n                        \n                        PathType\n                    \n                \n                        \n                            \n                                 distance\n                            \n                        \n                        \n                            \n                                Value : distance\n                            \n                        \n                        \n                            \n                                 duration\n                            \n                        \n                        \n                            \n                                Value : duration\n                            \n                        \n            \n        \n\n    src/app/simulation/models/actions/simulation.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SimulationActionTypes\n                    \n                \n                    \n                        \n                            ngrx: simulation Actions.\n\n                        \n                    \n                        \n                            \n                                 SimulationChanged\n                            \n                        \n                        \n                            \n                                Value : [Simulation] Simulation Changed\n                            \n                        \n                        \n                            \n                                 SimulationEnded\n                            \n                        \n                        \n                            \n                                Value : [Simulation] Simulation Ended\n                            \n                        \n                        \n                            \n                                 PeriodsChanged\n                            \n                        \n                        \n                            \n                                Value : [Simulation] Periods Changed\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value : [Simulation] Reset\n                            \n                        \n            \n        \n\n    src/app/network/weather/weather.ts\n    \n        \n            \n                \n                    \n                        \n                        WeatherDescription\n                    \n                \n                        \n                            \n                                 clearSky\n                            \n                        \n                        \n                            \n                                Value : clear sky\n                            \n                        \n                        \n                            \n                                 fewClouds\n                            \n                        \n                        \n                            \n                                Value : few clouds\n                            \n                        \n                        \n                            \n                                 scatteredClouds\n                            \n                        \n                        \n                            \n                                Value : scattered clouds\n                            \n                        \n                        \n                            \n                                 brokenClouds\n                            \n                        \n                        \n                            \n                                Value : broken clouds\n                            \n                        \n                        \n                            \n                                 showerRain\n                            \n                        \n                        \n                            \n                                Value : shower rain\n                            \n                        \n                        \n                            \n                                 rain\n                            \n                        \n                        \n                            \n                                Value : rain\n                            \n                        \n                        \n                            \n                                 thunderstorm\n                            \n                        \n                        \n                            \n                                Value : thunderstorm\n                            \n                        \n                        \n                            \n                                 snow\n                            \n                        \n                        \n                            \n                                Value : snow\n                            \n                        \n                        \n                            \n                                 mist\n                            \n                        \n                        \n                            \n                                Value : mist\n                            \n                        \n            \n        \n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActionTypes\n                    \n                \n                    \n                        \n                            ngrx: wizard Actions.\n\n                        \n                    \n                        \n                            \n                                 StepChanged\n                            \n                        \n                        \n                            \n                                Value : [Wizard] Step Changed\n                            \n                        \n                        \n                            \n                                 StepError\n                            \n                        \n                        \n                            \n                                Value : [Wizard] Step Error\n                            \n                        \n                        \n                            \n                                 StepPending\n                            \n                        \n                        \n                            \n                                Value : [Wizard] Step Pending\n                            \n                        \n                        \n                            \n                                 GoOn\n                            \n                        \n                        \n                            \n                                Value : [Wizard] Go On\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value : [Wizard] Reset\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            formatTimeFromMilliseconds   (src/.../utils.ts)\n                        \n                        \n                            formatTimeFromSeconds   (src/.../utils.ts)\n                        \n                        \n                            getScript   (src/.../utils.ts)\n                        \n                        \n                            loadScripts   (src/.../utils.ts)\n                        \n                        \n                            mapReducer   (src/.../map.reducer.ts)\n                        \n                        \n                            pairsValidator   (src/.../pairs.directive.ts)\n                        \n                        \n                            round   (src/.../utils.ts)\n                        \n                        \n                            simulationReducer   (src/.../simulation.reducer.ts)\n                        \n                        \n                            toSeconds   (src/.../utils.ts)\n                        \n                        \n                            wizardReducer   (src/.../wizard.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            formatTimeFromMilliseconds\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatTimeFromMilliseconds(ms)\n                    \n                \n\n\n\n\n                \n                    \n                            Format time to M:SS.mmm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ms\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Milliseconds\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatTimeFromSeconds\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatTimeFromSeconds(s)\n                    \n                \n\n\n\n\n                \n                    \n                            Format time to M:SS\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        s\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Seconds\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toSeconds\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoSeconds(value)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getScript\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScript(src)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScripts\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScripts()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            round\n                            \n                            \n                        \n                    \n                \n                \n                    \nround(value, decimals?)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        decimals\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/ui/models/reducers/map.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapReducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: map Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/ui/directives/pairs.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pairsValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \npairsValidator()\n                    \n                \n\n\n\n\n            \n        \n\n    src/app/simulation/models/reducers/simulation.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            simulationReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsimulationReducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: simulation Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            wizardReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nwizardReducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: wizard Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSTRADA\n\n\nSTRADA (Simulation of TRAffic DAta) is an urban traffic web simulator that uses data in real time.\n\n\nProject developed for the dissertation of my bachelor's degree in computer engineering.\n\nDocumentation\nOfficial docs: STRADA documentation\nDevelopment\nRequirements\n\nNode.js and npm\nUpdate npm: npm install npm@latest -g\nAngular CLI: npm install -g @angular/cli\nFirebase\nCreate a Firebase project in the Firebase console\nFirebase CLI: npm install -g firebase-tools\nLogin: firebase login\n\n\nGoogle Maps \nGet your API keys: https://cloud.google.com/maps-platform/\nEnable Maps JavaScript API, Geocoding API and Directions API\n\n\nOpenWeatherMap\nGet your API key: https://openweathermap.org/\n\n\n\nPrerequisites\n\nUpdate .firebaserc file\nUpdate src/app/app-config.json file\nUpdate functions/src/functions-config.json file\n\nFirebase Functions\ncd functions\nnpm install\nnpm run serve:devApp\nnpm install\nnpm startTest\nnpm testLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Roberto Simonetti\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DemandModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NetworkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimulationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nPrivacyComponent\n\nPrivacyComponent\n\nAppModule -->\n\nPrivacyComponent->AppModule\n\n\n\n\n\nTermsComponent\n\nTermsComponent\n\nAppModule -->\n\nTermsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\nDemandService\n\nDemandService\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nClockService\n\nClockService\n\nSimulationModule -->\n\nClockService->SimulationModule\n\n\n\n\n\nSimulationService\n\nSimulationService\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nChartsComponent\n\nChartsComponent\n\nUiModule -->\n\nChartsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nNumericComponent\n\nNumericComponent\n\nUiModule -->\n\nNumericComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nSchedulerService\n\nSchedulerService\n\nUiModule -->\n\nSchedulerService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    21 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    23 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EnumValueType   (src/.../utils.ts)\n                        \n                        \n                            MapActions   (src/.../map.actions.ts)\n                        \n                        \n                            SimulationActions   (src/.../simulation.actions.ts)\n                        \n                        \n                            WizardActions   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/utils.ts\n    \n        \n            \n                \n                    \n                        \n                        EnumValueType\n                    \n                \n                \n                    \n                        EnumValueType:     string | number\n\n                    \n                \n            \n        \n\n    src/app/ui/models/actions/map.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MapActions\n                    \n                \n                \n                    \n                        MapActions:     MapChanged | Reset\n\n                    \n                \n            \n        \n\n    src/app/simulation/models/actions/simulation.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SimulationActions\n                    \n                \n                \n                    \n                        SimulationActions:     SimulationChanged | SimulationEnded | PeriodsChanged | Reset\n\n                    \n                \n            \n        \n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActions\n                    \n                \n                \n                    \n                        WizardActions:     StepChanged | StepError | StepPending | GoOn | Reset\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            busiestChartOptions   (src/.../charts-config.ts)\n                        \n                        \n                            busiestColor   (src/.../charts-config.ts)\n                        \n                        \n                            currentStep   (src/.../reducers.ts)\n                        \n                        \n                            end   (src/.../reducers.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.test.ts)\n                        \n                        \n                            error   (src/.../reducers.ts)\n                        \n                        \n                            featureSimulationState   (src/.../reducers.ts)\n                        \n                        \n                            featureUiState   (src/.../reducers.ts)\n                        \n                        \n                            getCurrentStep   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getEnd   (src/.../simulation.reducer.ts)\n                        \n                        \n                            getError   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getMap   (src/.../map.reducer.ts)\n                        \n                        \n                            getPending   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getPeriods   (src/.../simulation.reducer.ts)\n                        \n                        \n                            getSimulation   (src/.../simulation.reducer.ts)\n                        \n                        \n                            getSteps   (src/.../wizard.reducer.ts)\n                        \n                        \n                            HOME_TRANSITION   (src/.../home.transition.ts)\n                        \n                        \n                            initialMapState   (src/.../map.reducer.ts)\n                        \n                        \n                            initialSimulationState   (src/.../simulation.reducer.ts)\n                        \n                        \n                            initialWizardState   (src/.../wizard.reducer.ts)\n                        \n                        \n                            map   (src/.../reducers.ts)\n                        \n                        \n                            mapState   (src/.../reducers.ts)\n                        \n                        \n                            mapStyle   (src/.../map.style.ts)\n                        \n                        \n                            materialModules   (src/.../material.module.ts)\n                        \n                        \n                            pending   (src/.../reducers.ts)\n                        \n                        \n                            periods   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            sharedModules   (src/.../shared.module.ts)\n                        \n                        \n                            simulation   (src/.../reducers.ts)\n                        \n                        \n                            simulationState   (src/.../reducers.ts)\n                        \n                        \n                            steps   (src/.../reducers.ts)\n                        \n                        \n                            STEPS   (src/.../ui-state.ts)\n                        \n                        \n                            trafficChartOptions   (src/.../charts-config.ts)\n                        \n                        \n                            uiConfig   (src/.../ui-config.ts)\n                        \n                        \n                            wizardState   (src/.../reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/charts/charts-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            busiestChartOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestChartOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    legend: {\n        display: true\n    },\n    title: {\n        display: true\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n        xAxes: [{\n            id: 'x-axis-0',\n            type: 'category',\n            scaleLabel: {\n                display: true,\n                labelString: 'Time'\n            },\n            ticks: {\n                beginAtZero: true\n            }\n        }],\n        yAxes: [{\n            id: 'y-axis-0',\n            type: 'linear',\n            ticks: {\n                stepSize: 10\n            }\n        }]\n    },\n    annotation: {\n        drawTime: 'afterDatasetsDraw',\n        annotations: []\n    }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            busiestColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        busiestColor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '#63a4ff'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trafficChartOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trafficChartOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    legend: {\n        display: false\n    },\n    title: {\n        display: true\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n        xAxes: [{\n            scaleLabel: {\n                display: true,\n                labelString: 'Time (s)'\n            },\n            ticks: {\n                beginAtZero: true\n            }\n        }],\n        yAxes: [{\n            display: true,\n            maxBarThickness: 40\n        }]\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            currentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentStep:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n)\n                        \n                    \n\n                \n                    \n                        Exports the current step state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getError\n)\n                        \n                    \n\n                \n                    \n                        Exports the error state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featureUiState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        featureUiState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createFeatureSelector('ui')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    mapState,\n    fromMap.getMap\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureUiState,\n    (state: UiState) => state.map\n)\n                        \n                    \n\n                \n                    \n                        Exports the map state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getPending\n)\n                        \n                    \n\n                \n                    \n                        Exports the pending state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    wizard: fromWizard.wizardReducer,\n    map: fromMap.mapReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        steps:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getSteps\n)\n                        \n                    \n\n                \n                    \n                        Exports the steps state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n)\n                        \n                    \n\n                \n                    \n                        Exports the wizard state.\n\n                    \n                \n\n            \n        \n\n    src/app/simulation/models/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        end:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    simulationState,\n    fromSimulation.getEnd\n)\n                        \n                    \n\n                \n                    \n                        Exports the end state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featureSimulationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        featureSimulationState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createFeatureSelector('simulation')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            periods\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        periods:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    simulationState,\n    fromSimulation.getPeriods\n)\n                        \n                    \n\n                \n                    \n                        Exports the periods state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    simulation: fromSimulation.simulationReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulation:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    simulationState,\n    fromSimulation.getSimulation\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            simulationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        simulationState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureSimulationState,\n    (state: SimulationState) => state.simulation\n)\n                        \n                    \n\n                \n                    \n                        Exports the simulation state.\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    testing: false,\n    functions: {\n        networkData: {\n            url: 'https://us-central1-' + appConfig.firebase.projectId + '.cloudfunctions.net/networkData'\n        },\n        trafficData: {\n            url: 'https://us-central1-' + appConfig.firebase.projectId + '.cloudfunctions.net/trafficData'\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    testing: false,\n    functions: {\n        networkData: {\n            url: 'http://localhost:4201/' + appConfig.firebase.projectId + '/us-central1/networkData'\n        },\n        trafficData: {\n            url: 'http://localhost:4201/' + appConfig.firebase.projectId + '/us-central1/trafficData'\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    testing: true,\n    functions: {\n        networkData: {\n            url: ''\n        },\n        trafficData: {\n            url: ''\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getCurrentStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.currentStep\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getError:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.error\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getPending:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.pending\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSteps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getSteps:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.steps\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialWizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialWizardState:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    steps: STEPS,\n    currentStep: 0,\n    error: null,\n    pending: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/simulation/models/reducers/simulation.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getEnd:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : (state: SimulationState) => state.end\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPeriods\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getPeriods:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : (state: SimulationState) => state.periods\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSimulation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getSimulation:     Simulation\n\n                    \n                \n                    \n                        \n                            Type :     Simulation\n\n                        \n                    \n                    \n                        \n                            Default value : (state: SimulationState) => state.simulation\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialSimulationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialSimulationState:     SimulationState\n\n                    \n                \n                    \n                        \n                            Type :     SimulationState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    simulation: null,\n    end: false,\n    periods: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers/map.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getMap:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : (state: MapState) => state.map\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialMapState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialMapState:     MapState\n\n                    \n                \n                    \n                        \n                            Type :     MapState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    map: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/home/home.transition.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HOME_TRANSITION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HOME_TRANSITION:     AnimationTriggerMetadata\n\n                    \n                \n                    \n                        \n                            Type :     AnimationTriggerMetadata\n\n                        \n                    \n                    \n                        \n                            Default value : trigger('homeTransition', [\n    transition('void => *', [\n        style({\n            opacity: 0\n        }),\n        animate('500ms 0ms ease-in',\n            style({\n                opacity: 1\n            })\n        )\n    ])\n])\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/map/map.style.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapStyle:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    }\n]\n                        \n                    \n\n                \n                    \n                        Styled Maps: https://developers.google.com/maps/documentation/javascript/styling\n\n                    \n                \n\n            \n        \n\n    src/app/shared/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        materialModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatTableModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sharedModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sharedModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/ui-state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STEPS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        STEPS:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        Initial steps.\n\n                    \n                \n\n            \n        \n\n    src/app/ui/ui-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uiConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uiConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    /**\n     * Initial map.\n     */\n    map: {\n        center: { lat: 41.910943, lng: 12.476358 },\n        zoom: 4\n    },\n    /**\n     * Time of simulation limit in hours.\n     */\n    timeLimit: 24,\n    /**\n     * Area limit in hectares.\n     */\n    areaMaxLimit: 30,\n    areaMinLimit: 3,\n    links: {\n        baseColor: '#babdbe',\n        noTrafficColor: '#76d219',\n        moderateTrafficColor: '#d27519',\n        heavyTrafficColor: '#d2191a'\n    },\n    /**\n     * Minimum edge distance for traffic data.\n     */\n    minDistance: 20,\n    /**\n     * Minimum edge duration for traffic data.\n     */\n    minDuration: 2,\n    /**\n     * Maximum number of O/D pairs that the user can select.\n     */\n    maxOdPairs: 5,\n    /**\n     * The number of shortest paths to compute.\n     */\n    k: 3,\n    /**\n     * Multinomial logit parameter.\n     */\n    theta: 2,\n    /**\n     * Minimum spacing between subsequent vehicles.\n     */\n    sp: 5,\n    /**\n     * Shortest paths.\n     */\n    paths: {\n        /**\n         * Highly, Medium, Poorly\n         */\n        colors: [\n            '#004ba0',\n            '#1976d2',\n            '#63a4ff'\n        ]\n    },\n    /**\n     * Maximum No. vehicles for O/D pair.\n     */\n    maxDemand: 10000,\n    /**\n     * Weather Adjustment Factor Coefficients.\n     * \"Traffic Analysis Toolbox. Volume XI: Weather and Traffic Analysis, Modeling and Simulation\"\n     */\n    adjustmentFactorCoefficients: {\n        maxFlow: [0.91, 0.009, -0.404, -1.455, 0, 0]\n    },\n    /**\n     * Visibility (m).\n     */\n    visibility: {\n        max: 10000,\n        default: 10000 // Normal value\n    },\n    /**\n     * Rain rating (mm).\n     */\n    rainIntensity: {\n        max: 70\n    },\n    /**\n     * Snow rating (mm).\n     */\n    snowIntensity: {\n        max: 20\n    },\n    weatherIcons: ['01d', '02d', '03d', '04d', '09d', '10d', '11d', '13d', '50d'],\n    /**\n     * Minimum fraction of the capacity of the moderate traffic level.\n     */\n    moderateTraffic: 0.25,\n    /**\n     * Minimum fraction of the capacity of the heavy traffic level.\n     */\n    heavyTraffic: 0.75,\n    /**\n     * Simulated time interval (ms).\n     */\n    simulatedTimeInterval: 500,\n    timeIntervalIncrement: 100,\n    timeIntervalDecrement: 100,\n    /**\n     * Maximum time interval in seconds for LTM.\n     */\n    maxTimeInterval: 10\n}\n                        \n                    \n\n                \n                    \n                        User interface configuration.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
