var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.535,1,1.179]],["body/components/AppComponent.html",[0,0.995,1,2.119,2,0.307,3,0.239,4,1.684,5,1.684,6,1.684,7,0.172,8,4.001,9,1.684,10,2.889,11,2.15,12,5.941,13,2.477,14,5.941,15,2.477,16,5.941,17,0.286,18,0.016,19,0.643,20,0.194,21,0.009,22,4.605,23,1.149,24,2.068,25,1.538,26,1.981,27,2.518,28,1.684,29,1.093,30,1.684,31,1.417,32,1.773,33,1.198,34,1.684,35,1.417,36,1.611,37,1.684,38,1.417,39,1.684,40,1.417,41,1.479,42,2.161,43,1.359,44,1.684,45,1.417,46,1.684,47,1.417,48,2.009,49,1.417,50,1.684,51,1.684,52,1.417,53,1.611,54,2.161,55,1.417,56,1.543,57,1.417,58,1.684,59,1.417,60,1.684,61,1.359,62,1.684,63,1.417,64,1.684,65,1.417,66,1.684,67,0.012,68,0.012]],["title/modules/AppModule.html",[69,0.956,70,2.728]],["body/modules/AppModule.html",[1,2.334,2,0.209,3,0.209,7,0.15,11,1.187,17,0.481,18,0.017,19,0.562,20,0.228,21,0.008,23,1.004,43,2.072,67,0.011,68,0.011,69,1.35,70,5.595,71,1.859,72,3.134,73,3.134,74,2.445,75,3.497,76,3.497,77,3.497,78,3.497,79,4.624,80,4.624,81,4.624,82,4.624,83,3.699,84,4.624,85,2.268,86,0.963,87,1.859,88,4.045,89,2.499,90,5.438,91,5.438,92,4.215,93,2.866,94,5.438,95,4.045,96,3.497,97,1.539,98,3.497,99,3.136,100,3.497,101,3.497,102,4.045,103,3.497,104,4.045,105,4.045,106,4.045,107,4.045,108,4.215,109,4.045,110,4.045,111,4.045,112,4.045,113,4.045,114,4.045,115,2.318,116,2.064]],["title/classes/AppPreloadingStrategy.html",[21,0.008,117,2.728]],["body/classes/AppPreloadingStrategy.html",[2,0.274,3,0.274,7,0.197,17,0.399,18,0.016,20,0.222,21,0.013,29,0.974,67,0.013,68,0.013,117,4.58,118,4.58,119,5.631,120,4.579,121,1.819,122,6.031,123,0.501,124,1.605,125,6.464,126,4.268,127,7.265,128,3.56,129,0.811,130,5.297,131,1.261,132,0.7,133,1.261,134,1.189,135,3.997,136,2.859,137,2.562,138,5.297,139,5.297,140,5.297]],["title/modules/AppRoutingModule.html",[69,0.956,79,2.523]],["body/modules/AppRoutingModule.html",[0,0.707,2,0.263,3,0.263,7,0.189,11,1.493,17,0.455,18,0.017,19,0.707,20,0.264,21,0.01,43,1.851,67,0.013,68,0.013,69,1.263,74,2.025,79,4.132,89,2.898,103,4.397,117,4.855,118,3.604,119,4.888,122,4.397,126,3.926,136,2.746,141,4.397,142,4.467,143,5.087,144,1.493,145,3.866,146,6.305,147,5.924,148,4.397,149,4.397,150,2.596,151,5.087,152,5.087,153,1.625,154,2.915,155,5.087]],["title/classes/BaseComponent.html",[21,0.008,156,2.206]],["body/classes/BaseComponent.html",[0,1.002,2,0.226,3,0.226,7,0.162,17,0.353,18,0.017,19,0.607,20,0.183,21,0.014,33,1.481,48,1.751,67,0.012,68,0.012,121,1.61,123,0.413,124,1.42,129,1.104,132,0.577,134,1.293,137,2.112,156,3.277,157,3.774,158,1.52,159,7.348,160,3.748,161,2.539,162,4.52,163,1.099,164,4.359,165,3.879,166,2.695,167,4.436,168,4.436,169,4.436,170,1.179,171,1.084,172,4.366,173,4.366,174,1.736,175,4.366,176,4.366,177,4.406,178,2.695,179,4.436,180,4.366,181,4.366,182,3.088,183,3.385,184,3.385]],["title/interfaces/CanComponentDeactivate.html",[185,1.179,186,2.523]],["body/interfaces/CanComponentDeactivate.html",[2,0.276,3,0.276,7,0.199,17,0.433,18,0.017,19,0.743,20,0.273,21,0.011,67,0.013,68,0.013,116,2.728,121,1.505,123,0.506,128,3.317,132,0.706,134,0.983,135,3.725,136,2.885,137,2.586,163,1.249,185,1.99,186,4.59,187,4.144,188,3.266,189,4.144,190,5.38,191,1.908,192,4.621,193,1.782,194,3.266,195,4.621,196,5.619]],["title/injectables/CanDeactivateGuard.html",[191,1.13,194,2.352]],["body/injectables/CanDeactivateGuard.html",[0,0.726,2,0.27,3,0.27,7,0.194,17,0.428,18,0.017,19,0.726,20,0.269,21,0.011,29,0.961,67,0.013,68,0.013,116,2.666,121,1.471,123,0.494,124,1.591,129,0.8,131,1.244,132,0.69,133,1.244,134,1.179,135,3.673,136,2.82,137,2.527,185,1.6,186,4.738,187,4.969,188,3.916,189,4.05,190,5.257,191,2.036,192,4.517,193,1.742,194,3.916,195,5.541,196,5.541,197,5.225]],["title/components/ChangeOfConditionsComponent.html",[0,0.535,31,1.179]],["body/components/ChangeOfConditionsComponent.html",[0,0.955,1,1.249,2,0.283,3,0.211,4,1.484,5,1.484,6,1.484,7,0.152,9,1.484,10,2.853,11,1.935,13,2.281,15,2.281,17,0.338,18,0.016,19,0.567,20,0.171,21,0.008,23,1.013,24,1.904,25,1.416,26,1.824,27,2.398,28,1.484,29,1.006,30,1.484,31,2.018,32,1.771,33,1.871,34,1.484,35,1.249,36,1.421,37,1.484,38,1.249,39,1.484,40,1.249,41,1.304,42,1.99,43,1.198,44,1.484,45,1.249,46,1.484,47,1.249,48,1.889,49,1.249,50,1.484,51,1.484,52,1.249,53,1.421,54,1.99,55,1.249,56,1.361,57,1.249,58,1.484,59,1.249,60,1.484,61,1.198,62,1.484,63,1.249,64,1.484,65,1.249,66,1.484,67,0.011,68,0.011,121,1.54,123,0.624,124,1.358,129,1.009,132,0.723,134,0.751,161,2.456,166,2.624,174,1.248,198,5.942,199,5.328,200,3.528,201,2.646,202,5.47,203,5.47,204,3.938,205,4.054,206,1.469,207,5.47,208,4.081,209,1.302,210,4.081,211,2.082]],["title/classes/Clock.html",[21,0.008,212,2.985]],["body/classes/Clock.html",[2,0.315,3,0.315,7,0.227,18,0.016,20,0.255,21,0.014,67,0.014,68,0.014,212,5.445,213,5.267]],["title/modules/DemandModule.html",[69,0.956,80,2.523]],["body/modules/DemandModule.html",[2,0.284,3,0.284,7,0.204,17,0.438,18,0.016,19,0.764,20,0.277,21,0.011,23,1.365,67,0.014,68,0.014,69,1.642,71,2.527,72,3.374,73,2.805,74,2.823,80,5.009,85,2.757,86,1.309,87,2.527,89,3.039,214,4.753,215,4.753,216,4.67,217,5.498,218,5.498]],["title/injectables/DemandService.html",[191,1.13,216,2.352]],["body/injectables/DemandService.html",[2,0.285,3,0.285,7,0.205,17,0.341,18,0.016,19,0.768,20,0.232,21,0.011,36,2.309,67,0.014,68,0.014,86,1.754,123,0.523,124,1.646,129,0.846,134,1.016,158,1.923,174,1.513,191,2.086,216,4.051,219,4.776,220,3.799,221,3.579,222,2.901,223,4.698,224,2,225,5.524]],["title/classes/Edge.html",[21,0.008,226,1.965]],["body/classes/Edge.html",[2,0.128,3,0.241,7,0.092,17,0.153,18,0.017,20,0.25,21,0.012,25,0.989,29,0.456,67,0.008,68,0.008,115,1.422,123,0.235,124,0.948,129,1.088,131,0.591,132,0.929,133,0.591,134,1.143,144,0.728,145,2.514,153,1.22,158,0.864,163,0.734,170,0.67,171,1.299,174,1.194,185,1.17,193,0.827,201,1.848,206,0.591,209,1.85,220,1.422,221,1.339,222,1.671,224,2.235,226,3.428,227,1.422,228,2.668,229,2.997,230,2.668,231,3.824,232,3.195,233,3.675,234,3.417,235,3.552,236,2.997,237,3.417,238,3.417,239,3.417,240,3.236,241,3.585,242,3.195,243,3.195,244,2.334,245,3.82,246,2.482,247,2.482,248,2.482,249,3.644,250,2.334,251,2.482,252,2.189,253,2.482,254,2.334,255,2.334,256,2.334,257,1.755,258,2.482,259,2.482,260,2.482,261,2.482,262,2.482,263,2.482,264,2.668,265,2.334,266,2.189,267,2.668,268,1.516,269,1.516,270,1.516,271,1.516,272,1.422,273,1.516,274,1.266,275,1.412,276,1.516,277,2.823,278,1.516,279,1.516,280,1.516,281,1.339,282,1.422,283,1.516,284,1.516,285,1.422,286,1.422,287,2.668,288,1.266,289,1.422,290,1.516,291,1.516,292,1.516,293,1.516,294,1.422,295,3.048,296,1.422,297,1.516,298,1.266,299,1.516,300,1.516,301,2.334,302,1.516,303,1.516,304,1.671,305,1.422,306,1.2,307,1.621,308,1.516,309,1.516,310,1.516,311,1.516,312,1.516,313,1.516,314,1.516,315,1.422,316,1.516,317,1.516,318,1.516,319,2.334,320,1.516,321,1.516,322,1.516,323,1.516,324,1.516,325,1.516,326,1.516,327,1.516,328,1.516,329,1.516,330,1.516,331,1.516,332,1.516,333,1.516,334,1.516,335,1.516,336,1.516,337,1.14,338,1.516,339,1.422,340,1.516,341,1.671,342,1.339,343,1.422,344,1.422,345,1.516,346,1.516,347,1.339,348,1.516,349,1.422,350,1.848,351,1.516]],["title/components/EstimateOfDemandComponent.html",[0,0.535,35,1.179]],["body/components/EstimateOfDemandComponent.html",[0,0.869,1,0.775,2,0.2,3,0.2,4,0.921,5,0.921,6,0.921,7,0.094,9,0.921,10,2.678,11,1.551,13,1.617,15,1.617,17,0.399,18,0.017,19,0.352,20,0.106,21,0.005,23,0.628,24,1.35,25,1.004,26,1.293,27,1.922,28,0.921,29,0.867,30,0.921,31,0.775,32,1.659,33,1.004,34,0.921,35,1.618,36,2.178,37,0.921,38,0.775,39,0.921,40,0.775,41,0.808,42,1.411,43,0.743,44,0.921,45,0.775,46,0.921,47,0.775,48,1.443,49,0.775,50,0.921,51,0.921,52,0.775,53,0.881,54,1.411,55,0.775,56,1.293,57,0.775,58,0.921,59,0.775,60,0.921,61,0.743,62,0.921,63,0.775,64,0.921,65,0.775,66,0.921,67,0.008,68,0.008,97,0.962,121,1.091,123,0.5,124,0.963,129,1.092,131,0.602,132,0.698,133,0.602,134,1.298,144,0.743,153,1.92,156,3.792,160,3.939,161,1.876,163,0.745,164,3.264,165,2.701,166,2.491,167,4.1,168,4.1,169,4.1,170,0.683,171,1.17,174,1.643,177,2.88,178,1.543,179,2.541,182,1.366,204,3.264,205,3.444,206,0.923,209,1.122,211,1.291,222,2.311,223,2.747,275,0.683,304,2.492,306,2.756,307,1.641,337,2.428,349,1.45,352,5.721,353,5.13,354,2.188,355,2.747,356,3.878,357,3.878,358,5.284,359,1.793,360,3.672,361,2.428,362,2.852,363,3.878,364,2.53,365,2.53,366,2.53,367,2.53,368,3.878,369,3.878,370,3.352,371,3.878,372,3.352,373,3.006,374,2.53,375,2.53,376,1.793,377,1.793,378,1.793,379,1.793,380,1.793,381,1.793,382,3.878,383,1.962,384,1.793,385,1.962,386,1.546,387,1.45,388,1.793,389,1.793,390,1.793,391,1.793,392,1.793,393,2.188,394,1.546,395,2.188,396,2.53,397,2.188,398,2.53,399,2.53,400,3.878,401,2.53,402,2.53,403,2.53,404,2.53,405,1.411,406,3.744,407,1.793,408,3.34,409,2.188,410,1.962,411,2.53,412,2.188,413,2.53,414,2.188,415,3.006,416,2.53,417,3.654,418,2.188,419,1.546,420,2.53,421,1.291,422,2.188,423,2.53,424,2.53,425,2.53,426,1.793,427,3.878,428,2.53,429,2.53,430,2.188,431,2.188,432,2.53,433,2.53,434,2.188,435,2.188,436,2.188,437,2.53,438,2.53,439,2.53]],["title/components/FooterComponent.html",[0,0.535,38,1.179]],["body/components/FooterComponent.html",[0,0.961,1,1.272,2,0.286,3,0.215,4,1.511,5,1.511,6,1.511,7,0.154,9,1.511,10,2.858,11,2.087,13,2.308,15,2.308,17,0.257,18,0.016,19,0.577,20,0.174,21,0.009,23,1.031,24,1.927,25,1.433,26,1.846,27,2.415,28,1.511,29,1.018,30,1.511,31,1.272,32,1.728,33,1.075,34,1.511,35,1.272,36,1.446,37,1.511,38,2.033,39,1.511,40,1.272,41,1.327,42,2.014,43,1.219,44,1.511,45,1.272,46,1.511,47,1.272,48,1.906,49,1.272,50,1.511,51,1.511,52,1.272,53,1.446,54,2.014,55,1.272,56,1.385,57,1.272,58,1.511,59,1.272,60,1.511,61,1.219,62,1.511,63,1.272,64,1.511,65,1.272,66,1.511,67,0.011,68,0.011,121,1.558,123,0.393,124,1.374,129,0.848,132,0.549,134,0.764,161,2.478,163,1.064,166,2.643,170,1.121,171,1.031,174,1.263,209,1.482,440,3.591,441,5.535,442,5.535,443,5.535,444,7.111,445,4.154,446,3.382,447,5.535,448,4.154,449,5.535,450,5.535,451,3.922,452,4.154,453,4.154,454,3.591,455,3.591,456,3.591]],["title/classes/GoOn.html",[21,0.008,457,1.863]],["body/classes/GoOn.html",[2,0.205,3,0.205,7,0.148,17,0.332,18,0.017,20,0.301,21,0.014,29,0.731,32,1.709,33,1.029,67,0.011,68,0.011,86,1.553,97,1.512,121,1.976,123,0.576,129,0.932,131,0.946,132,1.026,133,0.946,163,1.033,170,1.073,171,0.987,178,2.906,193,1.326,206,0.946,209,1.449,224,2.083,275,1.971,405,1.446,457,3.154,458,2.146,459,4.52,460,4.704,461,2.605,462,5.055,463,5.374,464,3.976,465,3.079,466,2.434,467,2.146,468,2.605,469,2.146,470,3.107,471,3.107,472,3.107,473,1.739,474,2.429,475,2.278,476,4.162,477,2.278,478,2.278,479,2.278,480,2.278,481,2.278]],["title/components/GoogleMapComponent.html",[0,0.535,40,1.179]],["body/components/GoogleMapComponent.html",[0,0.798,1,0.789,2,0.203,3,0.133,4,1.431,5,0.938,6,0.938,7,0.096,9,0.938,10,2.686,11,1.566,17,0.243,18,0.017,19,0.358,20,0.108,21,0.005,23,0.64,24,1.37,25,1.235,26,1.312,27,1.941,28,0.938,29,1.057,30,0.938,31,0.789,32,1.499,33,1.381,34,0.938,35,0.789,36,0.898,37,0.938,38,0.789,39,0.938,40,1.634,41,1.524,42,1.431,43,0.757,44,0.938,45,0.789,46,0.938,47,0.789,48,1.759,49,0.789,50,0.938,51,0.938,52,0.789,53,0.898,54,1.431,55,0.789,56,0.86,57,0.789,58,0.938,59,0.789,60,0.938,61,0.757,62,0.938,63,0.789,64,0.938,65,0.789,66,0.938,67,0.008,68,0.008,85,2.985,121,1.107,123,0.244,124,0.977,129,1.096,131,1.135,132,0.969,133,1.135,134,0.877,144,0.757,161,1.898,163,0.756,166,2.124,170,1.753,174,1.382,193,1.779,204,4.01,206,0.614,209,1.584,224,1.107,275,1.44,281,1.392,307,1.858,337,1.185,342,2.123,343,2.254,419,2.403,462,3.049,476,1.575,482,6.245,483,2.229,484,4.769,485,4.124,486,3.934,487,3.934,488,4.147,489,4.613,490,4.613,491,4.613,492,5.235,493,4.613,494,4.613,495,3.968,496,2.578,497,3.269,498,5.444,499,3.934,500,4.136,501,2.787,502,2.578,503,5.336,504,2.578,505,3.934,506,3.934,507,3.401,508,2.578,509,3.934,510,3.934,511,3.934,512,2.578,513,3.781,514,3.934,515,3.401,516,2.578,517,3.934,518,5.235,519,5.336,520,2.578,521,2.578,522,3.401,523,3.934,524,3.049,525,2.578,526,3.934,527,4.136,528,2.578,529,3.049,530,3.934,531,2.578,532,2.123,533,2.578,534,3.934,535,2.578,536,3.934,537,2.229,538,2.229,539,1.827,540,2.578,541,2.578,542,2.578,543,2.578,544,2.578,545,2.578,546,2.578,547,2.578,548,2.229,549,2.229,550,2.229,551,2.229,552,2.229,553,2.229,554,2.229,555,2.229,556,2.229]],["title/classes/Graph.html",[21,0.008,304,1.684]],["body/classes/Graph.html",[2,0.125,3,0.289,7,0.09,17,0.15,18,0.017,20,0.248,21,0.011,25,0.971,29,0.95,67,0.008,68,0.008,115,1.389,123,0.229,124,0.931,129,1.056,131,1.23,132,0.841,133,1.23,134,1.3,144,0.712,145,3.189,153,1.198,158,1.306,163,0.721,170,1.239,171,1.387,174,1.275,185,1.149,193,0.808,201,1.173,209,1.751,220,2.15,221,2.025,222,1.06,224,2.215,226,3.704,227,1.389,228,2.63,229,2.96,230,2.15,231,3.95,232,1.481,233,3.744,234,2.15,235,3.016,236,1.389,237,2.15,238,2.15,239,2.15,240,2.63,241,3.248,242,1.481,243,1.481,244,1.481,249,2.804,250,1.481,252,1.389,254,1.481,255,1.481,256,1.481,257,1.114,264,2.63,265,1.481,266,1.389,267,2.63,268,1.481,269,1.481,270,1.481,271,1.481,272,1.389,273,1.481,274,1.237,275,1.395,276,1.481,277,2.788,278,1.481,279,1.481,280,1.481,281,1.309,282,1.389,283,1.481,284,1.481,285,1.389,286,1.389,287,2.96,288,1.237,289,1.389,290,1.481,291,1.481,292,1.481,293,1.481,294,1.389,295,3.668,296,1.389,297,1.481,298,1.237,299,1.481,300,1.481,301,2.292,302,1.481,303,1.481,304,2.26,305,2.15,306,1.815,307,2.275,308,3.61,309,1.481,310,3.156,311,1.481,312,3.156,313,1.481,314,2.292,315,2.15,316,1.481,317,1.481,318,2.292,319,2.292,320,1.481,321,1.481,322,1.481,323,1.481,324,1.481,325,1.481,326,1.481,327,1.481,328,1.481,329,1.481,330,1.481,331,1.481,332,1.481,333,1.481,334,1.481,335,2.292,336,1.481,337,1.724,338,2.292,339,2.15,340,3.156,341,1.641,342,2.025,343,2.15,344,2.15,345,2.292,346,2.292,347,2.025,348,2.292,349,2.15,350,1.815,351,2.292,557,3.752,558,3.752,559,3.752,560,2.424,561,2.424,562,2.424,563,2.424,564,2.424,565,2.424,566,2.424,567,2.424,568,2.424,569,2.424,570,2.424]],["title/components/HomeComponent.html",[0,0.535,43,1.13]],["body/components/HomeComponent.html",[0,0.886,1,1.015,2,0.245,3,0.171,4,1.206,5,1.206,6,1.206,7,0.123,9,1.206,10,2.784,11,1.947,13,1.975,15,1.975,17,0.341,18,0.017,19,0.461,20,0.139,21,0.007,22,3.671,23,0.823,24,1.649,25,1.43,26,1.579,27,2.193,28,1.206,29,1.016,30,1.206,31,1.015,32,1.625,33,0.858,34,1.206,35,1.015,36,1.154,37,1.206,38,1.015,39,1.206,40,1.015,41,1.059,42,1.723,43,1.77,44,1.206,45,1.015,46,1.206,47,1.015,48,1.692,49,1.015,50,1.206,51,1.206,52,1.015,53,1.154,54,1.723,55,1.015,56,1.105,57,1.015,58,1.206,59,1.015,60,1.206,61,0.973,62,1.206,63,1.015,64,1.206,65,1.015,66,1.206,67,0.01,68,0.01,116,1.691,121,1.333,123,0.314,124,1.176,129,0.923,131,0.789,132,0.438,133,0.789,134,1.109,144,1.872,147,4.094,150,3.076,153,1.926,154,2.713,161,2.199,163,0.91,166,2.4,170,0.895,171,0.823,174,1.376,206,0.789,222,2.637,275,1.278,498,5.733,527,2.569,529,3.671,571,2.865,572,5.526,573,4.736,574,4.736,575,5.211,576,6.028,577,3.314,578,4.736,579,3.314,580,3.314,581,5.211,582,2.865,583,3.671,584,3.314,585,2.569,586,3.314,587,6.632,588,3.314,589,3.314,590,3.314,591,5.526,592,3.314,593,4.736,594,3.314,595,3.671,596,4.736,597,4.736,598,3.314,599,3.314,600,4.518,601,4.094,602,3.166,603,3.314,604,4.094,605,4.736,606,4.736,607,4.736,608,3.314,609,3.314,610,3.314,611,3.314,612,3.314,613,4.736,614,3.314,615,3.314,616,4.094,617,3.671,618,3.103,619,4.094,620,2.893,621,3.671]],["title/components/InfoDialogComponent.html",[0,0.535,45,1.179]],["body/components/InfoDialogComponent.html",[0,0.955,1,1.247,2,0.373,3,0.21,4,1.987,5,1.482,6,1.482,7,0.151,9,1.482,10,2.852,11,1.933,17,0.337,18,0.016,19,0.566,20,0.171,21,0.008,23,1.011,24,1.902,25,1.414,26,1.822,27,2.396,28,1.482,29,1.134,30,1.482,31,1.247,32,1.72,33,1.055,34,1.482,35,1.247,36,1.418,37,1.482,38,1.247,39,1.482,40,1.247,41,1.301,42,1.987,43,1.196,44,1.482,45,2.017,46,1.482,47,1.247,48,1.887,49,1.247,50,1.482,51,1.482,52,1.247,53,1.418,54,1.987,55,1.247,56,1.358,57,1.247,58,1.482,59,1.247,60,1.482,61,1.196,62,1.482,63,1.247,64,1.482,65,1.247,66,1.482,67,0.011,68,0.011,123,0.386,129,0.944,131,0.97,132,0.815,133,0.97,153,2.375,163,1.05,191,1.604,206,1.301,224,1.99,495,2.669,622,5.694,623,3.522,624,4.723,625,6.164,626,5.938,627,4.074,628,7.071,629,4.074,630,3.158,631,4.074,632,4.074,633,4.074,634,2.334,635,4.074]],["title/modules/LocationModule.html",[69,0.956,81,2.523]],["body/modules/LocationModule.html",[2,0.284,3,0.284,7,0.204,17,0.438,18,0.016,19,0.764,20,0.277,21,0.011,23,1.365,67,0.014,68,0.014,69,1.642,71,2.527,72,3.374,73,2.805,74,2.823,81,5.009,85,2.757,86,1.309,87,2.527,89,3.039,636,4.753,637,4.753,638,4.38,639,5.498,640,5.498]],["title/injectables/LocationService.html",[191,1.13,638,2.206]],["body/injectables/LocationService.html",[2,0.172,3,0.172,7,0.124,17,0.293,18,0.017,19,0.462,20,0.139,21,0.007,29,0.873,41,1.768,53,1.652,67,0.011,68,0.01,86,1.437,123,0.315,124,1.499,129,1.07,131,1.13,132,0.798,133,1.13,134,1.327,135,4.345,137,1.608,150,2.421,158,1.652,163,0.912,174,1.378,191,1.625,206,1.318,224,2.122,275,1.494,285,2.719,286,2.719,307,2.311,341,1.454,350,1.608,405,1.209,415,3.679,421,3.08,446,2.031,451,4.277,485,2.987,488,2.899,501,4.95,638,2.719,641,2.873,642,4.102,643,3.679,644,3.679,645,3.362,646,4.745,647,6.374,648,5.907,649,5.738,650,4.745,651,5.518,652,6.036,653,4.745,654,4.745,655,4.745,656,3.324,657,6.036,658,4.703,659,5.146,660,4.745,661,3.324,662,4.745,663,4.679,664,3.324,665,3.324,666,4.745,667,3.324,668,6.036,669,3.324,670,3.324,671,5.534,672,4.102,673,4.745,674,3.324,675,2.873,676,4.745,677,2.873,678,3.324,679,3.324,680,4.102,681,3.324,682,3.324,683,3.324,684,2.873,685,3.324]],["title/components/MapComponent.html",[0,0.535,47,1.179]],["body/components/MapComponent.html",[0,0.863,1,0.759,2,0.197,3,0.128,4,0.902,5,0.902,6,0.902,7,0.092,9,0.902,10,2.669,11,1.534,13,1.592,15,1.592,17,0.406,18,0.017,19,0.344,20,0.104,21,0.005,23,0.615,24,1.329,25,0.988,26,1.273,27,1.902,28,0.902,29,0.856,30,0.902,31,0.759,32,1.599,33,0.988,34,0.902,35,0.759,36,0.863,37,0.902,38,0.759,39,0.902,40,0.759,41,0.792,42,1.388,43,0.728,44,0.902,45,0.759,46,0.902,47,1.6,48,1.825,49,0.759,50,0.902,51,0.902,52,0.759,53,0.863,54,1.388,55,0.759,56,1.273,57,0.759,58,0.902,59,0.759,60,0.902,61,0.728,62,0.902,63,0.759,64,0.902,65,0.759,66,0.902,67,0.008,68,0.008,85,2.354,97,0.943,116,1.265,121,1.074,123,0.235,124,0.948,129,1.136,131,0.59,132,0.903,133,0.909,134,1.21,144,0.728,154,1.42,156,3.769,160,3.907,161,1.853,162,1.756,163,0.734,164,3.234,165,2.667,166,2.472,167,4.07,168,4.07,169,4.07,170,0.669,171,0.615,174,1.603,177,2.843,178,1.519,179,2.501,182,1.338,193,1.988,206,0.909,209,1.627,275,1.256,307,1.62,355,2.704,359,1.756,360,3.642,361,2.402,376,1.756,377,1.756,378,1.756,379,1.756,380,1.756,381,1.756,386,1.514,387,1.42,388,1.756,389,1.756,390,1.756,391,1.756,392,1.756,393,2.143,394,1.514,407,2.704,408,2.704,412,2.143,417,2.959,421,2.375,426,1.756,466,1.273,485,3.55,488,3.642,489,4.519,490,4.519,491,4.519,492,4.519,493,4.519,494,4.519,495,3.425,497,2.822,500,2.959,501,3.297,513,2.704,515,4.023,518,2.143,524,3.608,532,1.338,537,2.143,548,4.023,549,2.143,550,2.143,551,2.143,552,2.143,553,2.143,554,2.143,555,2.143,556,4.023,575,2.143,600,1.756,602,1.42,686,2.143,687,2.959,688,2.959,689,3.817,690,3.817,691,3.817,692,2.479,693,2.479,694,2.479,695,2.479,696,2.479,697,2.479,698,2.479,699,2.479,700,2.479,701,2.479,702,2.479,703,2.479,704,1.922,705,1.922,706,2.959,707,2.479,708,2.143,709,1.624,710,1.756,711,2.479,712,2.143,713,2.143,714,2.479,715,3.817,716,3.817,717,2.143,718,2.479,719,2.479,720,2.479,721,2.143,722,2.479,723,2.479,724,2.479,725,2.143,726,1.922,727,1.756,728,1.922,729,2.479,730,2.479]],["title/injectables/MapService.html",[191,1.13,497,2.078]],["body/injectables/MapService.html",[2,0.274,3,0.112,7,0.081,17,0.328,18,0.017,19,0.302,20,0.091,21,0.004,24,1.199,25,0.892,29,1.128,33,0.892,41,0.694,48,0.665,67,0.007,68,0.007,85,0.906,86,1.159,116,2.183,123,0.206,124,0.855,129,1.106,131,1.46,132,0.873,133,1.46,134,1.297,135,2.451,137,1.051,144,1.736,158,1.694,163,0.822,170,0.587,171,0.54,174,1.593,177,1.328,191,1.256,206,0.517,209,1.344,224,2.098,264,1.973,275,1.314,281,1.859,282,1.245,307,2.546,341,1.871,342,2.309,350,2.73,419,2.104,421,3.302,446,3.747,485,3.564,488,2.973,497,1.859,501,3.999,527,3.316,529,2.67,538,5.112,539,2.44,585,1.685,595,2.67,645,3.448,649,4.879,663,4.375,709,1.424,710,1.54,726,4.375,727,3.448,728,4.584,731,1.879,732,2.977,733,4.867,734,3.444,735,3.444,736,4.867,737,4.867,738,4.867,739,3.444,740,6.134,741,3.444,742,3.444,743,3.444,744,3.444,745,2.174,746,4.867,747,3.444,748,4.278,749,3.444,750,2.174,751,3.444,752,6.716,753,5.644,754,2.174,755,2.977,756,4.867,757,4.867,758,3.444,759,4.867,760,4.867,761,2.174,762,2.174,763,2.174,764,3.444,765,2.174,766,3.444,767,4.278,768,3.444,769,3.444,770,2.174,771,2.174,772,3.444,773,2.174,774,3.444,775,2.174,776,4.867,777,5.112,778,3.444,779,2.174,780,3.444,781,2.174,782,3.444,783,4.867,784,2.174,785,4.278,786,2.174,787,4.867,788,2.174,789,4.278,790,2.977,791,2.174,792,1.879,793,3.444,794,1.879,795,2.174,796,2.174,797,2.174,798,2.174,799,2.174,800,4.278,801,2.174,802,3.444,803,3.773,804,3.444,805,4.278,806,2.174,807,2.174,808,2.174,809,2.174,810,2.174,811,2.174,812,2.174,813,2.174,814,2.174,815,2.174,816,2.174,817,3.444,818,3.444,819,3.444,820,3.444,821,3.444,822,3.444,823,2.174,824,2.174,825,2.174,826,2.174,827,2.174,828,2.174,829,2.174,830,2.174,831,2.174,832,2.174,833,2.174,834,2.174,835,2.174,836,1.879,837,2.174,838,1.879,839,2.174,840,2.174,841,2.174,842,2.174,843,2.174,844,2.174,845,2.174,846,2.174,847,2.174,848,2.174,849,2.174,850,2.174,851,4.278,852,4.278,853,3.444,854,3.444,855,2.174,856,2.174,857,2.174,858,3.444]],["title/modules/MaterialModule.html",[69,0.956,859,2.206]],["body/modules/MaterialModule.html",[2,0.269,3,0.269,7,0.193,17,0.446,18,0.016,19,0.723,20,0.268,21,0.011,67,0.013,68,0.013,69,1.291,89,2.938,92,4.032,93,3.685,144,1.527,634,2.98,859,4.246,860,4.032,861,5.526,862,5.526,863,5.526,864,6.393,865,5.526,866,5.526,867,5.526,868,5.526,869,5.526,870,5.526,871,5.526,872,5.526,873,5.526,874,6.921,875,5.201,876,6.393,877,5.201,878,5.201,879,5.201,880,5.201]],["title/interfaces/Member.html",[185,1.179,277,2.078]],["body/interfaces/Member.html",[2,0.153,3,0.268,7,0.11,17,0.183,18,0.017,20,0.268,21,0.012,25,1.131,67,0.009,68,0.009,115,1.699,123,0.281,129,0.454,132,0.872,134,1.174,144,0.871,145,2.8,153,1.396,158,1.032,163,0.84,171,1.085,174,1.184,185,1.588,193,0.989,201,1.434,209,1.803,220,1.699,221,1.601,222,1.297,224,2.198,226,3.455,227,1.699,228,2.503,229,2.972,230,2.503,231,3.827,232,1.812,233,3.495,234,2.503,235,3.089,236,1.699,237,2.503,238,2.503,239,2.503,240,2.503,241,3.455,242,1.812,243,1.812,244,1.812,249,3.169,250,1.812,252,1.699,254,1.812,255,1.812,256,1.812,257,1.363,264,2.503,265,1.812,266,1.699,267,2.503,268,1.812,269,1.812,270,1.812,271,1.812,272,1.699,273,1.812,274,1.513,275,1.828,276,2.669,277,3.444,278,3.496,279,3.496,280,1.812,281,1.601,282,1.699,283,1.812,284,1.812,285,1.699,286,1.699,287,2.972,288,1.513,289,1.699,290,1.812,291,1.812,292,1.812,293,1.812,294,1.699,295,3.293,296,1.699,297,1.812,298,1.513,299,1.812,300,1.812,301,2.669,302,1.812,303,1.812,304,1.911,305,1.699,306,1.434,307,1.806,308,1.812,309,1.812,310,1.812,311,1.812,312,1.812,313,1.812,314,1.812,315,1.699,316,1.812,317,1.812,318,1.812,319,2.669,320,1.812,321,1.812,322,1.812,323,1.812,324,1.812,325,1.812,326,1.812,327,1.812,328,1.812,329,1.812,330,1.812,331,1.812,332,1.812,333,1.812,334,1.812,335,1.812,336,1.812,337,1.363,338,1.812,339,1.699,340,1.812,341,1.911,342,1.601,343,1.699,344,1.699,345,1.812,346,1.812,347,1.601,348,1.812,349,1.699,350,2.113,351,1.812]],["title/components/MessageArchivedComponent.html",[0,0.535,49,1.179]],["body/components/MessageArchivedComponent.html",[0,0.97,1,1.31,2,0.292,3,0.221,4,2.053,5,1.556,6,1.556,7,0.159,9,1.556,10,2.867,11,1.971,17,0.349,18,0.016,19,0.594,20,0.179,21,0.009,23,1.062,24,1.965,25,1.461,26,1.882,27,2.443,28,1.556,29,1.162,30,1.556,31,1.31,32,1.741,33,1.107,34,1.556,35,1.31,36,1.489,37,1.556,38,1.31,39,1.556,40,1.31,41,1.366,42,2.053,43,1.256,44,1.556,45,1.31,46,1.556,47,1.31,48,1.934,49,2.056,50,2.297,51,1.556,52,1.31,53,1.489,54,2.053,55,1.31,56,1.426,57,1.31,58,1.556,59,1.31,60,1.556,61,1.256,62,1.556,63,1.31,64,1.556,65,1.31,66,1.556,67,0.012,68,0.012,123,0.405,129,0.864,131,1.018,132,0.746,133,1.018,153,2.371,163,1.085,191,1.657,206,1.018,224,1.778,495,2.803,630,3.316,634,2.451,881,5.46,882,3.697,883,5.643,884,4.277,885,4.277,886,4.277,887,4.277,888,4.277]],["title/modules/NetworkModule.html",[69,0.956,82,2.523]],["body/modules/NetworkModule.html",[2,0.275,3,0.275,7,0.198,17,0.461,18,0.016,19,0.739,20,0.272,21,0.011,23,1.321,67,0.013,68,0.013,69,1.609,71,2.445,72,3.308,73,2.715,74,2.783,82,5.079,85,2.703,86,1.267,87,2.445,89,2.979,362,4.095,889,4.6,890,4.6,891,4.6,892,4.971,893,5.321,894,5.321,895,5.321]],["title/injectables/NetworkService.html",[191,1.13,362,2.078]],["body/injectables/NetworkService.html",[2,0.078,3,0.078,7,0.056,11,0.446,17,0.329,18,0.017,19,0.211,20,0.064,21,0.009,25,0.665,26,1.586,29,0.979,56,0.856,67,0.007,68,0.005,74,1.022,86,0.934,87,0.698,123,0.144,124,0.638,126,1.471,128,1.702,129,1.038,131,1.268,132,0.831,133,1.268,134,1.333,135,3.381,137,0.735,144,2.039,150,1.31,153,2.042,158,1.365,163,0.494,170,0.41,171,1.088,174,1.215,182,0.82,191,0.979,206,0.362,209,1.522,221,1.386,222,1.715,224,2.056,226,2.829,228,2.247,230,0.87,231,3.46,233,0.87,234,0.87,235,0.82,236,0.87,237,2.247,239,1.471,240,0.87,241,2.237,252,0.87,266,1.471,267,1.471,274,1.702,275,1.632,287,0.87,288,1.31,289,1.471,294,0.87,304,3.038,305,1.471,306,2.301,307,2.435,337,2.328,339,0.87,341,2.701,347,0.82,350,1.613,362,1.386,372,1.313,373,1.991,383,1.178,405,0.553,409,3.39,410,1.178,415,1.178,418,2.22,419,2.038,421,2.001,422,3.39,436,1.313,446,2.396,466,0.856,485,2.117,532,1.386,539,1.076,585,1.178,595,1.178,600,3.106,602,2.512,618,1.683,620,3.388,642,3.39,644,1.991,645,1.819,658,3.37,672,1.313,680,1.313,710,1.076,725,3.39,726,1.991,727,3.589,728,3.688,732,2.22,777,2.22,790,1.313,896,1.313,897,2.22,898,2.568,899,3.921,900,2.568,901,3.921,902,3.921,903,3.921,904,3.921,905,2.568,906,2.568,907,2.568,908,2.568,909,1.519,910,3.921,911,2.568,912,2.568,913,2.568,914,1.519,915,6.895,916,5.325,917,3.921,918,1.519,919,2.568,920,1.519,921,4.112,922,3.921,923,3.921,924,2.568,925,1.991,926,2.568,927,1.519,928,1.519,929,1.519,930,1.519,931,1.519,932,3.921,933,2.568,934,1.519,935,4.603,936,1.519,937,2.883,938,2.568,939,2.568,940,2.568,941,1.519,942,2.568,943,1.519,944,2.568,945,1.519,946,2.568,947,6.289,948,1.519,949,2.568,950,2.568,951,1.519,952,1.519,953,1.519,954,1.519,955,4.383,956,1.313,957,1.519,958,1.519,959,2.22,960,1.178,961,1.178,962,1.519,963,3.335,964,2.568,965,3.921,966,2.22,967,1.519,968,4.757,969,1.519,970,1.519,971,1.519,972,1.519,973,3.921,974,1.519,975,2.568,976,2.568,977,2.568,978,2.568,979,1.519,980,4.757,981,1.519,982,4.379,983,1.519,984,1.519,985,2.568,986,2.568,987,3.921,988,3.335,989,2.568,990,2.568,991,1.519,992,1.519,993,2.568,994,1.519,995,2.568,996,1.519,997,1.519,998,1.519,999,1.519,1000,1.519,1001,1.519,1002,1.519,1003,1.519,1004,1.519,1005,1.519,1006,1.519,1007,1.519,1008,1.519,1009,1.519,1010,1.519,1011,2.568,1012,1.519,1013,1.519,1014,1.519,1015,1.519,1016,1.519,1017,1.519,1018,1.519,1019,1.519,1020,1.519,1021,1.519,1022,1.519,1023,1.519,1024,1.519,1025,1.519,1026,1.519,1027,1.519,1028,1.519,1029,1.991,1030,1.519,1031,1.519,1032,1.519,1033,1.519,1034,1.519,1035,1.519,1036,1.519,1037,1.519,1038,1.313,1039,1.519,1040,2.22,1041,1.519,1042,1.519,1043,1.519,1044,1.519,1045,2.568,1046,2.568,1047,2.568,1048,1.519,1049,1.519,1050,1.519,1051,1.519,1052,1.519,1053,1.519,1054,1.519,1055,1.519,1056,1.519,1057,1.519,1058,1.519,1059,1.519,1060,1.519,1061,1.519,1062,1.519,1063,1.519,1064,1.519,1065,1.519,1066,1.519,1067,1.519,1068,1.519]],["title/classes/Node.html",[21,0.008,231,1.965]],["body/classes/Node.html",[2,0.14,3,0.254,7,0.1,17,0.167,18,0.017,20,0.258,21,0.012,25,1.055,29,0.497,67,0.008,68,0.008,115,1.548,123,0.256,129,1.032,131,0.643,132,0.871,133,0.643,134,1.134,144,0.793,145,2.649,153,1.302,158,0.941,163,0.783,170,1.325,171,1.456,174,1.12,185,1.248,193,0.901,201,1.307,206,0.643,209,1.823,220,1.548,221,1.458,222,1.182,224,2.222,226,3.609,227,1.548,228,2.335,229,2.812,230,2.335,231,3.815,232,1.651,233,3.361,234,2.335,235,2.95,236,1.548,237,2.335,238,2.335,239,2.335,240,2.335,241,3.65,242,1.651,243,1.651,244,1.651,249,2.998,250,1.651,252,1.548,254,1.651,255,1.651,256,1.651,257,1.242,264,2.335,265,1.651,266,1.548,267,2.335,268,1.651,269,1.651,270,1.651,271,1.651,272,1.548,273,1.651,274,1.379,275,1.475,276,1.651,277,2.95,278,1.651,279,1.651,280,2.49,281,2.2,282,2.335,283,2.49,284,2.49,285,2.335,286,2.335,287,3.667,288,2.789,289,3.131,290,3.339,291,3.339,292,2.49,293,1.651,294,1.548,295,3.166,296,1.548,297,1.651,298,1.379,299,1.651,300,1.651,301,2.49,302,1.651,303,1.651,304,1.783,305,1.548,306,1.307,307,1.709,308,1.651,309,1.651,310,1.651,311,1.651,312,1.651,313,1.651,314,1.651,315,1.548,316,1.651,317,1.651,318,1.651,319,2.49,320,1.651,321,1.651,322,1.651,323,1.651,324,1.651,325,1.651,326,1.651,327,1.651,328,1.651,329,1.651,330,1.651,331,1.651,332,1.651,333,1.651,334,1.651,335,1.651,336,1.651,337,1.242,338,1.651,339,1.548,340,1.651,341,1.783,342,1.458,343,1.548,344,1.548,345,1.651,346,1.651,347,1.458,348,1.651,349,1.548,350,1.971,351,1.651,1069,4.076,1070,2.702,1071,2.702,1072,2.702,1073,2.702,1074,2.702]],["title/classes/Relation.html",[21,0.008,295,2.078]],["body/classes/Relation.html",[2,0.146,3,0.261,7,0.105,17,0.175,18,0.017,20,0.263,21,0.012,25,1.306,29,0.52,67,0.009,68,0.009,115,2.416,123,0.268,129,0.916,131,0.673,132,0.79,133,0.673,134,1.153,144,0.83,145,2.722,153,1.786,158,0.984,163,0.811,170,0.763,171,1.252,174,1.151,185,1.291,193,0.943,201,1.368,206,0.673,209,1.808,220,1.62,221,1.526,222,1.237,224,2.212,226,3.408,227,1.62,228,2.416,229,3.203,230,2.89,231,3.799,232,1.728,233,3.427,234,2.416,235,3.018,236,1.62,237,2.416,238,2.416,239,2.416,240,2.416,241,3.683,242,1.728,243,1.728,244,1.728,249,3.081,250,1.728,252,1.62,254,1.728,255,1.728,256,1.728,257,1.299,264,2.416,265,1.728,266,1.62,267,2.416,268,1.728,269,1.728,270,1.728,271,1.728,272,1.62,273,1.728,274,1.443,275,1.509,276,1.728,277,3.684,278,1.728,279,1.728,280,1.728,281,1.526,282,1.62,283,1.728,284,1.728,285,1.62,286,1.62,287,2.89,288,1.443,289,1.62,290,1.728,291,1.728,292,1.728,293,1.728,294,1.62,295,3.507,296,2.416,297,2.576,298,2.152,299,2.576,300,2.576,301,3.832,302,2.576,303,1.728,304,1.845,305,1.62,306,1.368,307,1.756,308,1.728,309,1.728,310,1.728,311,1.728,312,1.728,313,1.728,314,1.728,315,1.62,316,1.728,317,1.728,318,1.728,319,2.576,320,1.728,321,1.728,322,1.728,323,1.728,324,1.728,325,1.728,326,1.728,327,1.728,328,1.728,329,1.728,330,1.728,331,1.728,332,1.728,333,1.728,334,1.728,335,1.728,336,1.728,337,1.299,338,1.728,339,1.62,340,1.728,341,1.845,342,1.526,343,1.62,344,1.62,345,1.728,346,1.728,347,1.526,348,1.728,349,1.62,350,2.04,351,1.728,1075,4.217,1076,2.828,1077,2.828]],["title/classes/Reset.html",[21,0.008,86,0.917]],["body/classes/Reset.html",[2,0.208,3,0.208,7,0.15,17,0.335,18,0.017,20,0.302,21,0.014,29,0.741,32,1.715,33,1.044,67,0.011,68,0.011,86,1.629,97,1.533,121,1.984,123,0.58,129,0.939,131,0.96,132,1.007,133,0.96,163,1.043,170,1.088,171,1.001,178,2.915,193,1.344,206,0.96,209,1.46,224,2.089,275,1.977,405,1.466,457,2.966,458,2.176,459,4.533,460,4.72,461,2.641,465,2.31,466,2.442,467,2.176,468,2.641,469,2.176,470,3.129,471,3.129,472,3.129,473,1.763,474,2.463,475,2.31,476,4.182,477,2.31,478,2.31,479,2.31,480,3.108,481,2.31,1078,5.425,1079,4.031]],["title/components/SearchForTheAreaComponent.html",[0,0.535,52,1.179]],["body/components/SearchForTheAreaComponent.html",[0,0.864,1,0.761,2,0.198,3,0.128,4,0.905,5,0.905,6,0.905,7,0.092,9,0.905,10,2.67,11,1.537,13,1.596,15,1.596,17,0.349,18,0.017,19,0.346,20,0.104,21,0.005,23,0.617,24,1.332,25,0.991,26,1.276,27,1.905,28,0.905,29,0.963,30,0.905,31,0.761,32,1.628,33,1.207,34,0.905,35,0.761,36,0.866,37,0.905,38,0.761,39,0.905,40,0.761,41,0.794,42,1.392,43,0.73,44,0.905,45,0.761,46,0.905,47,0.761,48,1.428,49,0.761,50,0.905,51,0.905,52,1.603,53,2.381,54,1.392,55,0.761,56,0.829,57,0.761,58,0.905,59,0.761,60,0.905,61,0.73,62,0.905,63,0.761,64,0.905,65,0.761,66,0.905,67,0.011,68,0.008,121,1.077,123,0.496,124,0.95,129,1.099,131,0.911,132,0.747,133,0.911,134,1.258,153,0.794,156,3.772,160,3.912,161,1.856,163,0.735,164,3.239,165,2.672,166,2.475,167,4.075,168,4.075,169,4.075,170,0.671,171,0.95,174,1.664,177,2.849,178,1.523,179,2.507,182,1.342,204,3.239,205,3.42,206,0.911,209,0.911,211,1.269,257,1.758,275,1.413,288,1.952,307,1.332,355,2.711,361,2.406,376,1.762,377,1.762,378,1.762,379,1.762,380,1.762,381,1.762,384,1.762,388,1.762,389,1.762,390,1.762,391,1.762,392,1.762,395,3.308,397,3.308,405,2.172,406,3.71,407,1.762,408,3.304,410,1.928,417,3.615,421,1.952,434,2.15,451,1.762,466,1.276,473,1.674,532,3.554,602,1.425,638,3,644,1.928,645,1.762,648,2.15,651,4.527,659,3.615,663,4.627,675,2.15,677,2.15,684,2.15,1029,1.928,1080,5.811,1081,5.211,1082,1.928,1083,3.308,1084,3.308,1085,2.487,1086,4.527,1087,3.826,1088,2.487,1089,2.487,1090,2.487,1091,2.487,1092,3.826,1093,2.487,1094,2.487,1095,2.487,1096,2.15,1097,2.15,1098,2.487,1099,3.678,1100,2.487,1101,2.487,1102,3.826,1103,2.487,1104,3.308,1105,2.487,1106,3.826,1107,2.487,1108,2.487,1109,2.487,1110,2.487,1111,2.487,1112,2.487,1113,2.487,1114,2.487,1115,2.487,1116,2.487,1117,2.487,1118,2.487,1119,3.826,1120,2.487,1121,2.15,1122,2.487,1123,2.487,1124,2.487,1125,2.487,1126,2.487,1127,2.487,1128,2.15,1129,3.308,1130,3.308]],["title/components/SelectionOfTheAreaComponent.html",[0,0.535,55,1.179]],["body/components/SelectionOfTheAreaComponent.html",[0,0.878,1,0.797,2,0.205,3,0.134,4,0.946,5,0.946,6,0.946,7,0.097,9,0.946,10,2.689,11,1.574,13,1.652,15,1.652,17,0.412,18,0.017,19,0.362,20,0.109,21,0.005,23,0.646,24,1.379,25,1.025,26,1.321,27,1.95,28,0.946,29,0.882,30,0.946,31,0.797,32,1.67,33,1.242,34,0.946,35,0.797,36,0.906,37,0.946,38,0.797,39,0.946,40,0.797,41,0.831,42,1.441,43,0.764,44,0.946,45,0.797,46,0.946,47,0.797,48,1.641,49,0.797,50,0.946,51,0.946,52,0.797,53,0.906,54,1.441,55,1.641,56,2.268,57,0.797,58,0.946,59,0.797,60,0.946,61,0.764,62,0.946,63,0.797,64,0.946,65,0.797,66,0.946,67,0.008,68,0.008,97,0.99,121,1.115,123,0.507,124,0.983,129,1.108,131,0.619,132,0.708,133,0.619,134,1.305,153,0.831,156,3.822,160,3.982,161,1.909,163,0.761,164,3.305,165,2.748,166,2.515,167,4.14,168,4.14,169,4.14,170,0.702,171,0.983,174,1.62,177,2.93,178,1.577,179,2.595,182,1.404,204,3.305,205,3.482,206,0.943,209,0.943,211,1.328,229,2.269,257,2.992,306,2.593,307,1.67,355,2.806,359,1.843,360,3.712,361,2.464,362,2.893,376,1.843,377,1.843,378,1.843,379,1.843,380,1.843,381,1.843,384,1.843,385,2.017,386,1.589,387,1.491,388,1.843,389,1.843,390,1.843,391,1.843,392,1.843,421,2.021,446,2.42,451,1.843,466,1.321,532,1.404,620,4.157,708,2.249,709,1.705,710,1.843,717,2.249,935,5.253,1082,2.017,1083,3.424,1084,3.424,1097,2.249,1129,3.424,1130,3.424,1131,5.882,1132,5.274,1133,2.602,1134,2.602,1135,2.602,1136,2.602,1137,2.602,1138,2.602,1139,2.602,1140,2.249,1141,5.361,1142,2.602,1143,2.602,1144,5.361,1145,5.361,1146,2.602,1147,2.602,1148,3.961,1149,2.602,1150,2.602,1151,2.602,1152,2.602,1153,2.602,1154,2.602,1155,2.602,1156,2.602,1157,2.602,1158,2.602,1159,3.961,1160,3.961,1161,3.961,1162,3.961,1163,5.361,1164,3.961,1165,3.961,1166,3.424,1167,3.424,1168,3.961,1169,3.424]],["title/modules/SharedModule.html",[69,0.956,83,2.078]],["body/modules/SharedModule.html",[2,0.282,3,0.21,7,0.151,17,0.474,18,0.017,19,0.565,20,0.276,21,0.008,23,1.01,38,2.336,45,2.363,49,2.363,67,0.011,68,0.011,69,1.355,71,1.869,72,3.142,73,2.075,74,2.172,83,4.254,85,2.276,86,0.968,87,1.869,89,2.83,134,0.748,136,2.195,142,3.866,144,1.194,188,2.484,194,3.334,211,2.075,224,1.145,406,2.881,859,4.341,956,3.515,1170,3.515,1171,3.515,1172,3.515,1173,3.515,1174,3.152,1175,5.457,1176,5.457,1177,4.717,1178,3.515,1179,4.717,1180,4.717,1181,4.717,1182,4.717,1183,3.515,1184,3.515,1185,4.066,1186,4.066,1187,3.515,1188,3.515,1189,3.152,1190,4.066,1191,4.066]],["title/components/SimulationComponent.html",[0,0.535,57,1.179]],["body/components/SimulationComponent.html",[0,0.964,1,1.286,2,0.288,3,0.217,4,1.528,5,1.528,6,1.528,7,0.156,9,1.528,10,2.861,11,1.957,13,2.325,15,2.325,17,0.344,18,0.016,19,0.584,20,0.176,21,0.009,23,1.043,24,1.941,25,1.443,26,1.859,27,2.425,28,1.528,29,1.025,30,1.528,31,1.286,32,1.781,33,1.087,34,1.528,35,1.286,36,1.462,37,1.528,38,1.286,39,1.528,40,1.286,41,1.342,42,2.028,43,1.233,44,1.528,45,1.286,46,1.528,47,1.286,48,1.916,49,1.286,50,1.528,51,1.528,52,1.286,53,1.462,54,2.028,55,1.286,56,1.4,57,2.041,58,1.528,59,1.286,60,1.528,61,1.233,62,1.528,63,1.286,64,1.528,65,1.286,66,1.528,67,0.011,68,0.011,121,1.569,123,0.631,124,1.384,129,1.021,132,0.737,134,0.772,150,2.845,161,2.491,166,2.654,174,1.272,204,3.976,205,4.087,206,1.49,209,1.327,211,2.143,1192,3.63,1193,5.575,1194,5.575,1195,5.575,1196,4.199,1197,4.199]],["title/modules/SimulationModule.html",[69,0.956,84,2.523]],["body/modules/SimulationModule.html",[2,0.284,3,0.284,7,0.204,17,0.438,18,0.016,19,0.764,20,0.277,21,0.011,23,1.365,67,0.014,68,0.014,69,1.642,71,2.527,72,3.374,73,2.805,74,2.823,84,5.009,85,2.757,86,1.309,87,2.527,89,3.039,1198,4.753,1199,4.753,1200,4.67,1201,5.498,1202,5.498]],["title/injectables/SimulationService.html",[191,1.13,1200,2.352]],["body/injectables/SimulationService.html",[2,0.285,3,0.285,7,0.205,17,0.341,18,0.016,19,0.768,20,0.232,21,0.011,67,0.014,68,0.014,86,1.754,123,0.523,124,1.646,129,0.846,134,1.016,158,1.923,174,1.513,191,2.086,222,2.901,224,2,238,3.799,347,3.579,522,5.732,1200,4.051,1203,4.776,1204,6.631,1205,5.524]],["title/components/StatisticsComponent.html",[0,0.535,59,1.179]],["body/components/StatisticsComponent.html",[0,0.964,1,1.286,2,0.288,3,0.217,4,1.528,5,1.528,6,1.528,7,0.156,9,1.528,10,2.861,11,1.957,13,2.325,15,2.325,17,0.344,18,0.016,19,0.584,20,0.176,21,0.009,23,1.043,24,1.941,25,1.443,26,1.859,27,2.425,28,1.528,29,1.025,30,1.528,31,1.286,32,1.781,33,1.087,34,1.528,35,1.286,36,1.462,37,1.528,38,1.286,39,1.528,40,1.286,41,1.342,42,2.028,43,1.233,44,1.528,45,1.286,46,1.528,47,1.286,48,1.916,49,1.286,50,1.528,51,1.528,52,1.286,53,1.462,54,2.028,55,1.286,56,1.4,57,1.286,58,1.528,59,2.041,60,1.528,61,1.233,62,1.528,63,1.286,64,1.528,65,1.286,66,1.528,67,0.011,68,0.011,121,1.569,123,0.631,124,1.384,129,1.021,132,0.737,134,0.772,161,2.491,166,2.654,174,1.272,204,3.976,205,4.087,206,1.49,209,1.327,211,2.143,1206,3.63,1207,4.82,1208,5.575,1209,5.575,1210,5.575,1211,4.199,1212,4.199]],["title/interfaces/Step.html",[185,1.179,466,1.284]],["body/interfaces/Step.html",[2,0.29,3,0.29,7,0.209,18,0.016,20,0.281,67,0.014,68,0.014,123,0.532,132,0.743,144,1.649,153,2.454,158,1.956,163,1.287,182,3.615,185,2.051,466,2.561,513,3.981,925,5.548,1213,4.355]],["title/classes/StepChanged.html",[21,0.008,470,1.965]],["body/classes/StepChanged.html",[2,0.205,3,0.205,7,0.148,17,0.332,18,0.017,20,0.301,21,0.014,29,0.731,32,1.709,33,1.029,67,0.011,68,0.011,86,1.553,97,1.512,121,1.976,123,0.576,129,0.932,131,0.946,132,1.026,133,0.946,163,1.033,170,1.073,171,0.987,178,2.906,193,1.326,206,0.946,209,1.449,224,2.083,275,1.971,405,1.446,457,2.945,458,2.146,459,4.52,460,4.704,461,2.605,462,5.055,465,2.278,466,2.434,467,2.146,468,2.605,469,2.146,470,3.328,471,3.107,472,3.107,473,1.739,474,2.429,475,3.079,476,4.162,477,2.278,478,2.278,479,2.278,480,2.278,481,2.278,1214,5.374,1215,3.976]],["title/classes/StepError.html",[21,0.008,471,1.965]],["body/classes/StepError.html",[2,0.207,3,0.207,7,0.149,17,0.334,18,0.017,20,0.301,21,0.014,29,0.736,32,1.712,33,1.036,67,0.011,68,0.011,86,1.557,97,1.523,121,1.98,123,0.578,129,0.935,131,0.953,132,1.006,133,0.953,163,1.038,170,1.081,171,0.994,178,2.911,193,1.335,206,0.953,209,1.455,224,2.086,275,2.055,405,1.456,457,2.955,458,2.161,459,4.527,460,4.712,461,2.623,465,2.294,466,2.438,467,2.161,468,2.623,469,2.161,470,3.118,471,3.337,472,3.118,473,1.751,474,2.446,475,2.294,476,4.172,477,3.094,478,2.294,479,2.294,480,2.294,481,2.294,1216,5.399,1217,4.003]],["title/classes/StepPending.html",[21,0.008,472,1.965]],["body/classes/StepPending.html",[2,0.207,3,0.207,7,0.149,17,0.334,18,0.017,20,0.301,21,0.014,29,0.736,32,1.712,33,1.036,67,0.011,68,0.011,86,1.557,97,1.523,121,1.98,123,0.578,129,0.935,131,0.953,132,1.006,133,0.953,163,1.038,170,1.081,171,0.994,178,2.911,193,2.277,206,0.953,209,1.455,224,2.086,275,1.974,405,1.456,457,2.955,458,2.161,459,4.527,460,4.712,461,2.623,465,2.294,466,2.438,467,2.161,468,2.623,469,2.161,470,3.118,471,3.118,472,3.337,473,1.751,474,2.446,475,2.294,476,4.172,477,2.294,478,3.094,479,2.294,480,2.294,481,2.294,1218,5.399,1219,4.003]],["title/interfaces/Tag.html",[185,1.179,241,1.965]],["body/interfaces/Tag.html",[2,0.154,3,0.269,7,0.111,17,0.184,18,0.017,20,0.268,21,0.012,25,1.346,67,0.009,68,0.009,115,1.706,123,0.282,129,0.456,132,0.687,134,1.175,144,0.874,145,2.806,153,1.4,158,1.036,163,0.842,171,1.517,174,1.186,185,1.592,193,0.993,201,1.44,209,1.786,220,1.706,221,1.607,222,1.302,224,2.199,226,3.459,227,1.706,228,2.51,229,2.978,230,2.51,231,3.829,232,1.819,233,3.501,234,2.51,235,3.094,236,1.706,237,2.51,238,2.51,239,2.51,240,2.51,241,3.59,242,1.819,243,1.819,244,1.819,249,3.176,250,1.819,252,1.706,254,1.819,255,1.819,256,1.819,257,1.368,264,2.51,265,1.819,266,1.706,267,2.51,268,1.819,269,1.819,270,2.677,271,2.677,272,2.51,273,2.677,274,2.925,275,1.83,276,1.819,277,3.094,278,1.819,279,1.819,280,1.819,281,1.607,282,1.706,283,1.819,284,1.819,285,1.706,286,1.706,287,2.978,288,1.519,289,1.706,290,1.819,291,1.819,292,1.819,293,1.819,294,1.706,295,3.298,296,1.706,297,1.819,298,1.519,299,1.819,300,1.819,301,2.677,302,1.819,303,1.819,304,1.916,305,1.706,306,1.44,307,1.81,308,1.819,309,1.819,310,1.819,311,1.819,312,1.819,313,1.819,314,1.819,315,1.706,316,1.819,317,1.819,318,1.819,319,2.677,320,1.819,321,1.819,322,1.819,323,1.819,324,1.819,325,1.819,326,1.819,327,1.819,328,1.819,329,1.819,330,1.819,331,1.819,332,1.819,333,1.819,334,1.819,335,1.819,336,1.819,337,1.368,338,1.819,339,1.706,340,1.819,341,1.916,342,1.607,343,1.706,344,1.706,345,1.819,346,1.819,347,1.607,348,1.819,349,1.706,350,2.119,351,1.819]],["title/components/UiComponent.html",[0,0.535,61,1.13]],["body/components/UiComponent.html",[0,0.818,1,0.833,2,0.255,3,0.141,4,0.99,5,0.99,6,0.99,7,0.101,9,0.99,10,2.708,11,1.815,13,1.709,15,1.709,17,0.432,18,0.017,19,0.378,20,0.114,21,0.006,23,0.676,24,1.427,25,1.061,26,1.366,27,1.995,28,0.99,29,1.082,30,0.99,31,0.833,32,1.639,33,0.704,34,0.99,35,0.833,36,0.947,37,0.99,38,0.833,39,0.99,40,0.833,41,0.869,42,1.491,43,0.799,44,0.99,45,1.255,46,0.99,47,0.833,48,1.801,49,1.255,50,0.99,51,0.99,52,0.833,53,0.947,54,1.491,55,0.833,56,1.366,57,0.833,58,0.99,59,0.833,60,0.99,61,1.61,62,0.99,63,0.833,64,0.99,65,0.833,66,0.99,67,0.008,68,0.008,86,1.527,97,1.035,116,1.388,121,1.153,123,0.258,124,1.017,129,1.054,131,1.173,132,0.725,133,1.173,134,1.242,135,3.371,136,1.469,137,1.316,144,0.799,153,1.752,154,2.348,161,1.962,162,3.492,163,0.788,164,3.944,165,3.143,166,2.183,170,1.106,171,1.017,174,1.571,183,2.109,184,2.109,186,3.23,188,1.662,190,3.886,193,1.961,206,0.975,235,1.469,275,1.732,307,2.048,360,3.919,361,2.521,383,2.109,386,1.662,387,1.559,405,1.793,406,2.903,435,3.542,473,2.704,624,4.741,626,2.352,634,1.559,687,3.176,688,3.176,704,2.109,705,2.109,1099,2.348,1187,2.352,1188,2.352,1189,2.109,1220,2.352,1221,4.098,1222,4.098,1223,5.344,1224,4.098,1225,4.098,1226,2.721,1227,6.182,1228,5.485,1229,5.485,1230,5.485,1231,4.098,1232,2.721,1233,2.721,1234,2.721,1235,2.721,1236,4.098,1237,2.721,1238,4.098,1239,2.721,1240,2.721,1241,2.721,1242,2.721,1243,2.352,1244,2.721,1245,2.721,1246,2.721,1247,2.721,1248,2.721,1249,2.721,1250,4.098,1251,4.098,1252,4.098,1253,2.721,1254,2.721,1255,2.721,1256,4.929,1257,2.721,1258,2.721,1259,2.721,1260,2.352,1261,4.098,1262,2.721,1263,2.721,1264,2.721,1265,2.721,1266,2.721]],["title/modules/UiModule.html",[69,0.956,1267,2.728]],["body/modules/UiModule.html",[2,0.184,3,0.184,7,0.133,17,0.483,18,0.017,19,0.495,20,0.209,21,0.007,23,0.885,31,2.079,35,2.079,40,2.079,47,2.079,48,1.091,52,2.079,55,2.079,57,2.079,59,2.079,61,1.993,63,2.079,65,2.079,67,0.01,68,0.01,69,1.238,71,1.638,72,2.934,73,1.819,74,2.289,83,3.665,85,2.079,86,0.849,87,1.638,89,2.291,96,3.082,97,1.356,98,3.082,99,2.763,100,3.082,101,3.082,199,2.763,353,2.763,361,3.121,387,2.042,497,3.665,705,2.763,1081,2.763,1132,2.763,1267,5.654,1268,3.082,1269,3.082,1270,3.082,1271,3.082,1272,4.45,1273,3.565,1274,4.986,1275,4.986,1276,3.082,1277,3.082,1278,3.082,1279,3.082,1280,3.565,1281,3.565,1282,4.986,1283,3.565,1284,3.565,1285,3.565,1286,3.565,1287,3.565,1288,3.565,1289,3.565,1290,3.565,1291,3.565,1292,3.565,1293,3.565,1294,3.082,1295,3.046,1296,3.565,1297,3.565]],["title/modules/UiRoutingModule.html",[69,0.956,1272,2.523]],["body/modules/UiRoutingModule.html",[0,0.755,2,0.281,3,0.281,7,0.202,17,0.463,18,0.017,19,0.755,20,0.275,21,0.011,61,1.927,67,0.013,68,0.013,69,1.349,89,3.017,126,4.042,136,2.933,141,4.697,142,4.651,144,1.595,145,2.933,148,4.697,149,4.697,188,3.32,190,3.85,194,4.011,1189,4.212,1243,4.697,1272,4.302,1279,4.697,1298,4.212,1299,5.434]],["title/interfaces/UiState.html",[185,1.179,1300,2.728]],["body/interfaces/UiState.html",[2,0.232,3,0.232,7,0.167,17,0.4,18,0.017,20,0.326,32,1.761,67,0.012,68,0.012,97,1.709,123,0.425,132,0.594,144,2.172,158,1.564,163,1.12,185,2.096,257,2.065,394,2.745,405,2.12,466,2.282,473,2.55,1099,4.297,1295,2.745,1300,4.583,1301,3.483,1302,5.038,1303,5.038,1304,6.469,1305,5.038,1306,4.493,1307,6.283,1308,6.396,1309,4.493,1310,4.493,1311,3.884,1312,4.518,1313,3.884,1314,4.333,1315,3.884,1316,3.884,1317,3.884,1318,3.884,1319,3.884]],["title/components/WeatherComponent.html",[0,0.535,63,1.179]],["body/components/WeatherComponent.html",[0,0.978,1,1.344,2,0.297,3,0.227,4,1.597,5,1.597,6,1.597,7,0.163,9,1.597,10,2.874,11,1.992,13,2.394,15,2.394,17,0.271,18,0.016,19,0.61,20,0.184,21,0.009,23,1.09,24,1.999,25,1.486,26,1.914,27,2.468,28,1.597,29,1.056,30,1.597,31,1.344,32,1.752,33,1.137,34,1.597,35,1.344,36,1.529,37,1.597,38,1.344,39,1.597,40,1.344,41,1.403,42,2.089,43,1.289,44,1.597,45,1.344,46,1.597,47,1.344,48,2.156,49,1.344,50,1.597,51,1.597,52,1.344,53,1.529,54,2.089,55,1.344,56,1.464,57,1.344,58,1.597,59,1.344,60,1.597,61,1.289,62,1.597,63,2.077,64,1.597,65,1.344,66,1.597,67,0.012,68,0.012,121,1.616,123,0.416,124,1.425,129,0.879,134,0.808,161,2.546,166,2.701,174,1.31,206,1.523,1320,3.796,1321,5.26,1322,5.741,1323,5.741,1324,4.391,1325,4.391]],["title/modules/WeatherModule.html",[69,0.956,892,2.523]],["body/modules/WeatherModule.html",[2,0.284,3,0.284,7,0.204,17,0.438,18,0.016,19,0.764,20,0.277,21,0.011,23,1.365,67,0.014,68,0.014,69,1.642,71,2.527,72,3.374,73,2.805,74,2.823,85,2.757,86,1.309,87,2.527,89,3.039,892,5.009,1326,4.753,1327,4.753,1328,4.67,1329,5.498,1330,5.498]],["title/injectables/WeatherService.html",[191,1.13,1328,2.352]],["body/injectables/WeatherService.html",[2,0.281,3,0.281,7,0.203,17,0.336,18,0.016,19,0.757,20,0.228,21,0.011,67,0.013,68,0.013,74,2.617,86,1.746,123,0.515,124,1.632,129,0.834,134,1.002,158,1.896,171,1.632,174,1.5,191,2.073,201,3.18,224,1.988,304,2.876,344,3.767,1321,5.096,1328,4.017,1331,4.708,1332,6.574,1333,6.574,1334,5.446]],["title/components/WizardComponent.html",[0,0.535,65,1.179]],["body/components/WizardComponent.html",[0,0.833,1,0.871,2,0.219,3,0.147,4,1.035,5,1.035,6,1.035,7,0.106,9,1.035,10,2.726,11,1.646,13,1.767,15,1.767,17,0.413,18,0.017,19,0.395,20,0.119,21,0.006,23,0.706,24,1.475,25,1.097,26,1.413,27,2.04,28,1.035,29,1.031,30,1.035,31,0.871,32,1.702,33,1.31,34,1.035,35,0.871,36,1.762,37,1.035,38,0.871,39,1.035,40,0.871,41,0.909,42,1.541,43,0.835,44,1.035,45,0.871,46,1.035,47,0.871,48,1.836,49,0.871,50,1.035,51,1.035,52,0.871,53,1.762,54,1.541,55,0.871,56,1.87,57,0.871,58,1.035,59,0.871,60,1.035,61,0.835,62,1.035,63,0.871,64,1.035,65,1.717,66,1.035,67,0.009,68,0.009,97,1.082,121,1.192,123,0.531,124,1.052,129,1.047,131,1.009,132,0.792,133,1.009,134,1.103,137,1.376,144,1.244,150,2.162,153,1.353,158,0.991,161,2.015,162,3.586,163,0.814,164,3.988,165,3.213,166,2.232,170,0.768,171,0.706,174,1.527,182,1.536,183,2.205,184,2.205,201,2.049,205,3.213,206,1.009,209,1.009,211,1.452,223,3.002,257,1.947,307,1.762,341,2.214,350,1.376,360,3.978,361,2.577,384,2.016,386,1.738,387,1.63,419,1.738,421,2.861,466,1.87,479,2.9,488,1.738,532,2.287,620,1.738,630,2.205,634,1.63,659,2.205,687,3.284,688,3.284,704,2.205,727,2.016,803,4.347,925,2.205,1140,2.459,1169,2.459,1207,3.662,1223,4.848,1335,2.459,1336,4.237,1337,4.237,1338,5.434,1339,5.608,1340,4.237,1341,2.845,1342,6.286,1343,4.237,1344,2.845,1345,2.845,1346,2.845,1347,4.237,1348,5.608,1349,2.845,1350,4.237,1351,4.848,1352,4.237,1353,2.845,1354,2.845,1355,5.062,1356,2.845,1357,2.845,1358,5.062,1359,2.845,1360,2.845,1361,2.845,1362,2.845,1363,6.511,1364,2.845,1365,4.237,1366,2.845,1367,2.845,1368,2.845,1369,2.845,1370,2.845,1371,2.845,1372,2.845,1373,2.845]],["title/injectables/WizardService.html",[191,1.13,361,1.77]],["body/injectables/WizardService.html",[2,0.161,3,0.161,7,0.116,11,0.918,17,0.45,18,0.017,19,0.434,20,0.131,21,0.006,29,1.079,48,1.39,56,1.042,67,0.009,68,0.009,86,1.397,97,1.189,116,1.595,123,0.682,124,1.127,129,1.073,131,1.397,132,0.963,133,1.397,134,1.196,150,2.728,153,2.077,154,1.791,163,0.873,174,1.663,191,1.569,206,1.081,209,1.668,216,3.585,223,3.788,224,2.184,275,1.443,306,2.586,307,2.335,359,2.215,360,3.972,361,2.087,362,3.167,385,2.423,386,1.91,387,1.791,405,1.652,457,2.196,459,3.807,465,1.791,466,1.514,469,1.687,475,1.791,477,1.791,478,2.601,479,3.571,480,1.791,485,2.886,497,3.167,634,1.791,638,3.362,1086,4.622,1096,2.702,1099,3.725,1200,3.585,1294,2.702,1314,3.807,1321,4.145,1328,3.585,1338,5.387,1351,5.072,1374,2.702,1375,4.54,1376,5.868,1377,5.868,1378,4.54,1379,4.54,1380,4.54,1381,3.126,1382,4.54,1383,3.126,1384,3.126,1385,3.126,1386,3.126,1387,4.54,1388,3.126,1389,3.126,1390,3.126,1391,3.126,1392,3.126,1393,3.126,1394,3.126,1395,3.126,1396,3.126,1397,6.501,1398,3.126,1399,3.126,1400,3.126,1401,3.126,1402,3.126,1403,3.126,1404,3.126]],["title/interfaces/WizardState.html",[185,1.179,1314,2.352]],["body/interfaces/WizardState.html",[2,0.194,3,0.194,7,0.14,17,0.365,18,0.017,20,0.297,32,1.517,67,0.011,68,0.011,74,2.06,123,0.56,128,1.92,132,0.842,134,1.27,144,1.962,154,3.652,158,1.31,163,0.995,170,1.016,178,1.497,185,1.585,193,2.125,209,1.517,275,1.72,341,3.095,394,4.219,405,2.66,407,2.665,408,4.735,465,2.156,466,2.571,467,2.031,469,2.031,473,3.199,475,2.156,477,2.156,478,2.156,480,2.156,481,2.966,532,2.794,602,2.156,1099,4.398,1295,2.298,1303,4.474,1314,4.636,1405,2.665,1406,3.762,1407,3.762,1408,3.762,1409,2.916,1410,3.252,1411,5.176,1412,3.762,1413,5.176,1414,5.176,1415,5.176,1416,5.176,1417,3.762,1418,2.916,1419,3.252,1420,2.916,1421,3.252,1422,2.916,1423,3.252,1424,2.916,1425,3.252]],["title/coverage.html",[1426,4.546]],["body/coverage.html",[0,1.033,1,0.893,7,0.108,8,2.522,18,0.017,21,0.015,31,0.893,35,0.893,38,0.893,40,0.893,43,0.856,45,0.893,47,0.893,49,0.893,52,0.893,55,0.893,57,0.893,59,0.893,61,0.856,63,0.893,65,0.893,67,0.009,68,0.009,83,1.574,86,0.694,108,2.261,117,2.067,118,3.058,119,2.261,120,2.522,128,2.621,132,0.385,156,1.671,157,2.522,185,1.942,186,1.911,187,3.345,188,2.637,189,3.345,191,1.978,194,1.782,198,2.522,199,2.261,200,2.522,212,2.261,213,2.522,216,1.782,219,2.522,226,1.488,227,3.635,231,1.488,241,1.488,277,1.574,295,1.574,298,1.488,304,1.276,352,2.522,353,2.261,354,2.522,361,1.34,362,1.574,394,1.782,405,1.061,440,2.522,446,1.782,457,1.411,458,3.27,466,1.713,470,1.488,471,1.488,472,1.488,473,1.276,482,2.522,483,2.522,497,1.574,571,2.522,583,2.261,602,4.507,622,2.522,623,2.522,638,1.671,641,2.522,643,2.261,686,2.522,706,2.261,709,1.911,712,2.522,731,2.522,859,1.671,860,2.261,881,2.522,882,2.522,896,2.522,960,2.261,961,3.345,1080,2.522,1081,2.261,1082,3.345,1131,2.522,1132,2.261,1174,2.261,1192,2.522,1200,1.782,1203,2.522,1206,2.522,1213,3.345,1220,2.522,1295,1.782,1298,2.261,1300,2.067,1301,5.224,1312,2.261,1314,2.637,1320,2.522,1328,1.782,1331,2.522,1335,2.522,1374,2.522,1405,4.651,1409,2.261,1418,2.261,1420,2.261,1422,2.261,1424,2.261,1426,2.522,1427,2.917,1428,3.731,1429,5.909,1430,7.102,1431,7.002,1432,5.137,1433,7.435,1434,4.907,1435,5.677,1436,5.677,1437,2.522,1438,2.917,1439,2.917,1440,2.917,1441,2.917,1442,4.316,1443,2.917,1444,2.522,1445,2.917,1446,4.316,1447,4.316,1448,2.917,1449,2.917,1450,2.917,1451,4.316,1452,2.917,1453,5.137,1454,6.344,1455,2.917,1456,2.917,1457,2.917,1458,2.917,1459,2.917,1460,2.917,1461,2.522,1462,2.917,1463,2.522,1464,2.917,1465,2.917,1466,2.917,1467,2.917,1468,2.917,1469,2.917,1470,2.917,1471,2.522,1472,2.917,1473,2.917,1474,3.731,1475,2.522,1476,2.522,1477,2.522,1478,2.917,1479,2.917]],["title/dependencies.html",[71,2.129,1480,3.214]],["body/dependencies.html",[18,0.017,19,0.707,67,0.013,68,0.013,71,2.338,92,4.888,93,4.467,97,1.935,99,3.943,136,2.746,137,2.46,211,2.596,581,4.397,582,4.397,617,3.943,634,2.915,792,4.397,794,4.397,959,4.397,1178,4.397,1183,4.397,1184,4.397,1276,4.397,1277,4.397,1278,4.397,1481,5.087,1482,7.749,1483,5.087,1484,5.087,1485,5.087,1486,6.305,1487,5.087,1488,5.087,1489,5.087,1490,6.853,1491,5.087,1492,5.087,1493,5.087,1494,5.087,1495,6.305,1496,5.087,1497,5.087,1498,5.087,1499,5.087,1500,5.087,1501,5.087,1502,5.087,1503,5.087,1504,5.087,1505,5.087]],["title/miscellaneous/enumerations.html",[1506,1.735,1507,4.004]],["body/miscellaneous/enumerations.html",[18,0.014,32,1.839,33,1.491,67,0.014,68,0.014,86,1.618,123,0.545,171,1.892,178,2.292,405,2.095,457,2.785,458,3.108,466,2.411,467,3.108,469,3.669,470,2.938,471,2.938,472,2.938,473,2.519,474,3.518,1506,3.108,1507,4.978,1508,4.978]],["title/miscellaneous/functions.html",[128,2.364,1506,1.735]],["body/miscellaneous/functions.html",[18,0.015,29,1.246,32,1.364,67,0.014,68,0.014,108,5.594,123,0.542,128,2.924,131,1.613,133,1.613,178,2.698,315,4.135,467,3.093,1099,3.283,1295,3.501,1405,4.06,1410,4.953,1463,5.858,1474,4.953,1475,5.858,1506,3.093,1509,6.777,1510,4.953,1511,5.73,1512,5.73]],["title/index.html",[123,0.304,337,1.477,621,2.491]],["body/index.html",[7,0.231,18,0.013,22,5.26,26,1.659,41,1.59,67,0.013,68,0.013,128,3.174,150,3.174,153,1.987,222,2.721,274,2.54,298,3.174,419,3.041,430,5.377,431,6.325,485,3.358,500,3.858,507,4.303,532,3.663,616,4.303,617,3.858,618,3.261,619,4.303,620,3.041,647,4.303,658,5.036,836,4.303,838,4.303,897,5.377,982,4.303,1513,4.977,1514,4.977,1515,4.977,1516,4.977,1517,4.977,1518,4.977,1519,4.977,1520,4.977,1521,4.977,1522,7.774,1523,4.977,1524,6.785,1525,6.22,1526,4.977,1527,7.571,1528,4.977,1529,4.977,1530,6.22,1531,4.977,1532,4.977,1533,4.977,1534,4.977,1535,4.977,1536,4.977,1537,4.977,1538,4.977,1539,4.977,1540,4.977,1541,4.303]],["title/license.html",[337,1.477,621,2.491,1542,2.778]],["body/license.html",[7,0.186,18,0.013,67,0.013,68,0.013,74,1.994,87,2.302,178,1.994,201,2.423,272,2.87,296,2.87,298,2.556,370,4.331,373,3.883,414,4.331,426,4.425,454,5.883,455,4.331,456,4.331,618,4.093,803,3.883,921,4.331,1121,5.399,1541,4.331,1542,4.331,1543,5.01,1544,5.01,1545,5.01,1546,5.01,1547,5.01,1548,5.01,1549,6.246,1550,7.125,1551,7.729,1552,6.246,1553,6.805,1554,5.01,1555,6.805,1556,5.01,1557,5.01,1558,5.01,1559,5.01,1560,5.01,1561,5.01,1562,5.01,1563,5.01,1564,5.01,1565,5.01,1566,5.01,1567,5.01,1568,6.246,1569,6.246,1570,5.01,1571,5.01,1572,6.246,1573,4.331,1574,5.01,1575,5.01,1576,5.01,1577,5.01,1578,5.01,1579,5.01,1580,5.01,1581,5.01,1582,5.01,1583,5.01,1584,5.01,1585,5.01,1586,5.01,1587,5.01,1588,5.01,1589,5.01]],["title/modules.html",[69,1.306]],["body/modules.html",[18,0.014,67,0.014,68,0.014,69,1.362,70,3.886,79,3.594,80,3.594,81,3.594,82,3.594,83,2.961,84,3.594,93,5.522,304,3.099,859,3.143,892,3.594,1128,6.737,1267,3.886,1272,3.594,1590,7.793,1591,7.923,1592,7.084]],["title/overview.html",[1593,4.546]],["body/overview.html",[0,0.498,1,2.137,18,0.016,20,0.15,21,0.007,23,0.889,31,1.765,35,1.765,38,2.137,40,1.765,43,1.692,45,2.137,47,1.765,49,2.137,52,1.765,55,1.765,57,1.765,59,1.765,61,1.692,63,1.765,65,1.765,67,0.01,68,0.01,69,1.242,70,5.494,71,1.646,72,1.827,73,1.827,74,1.426,75,3.096,76,3.096,77,3.096,78,3.096,79,3.777,80,4.302,81,4.302,82,4.574,83,4.136,84,4.302,85,2.086,86,0.853,87,1.646,126,2.052,185,1.097,191,1.051,214,3.096,215,3.096,216,3.522,361,2.649,362,3.111,497,3.111,636,3.096,637,3.096,638,3.303,721,3.096,859,3.999,889,3.096,890,3.096,891,3.096,892,4.302,1170,3.096,1171,3.096,1172,3.096,1173,3.096,1198,3.096,1199,3.096,1200,3.522,1267,5.643,1268,3.096,1269,3.096,1270,3.096,1271,3.096,1272,3.777,1326,3.096,1327,3.096,1328,3.522,1444,3.096,1471,3.096,1593,3.096,1594,3.581,1595,5.002]],["title/routes.html",[126,3.013]],["body/routes.html",[18,0.015,67,0.015,68,0.015,126,3.585]],["title/miscellaneous/typealiases.html",[1506,1.735,1596,4.632]],["body/miscellaneous/typealiases.html",[18,0.016,67,0.014,68,0.014,86,1.424,123,0.566,132,0.791,457,2.893,458,3.229,470,3.052,471,3.052,472,3.052,481,4.209,1506,3.229,1508,5.171,1597,5.982]],["title/miscellaneous/variables.html",[1429,3.591,1506,1.735]],["body/miscellaneous/variables.html",[11,0.754,18,0.017,20,0.241,32,0.934,67,0.008,68,0.008,83,2.569,85,1.072,116,1.311,118,1.821,123,0.243,128,2.002,132,0.991,142,1.821,150,1.311,154,2.248,170,2.024,171,1.861,185,0.787,193,1.308,209,0.934,257,1.181,274,1.311,275,1.059,288,1.311,341,1.124,394,3.254,405,2.087,421,1.311,426,2.78,466,2.407,473,2.51,485,2.569,488,1.57,495,3.119,513,2.78,524,3.042,539,4.596,583,3.689,600,1.821,601,3.392,602,2.248,604,2.222,618,1.684,620,1.57,643,1.992,658,1.821,706,3.689,709,3.119,713,2.222,755,2.222,859,3.052,860,1.992,861,2.222,862,2.222,863,2.222,865,2.222,866,2.222,867,2.222,868,2.222,869,2.222,870,2.222,871,2.222,872,2.222,873,2.222,937,3.392,960,3.689,961,4.688,966,4.959,1029,1.992,1038,3.392,1040,2.222,1099,3.886,1104,2.222,1166,2.222,1167,2.222,1174,1.992,1177,2.222,1179,2.222,1180,2.222,1181,2.222,1182,2.222,1213,1.992,1260,2.222,1295,2.908,1298,1.992,1300,1.821,1301,1.992,1302,2.222,1305,3.392,1307,4.959,1308,6.046,1311,2.222,1312,4.129,1313,2.222,1314,4.325,1315,2.222,1316,2.222,1317,2.222,1318,2.222,1319,2.222,1405,1.821,1409,3.689,1418,3.689,1419,2.222,1420,3.689,1421,2.222,1422,3.689,1423,2.222,1424,3.689,1425,2.222,1428,4.605,1429,1.992,1434,2.222,1437,2.222,1461,2.222,1476,2.222,1477,2.222,1506,1.387,1510,4.959,1573,2.222,1598,2.57,1599,6.291,1600,2.57,1601,2.57,1602,2.57,1603,2.57,1604,2.57,1605,2.57,1606,2.57,1607,2.57,1608,2.57,1609,2.57,1610,2.57,1611,2.57,1612,2.57,1613,2.57,1614,2.57,1615,2.57,1616,2.57,1617,2.57,1618,2.57,1619,2.57,1620,2.57,1621,2.57,1622,3.924,1623,2.57,1624,2.57,1625,2.57,1626,3.924,1627,3.924,1628,2.57,1629,3.924,1630,2.57,1631,2.57,1632,2.57,1633,2.57,1634,3.924,1635,2.57,1636,2.57,1637,2.57,1638,2.57,1639,5.327,1640,2.57,1641,3.924,1642,2.57,1643,5.327,1644,5.327,1645,2.57,1646,2.57,1647,2.57,1648,2.57,1649,2.57,1650,2.57,1651,2.57,1652,2.57,1653,2.57,1654,2.57]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":602,"title":{},"body":{"components/HomeComponent.html":{},"components/MapComponent.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0012",{"_index":818,"title":{},"body":{"injectables/MapService.html":{}}}],["0.003",{"_index":821,"title":{},"body":{"injectables/MapService.html":{}}}],["0.3",{"_index":599,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.5",{"_index":610,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.8.26",{"_index":1505,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1465,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1453,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["0m",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":600,"title":{},"body":{"components/HomeComponent.html":{},"components/MapComponent.html":{},"injectables/NetworkService.html":{},"miscellaneous/variables.html":{}}}],["1.1.0",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1447,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":858,"title":{},"body":{"injectables/MapService.html":{}}}],["100",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["10000",{"_index":856,"title":{},"body":{"injectables/MapService.html":{}}}],["11",{"_index":1471,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["11/15",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1444,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["12.476358",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12/21",{"_index":1452,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":721,"title":{},"body":{"components/MapComponent.html":{},"overview.html":{}}}],["18",{"_index":712,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["2.0.8",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1464,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1544,"title":{},"body":{"license.html":{}}}],["21",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":1166,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":1264,"title":{},"body":{"components/UiComponent.html":{}}}],["26",{"_index":1466,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3/12",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["3/14",{"_index":1470,"title":{},"body":{"coverage.html":{}}}],["3/16",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["3/21",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":713,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["4/15",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["4/18",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["41.910943",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["5/14",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1434,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":1260,"title":{},"body":{"components/UiComponent.html":{},"miscellaneous/variables.html":{}}}],["57",{"_index":1451,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1595,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["6.0.5",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":607,"title":{},"body":{"components/HomeComponent.html":{}}}],["73",{"_index":1455,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1594,"title":{},"body":{"overview.html":{}}}],["840",{"_index":612,"title":{},"body":{"components/HomeComponent.html":{}}}],["abov",{"_index":1567,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":159,"title":{},"body":{"classes/BaseComponent.html":{}}}],["accessor",{"_index":1140,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["account",{"_index":256,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["action",{"_index":178,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["action.payload",{"_index":1416,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.nextindex",{"_index":1417,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.payload.step",{"_index":1414,"title":{},"body":{"interfaces/WizardState.html":{}}}],["action.typ",{"_index":1412,"title":{},"body":{"interfaces/WizardState.html":{}}}],["actionreducermap",{"_index":1305,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["actions/wizard.act",{"_index":1408,"title":{},"body":{"interfaces/WizardState.html":{}}}],["activ",{"_index":1514,"title":{},"body":{"index.html":{}}}],["actual_compon",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["add",{"_index":595,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{}}}],["addedg",{"_index":557,"title":{},"body":{"classes/Graph.html":{}}}],["addedge(edg",{"_index":335,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["addorupdatenod",{"_index":558,"title":{},"body":{"classes/Graph.html":{}}}],["addorupdatenode(nod",{"_index":318,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["address",{"_index":659,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["administr",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":572,"title":{},"body":{"components/HomeComponent.html":{}}}],["again",{"_index":416,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["algorithm",{"_index":347,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["alias",{"_index":1597,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":1562,"title":{},"body":{"license.html":{}}}],["angular",{"_index":838,"title":{},"body":{"injectables/MapService.html":{},"index.html":{}}}],["angular/anim",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/stepp",{"_index":1359,"title":{},"body":{"components/WizardComponent.html":{}}}],["angular/cli",{"_index":1526,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":1178,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":956,"title":{},"body":{"injectables/NetworkService.html":{},"modules/SharedModule.html":{}}}],["angular/compil",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1183,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":211,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":634,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/MaterialModule.html":{},"components/MessageArchivedComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":136,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"dependencies.html":{}}}],["anim",{"_index":581,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["animate('500m",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationtriggermetadata",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anime.timelin",{"_index":594,"title":{},"body":{"components/HomeComponent.html":{}}}],["animej",{"_index":582,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["anoth",{"_index":420,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["api",{"_index":658,"title":{},"body":{"injectables/LocationService.html":{},"injectables/NetworkService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.de/api/interpret",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apikey",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["app.compon",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initi",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":960,"title":{},"body":{"injectables/NetworkService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appconfig.apis.overpassapi.highway",{"_index":1041,"title":{},"body":{"injectables/NetworkService.html":{}}}],["appconfig.apis.overpassapi.timeout",{"_index":1030,"title":{},"body":{"injectables/NetworkService.html":{}}}],["appconfig.apis.overpassapi.url",{"_index":967,"title":{},"body":{"injectables/NetworkService.html":{}}}],["appli",{"_index":522,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/SimulationService.html":{}}}],["application/json",{"_index":1010,"title":{},"body":{"injectables/NetworkService.html":{}}}],["application/x",{"_index":969,"title":{},"body":{"injectables/NetworkService.html":{}}}],["application?').pip",{"_index":1254,"title":{},"body":{"components/UiComponent.html":{}}}],["application?').subscrib",{"_index":1257,"title":{},"body":{"components/UiComponent.html":{}}}],["appmodul",{"_index":70,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppreloadingstrategi",{"_index":117,"title":{"classes/AppPreloadingStrategy.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["approutingmodul",{"_index":79,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arc",{"_index":265,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["archived.compon",{"_index":1187,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["archived.component.t",{"_index":882,"title":{},"body":{"components/MessageArchivedComponent.html":{},"coverage.html":{}}}],["archived.component.ts:11",{"_index":885,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["archived.component.ts:13",{"_index":886,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["area",{"_index":421,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["area'},{'nam",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["area(p",{"_index":855,"title":{},"body":{"injectables/MapService.html":{}}}],["area.compon",{"_index":1282,"title":{},"body":{"modules/UiModule.html":{}}}],["area.component.html",{"_index":1084,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.scss",{"_index":1083,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.t",{"_index":1082,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"coverage.html":{}}}],["area.component.ts:16",{"_index":1088,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:18",{"_index":1087,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:21",{"_index":1134,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:23",{"_index":1135,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:27",{"_index":1090,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:28",{"_index":1143,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:33",{"_index":1095,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:35",{"_index":1147,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:42",{"_index":1091,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:43",{"_index":1133,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:46",{"_index":1094,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:50",{"_index":1093,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area.component.ts:53",{"_index":1136,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:59",{"_index":1139,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:69",{"_index":1137,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:77",{"_index":1138,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["area.component.ts:78",{"_index":1089,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["area/search",{"_index":1081,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules/UiModule.html":{},"coverage.html":{}}}],["area/select",{"_index":1132,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"modules/UiModule.html":{},"coverage.html":{}}}],["areamaxlimit",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaminlimit",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aris",{"_index":1589,"title":{},"body":{"license.html":{}}}],["arr",{"_index":995,"title":{},"body":{"injectables/NetworkService.html":{}}}],["arr.length",{"_index":996,"title":{},"body":{"injectables/NetworkService.html":{}}}],["assign",{"_index":266,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["associ",{"_index":373,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/NetworkService.html":{},"license.html":{}}}],["attach",{"_index":273,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["attribut",{"_index":267,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["author",{"_index":1579,"title":{},"body":{"license.html":{}}}],["avail",{"_index":1592,"title":{},"body":{"modules.html":{}}}],["bachelor'",{"_index":1516,"title":{},"body":{"index.html":{}}}],["bar",{"_index":883,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["bar'},{'nam",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["base",{"_index":344,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{}}}],["basecompon",{"_index":156,"title":{"classes/BaseComponent.html":{}},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"coverage.html":{}}}],["basecomponent:11",{"_index":377,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["basecomponent:13",{"_index":376,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["basecomponent:22",{"_index":380,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["basecomponent:27",{"_index":378,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["basecomponent:32",{"_index":379,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["basecomponent:9",{"_index":381,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["basictimelin",{"_index":593,"title":{},"body":{"components/HomeComponent.html":{}}}],["bbox",{"_index":1032,"title":{},"body":{"injectables/NetworkService.html":{}}}],["becom",{"_index":427,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["behaviorsubject",{"_index":791,"title":{},"body":{"injectables/MapService.html":{}}}],["behaviorsubject(nul",{"_index":782,"title":{},"body":{"injectables/MapService.html":{}}}],["beta.15",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":229,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{}}}],["blur",{"_index":1367,"title":{},"body":{"components/WizardComponent.html":{}}}],["bodi",{"_index":973,"title":{},"body":{"injectables/NetworkService.html":{}}}],["boolean",{"_index":193,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/MapComponent.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["bound",{"_index":727,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/WizardComponent.html":{}}}],["bounds.getnortheast().lat",{"_index":832,"title":{},"body":{"injectables/MapService.html":{}}}],["bounds.getnortheast().lng",{"_index":834,"title":{},"body":{"injectables/MapService.html":{}}}],["bounds.getsouthwest().lat",{"_index":833,"title":{},"body":{"injectables/MapService.html":{}}}],["bounds.getsouthwest().lng",{"_index":835,"title":{},"body":{"injectables/MapService.html":{}}}],["box",{"_index":1031,"title":{},"body":{"injectables/NetworkService.html":{}}}],["break",{"_index":417,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["brows",{"_index":1591,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":725,"title":{},"body":{"components/MapComponent.html":{},"injectables/NetworkService.html":{}}}],["buildbodi",{"_index":898,"title":{},"body":{"injectables/NetworkService.html":{}}}],["buildbody(queri",{"_index":913,"title":{},"body":{"injectables/NetworkService.html":{}}}],["buildbound",{"_index":734,"title":{},"body":{"injectables/MapService.html":{}}}],["buildbounds(cent",{"_index":749,"title":{},"body":{"injectables/MapService.html":{}}}],["buildqueri",{"_index":899,"title":{},"body":{"injectables/NetworkService.html":{}}}],["c",{"_index":1543,"title":{},"body":{"license.html":{}}}],["calcarea",{"_index":735,"title":{},"body":{"injectables/MapService.html":{}}}],["calcarea(n",{"_index":751,"title":{},"body":{"injectables/MapService.html":{}}}],["calclinkflow",{"_index":243,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calcul",{"_index":264,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["calendar_today",{"_index":1159,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["call",{"_index":932,"title":{},"body":{"injectables/NetworkService.html":{}}}],["cancomponentdeactiv",{"_index":186,"title":{"interfaces/CanComponentDeactivate.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/UiComponent.html":{},"coverage.html":{}}}],["candeactiv",{"_index":190,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["candeactivate(compon",{"_index":195,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["candeactivateguard",{"_index":194,"title":{"injectables/CanDeactivateGuard.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{},"coverage.html":{}}}],["case",{"_index":408,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/WizardState.html":{}}}],["catch",{"_index":1005,"title":{},"body":{"injectables/NetworkService.html":{}}}],["catch((error",{"_index":1107,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["catcherror",{"_index":958,"title":{},"body":{"injectables/NetworkService.html":{}}}],["catcherror((error",{"_index":978,"title":{},"body":{"injectables/NetworkService.html":{}}}],["cd",{"_index":1537,"title":{},"body":{"index.html":{}}}],["center",{"_index":488,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["center.lat",{"_index":817,"title":{},"body":{"injectables/MapService.html":{}}}],["center.lng",{"_index":820,"title":{},"body":{"injectables/MapService.html":{}}}],["central1",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["central1/trafficdata",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chang",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["changeofconditionscompon",{"_index":31,"title":{"components/ChangeOfConditionsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changes['cent",{"_index":543,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["changes['zoom",{"_index":545,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["charg",{"_index":1548,"title":{},"body":{"license.html":{}}}],["check",{"_index":412,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{}}}],["checkrect",{"_index":736,"title":{},"body":{"injectables/MapService.html":{}}}],["claim",{"_index":1582,"title":{},"body":{"license.html":{}}}],["class",{"_index":21,"title":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"classes/Clock.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"classes/Graph.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":1525,"title":{},"body":{"index.html":{}}}],["click",{"_index":506,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["clock",{"_index":212,"title":{"classes/Clock.html":{}},"body":{"classes/Clock.html":{},"coverage.html":{}}}],["cloud",{"_index":938,"title":{},"body":{"injectables/NetworkService.html":{}}}],["cloudfunctions.net/trafficdata",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_demandmodul",{"_index":214,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_demandmodule_provid",{"_index":215,"title":{},"body":{"modules/DemandModule.html":{},"overview.html":{}}}],["cluster_locationmodul",{"_index":636,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_provid",{"_index":637,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_networkmodul",{"_index":889,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_import",{"_index":890,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_networkmodule_provid",{"_index":891,"title":{},"body":{"modules/NetworkModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":1170,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1171,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1173,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1172,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_simulationmodul",{"_index":1198,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_simulationmodule_provid",{"_index":1199,"title":{},"body":{"modules/SimulationModule.html":{},"overview.html":{}}}],["cluster_uimodul",{"_index":1268,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_declar",{"_index":1269,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_import",{"_index":1270,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_provid",{"_index":1271,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_weathermodul",{"_index":1326,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_provid",{"_index":1327,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":879,"title":{},"body":{"modules/MaterialModule.html":{}}}],["codeaddress",{"_index":650,"title":{},"body":{"injectables/LocationService.html":{}}}],["codeaddress(address",{"_index":655,"title":{},"body":{"injectables/LocationService.html":{}}}],["combin",{"_index":268,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.incomingedg",{"_index":329,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.outgoingedg",{"_index":332,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["combine(existingnode.tag",{"_index":326,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["commonmodul",{"_index":1177,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":614,"title":{},"body":{"components/HomeComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component.candeactiv",{"_index":196,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["component_templ",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["comput",{"_index":1517,"title":{},"body":{"index.html":{}}}],["condit",{"_index":201,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"license.html":{}}}],["conditions'},{'nam",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["conditions.compon",{"_index":1287,"title":{},"body":{"modules/UiModule.html":{}}}],["conditions.component.html",{"_index":203,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.scss",{"_index":202,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.t",{"_index":200,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"coverage.html":{}}}],["conditions.component.ts:11",{"_index":208,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:13",{"_index":207,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions.component.ts:17",{"_index":210,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{}}}],["conditions/chang",{"_index":199,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"modules/UiModule.html":{},"coverage.html":{}}}],["config",{"_index":710,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["config).firebase.projectid",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config).googlemaps.apikey",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config).openweathermap.apikey",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.json",{"_index":1535,"title":{},"body":{"index.html":{}}}],["config.t",{"_index":1428,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configur",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":414,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"license.html":{}}}],["consol",{"_index":1528,"title":{},"body":{"index.html":{}}}],["console.log(this.network.getgraph",{"_index":439,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["const",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"modules/SharedModule.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["constructor",{"_index":206,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(@inject(mat_snack_bar_data",{"_index":888,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(data",{"_index":884,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["constructor(dialogref",{"_index":627,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(edgeid",{"_index":244,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(elementref",{"_index":577,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(formbuild",{"_index":1341,"title":{},"body":{"components/WizardComponent.html":{}}}],["constructor(http",{"_index":909,"title":{},"body":{"injectables/NetworkService.html":{}}}],["constructor(map",{"_index":496,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["constructor(maticonregistri",{"_index":875,"title":{},"body":{"modules/MaterialModule.html":{}}}],["constructor(nodeid",{"_index":292,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(payload",{"_index":461,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(priv",{"_index":585,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{}}}],["constructor(publ",{"_index":476,"title":{},"body":{"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["constructor(relationid",{"_index":302,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["constructor(rout",{"_index":1226,"title":{},"body":{"components/UiComponent.html":{}}}],["constructor(stor",{"_index":359,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/WizardService.html":{}}}],["constructor(wizard",{"_index":1085,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["constructor(zon",{"_index":745,"title":{},"body":{"injectables/MapService.html":{}}}],["contain",{"_index":768,"title":{},"body":{"injectables/MapService.html":{}}}],["content",{"_index":777,"title":{},"body":{"injectables/MapService.html":{},"injectables/NetworkService.html":{}}}],["continu",{"_index":1129,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["contract",{"_index":1586,"title":{},"body":{"license.html":{}}}],["control",{"_index":509,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["convert",{"_index":1100,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["cooper",{"_index":714,"title":{},"body":{"components/MapComponent.html":{}}}],["coordin",{"_index":645,"title":{},"body":{"injectables/LocationService.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["copi",{"_index":1550,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":454,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["copyright&nbsp;©&nbsp",{"_index":452,"title":{},"body":{"components/FooterComponent.html":{}}}],["core",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":1426,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":419,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["createfeatureselector",{"_index":1306,"title":{},"body":{"interfaces/UiState.html":{}}}],["createfeatureselector('ui",{"_index":1313,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["creategraph",{"_index":418,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/NetworkService.html":{}}}],["creategraph(data",{"_index":919,"title":{},"body":{"injectables/NetworkService.html":{}}}],["createmap",{"_index":486,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createmap(el",{"_index":526,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["createselector",{"_index":1307,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["creation",{"_index":372,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/NetworkService.html":{}}}],["current",{"_index":257,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"miscellaneous/variables.html":{}}}],["currentstep",{"_index":394,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentyear",{"_index":444,"title":{},"body":{"components/FooterComponent.html":{}}}],["damag",{"_index":1583,"title":{},"body":{"license.html":{}}}],["data",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"index.html":{}}}],["data.el",{"_index":981,"title":{},"body":{"injectables/NetworkService.html":{}}}],["date",{"_index":935,"title":{},"body":{"injectables/NetworkService.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["date().getfullyear",{"_index":447,"title":{},"body":{"components/FooterComponent.html":{}}}],["datetim",{"_index":1278,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["day",{"_index":1148,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["deactiv",{"_index":188,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{},"coverage.html":{}}}],["deal",{"_index":1552,"title":{},"body":{"license.html":{}}}],["declar",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":630,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/MessageArchivedComponent.html":{},"components/WizardComponent.html":{}}}],["deepclon",{"_index":1406,"title":{},"body":{"interfaces/WizardState.html":{}}}],["deepclone(initialwizardst",{"_index":1411,"title":{},"body":{"interfaces/WizardState.html":{}}}],["deepclone(state.step",{"_index":1415,"title":{},"body":{"interfaces/WizardState.html":{}}}],["default",{"_index":170,"title":{},"body":{"classes/BaseComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":129,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["degre",{"_index":982,"title":{},"body":{"injectables/NetworkService.html":{},"index.html":{}}}],["delay",{"_index":606,"title":{},"body":{"components/HomeComponent.html":{}}}],["demand",{"_index":223,"title":{},"body":{"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["demand'},{'nam",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["demand.compon",{"_index":1285,"title":{},"body":{"modules/UiModule.html":{}}}],["demand.component.html",{"_index":357,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.scss",{"_index":356,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.t",{"_index":354,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"coverage.html":{}}}],["demand.component.ts:20",{"_index":364,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:22",{"_index":363,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:32",{"_index":365,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:38",{"_index":375,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:42",{"_index":366,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:46",{"_index":374,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.component.ts:61",{"_index":367,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["demand.servic",{"_index":218,"title":{},"body":{"modules/DemandModule.html":{}}}],["demand/demand.modul",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["demand/demand.servic",{"_index":1391,"title":{},"body":{"injectables/WizardService.html":{}}}],["demand/estim",{"_index":353,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"modules/UiModule.html":{},"coverage.html":{}}}],["demandmodul",{"_index":80,"title":{"modules/DemandModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules.html":{},"overview.html":{}}}],["demandservic",{"_index":216,"title":{"injectables/DemandService.html":{}},"body":{"modules/DemandModule.html":{},"injectables/DemandService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["deni",{"_index":1122,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["densiti",{"_index":232,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["dep",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":71,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":270,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["descript",{"_index":158,"title":{},"body":{"classes/BaseComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Graph.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{}}}],["destin",{"_index":233,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["develop",{"_index":897,"title":{},"body":{"injectables/NetworkService.html":{},"index.html":{}}}],["dialog",{"_index":624,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialog'},{'nam",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["dialog.compon",{"_index":1188,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["dialog.component.t",{"_index":623,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:18",{"_index":629,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":632,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":631,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialogref",{"_index":626,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/UiComponent.html":{}}}],["dialogref.afterclos",{"_index":1266,"title":{},"body":{"components/UiComponent.html":{}}}],["dialogresult",{"_index":1256,"title":{},"body":{"components/UiComponent.html":{}}}],["direct",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["disabledefaultui",{"_index":489,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["disabledoubleclickzoom",{"_index":490,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["display",{"_index":519,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["dissert",{"_index":1515,"title":{},"body":{"index.html":{}}}],["distanc",{"_index":234,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["distribut",{"_index":1560,"title":{},"body":{"license.html":{}}}],["div",{"_index":769,"title":{},"body":{"injectables/MapService.html":{}}}],["doc",{"_index":1520,"title":{},"body":{"index.html":{}}}],["document",{"_index":298,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":1127,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["domsanit",{"_index":874,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_code_24px.svg",{"_index":880,"title":{},"body":{"modules/MaterialModule.html":{}}}],["domsanitizer.bypasssecuritytrustresourceurl('./assets/images/ic_more_vert_24px.svg",{"_index":878,"title":{},"body":{"modules/MaterialModule.html":{}}}],["doubl",{"_index":505,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["draggabl",{"_index":824,"title":{},"body":{"injectables/MapService.html":{}}}],["durat",{"_index":235,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{}}}],["durationintraff",{"_index":236,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["dynam",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":523,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["earth'",{"_index":283,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["eas",{"_index":604,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["east",{"_index":819,"title":{},"body":{"injectables/MapService.html":{}}}],["edg",{"_index":226,"title":{"classes/Edge.html":{}},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["edgeid",{"_index":237,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["edges.map((v",{"_index":1012,"title":{},"body":{"injectables/NetworkService.html":{}}}],["edges[i].dist",{"_index":1021,"title":{},"body":{"injectables/NetworkService.html":{}}}],["edges[i].dur",{"_index":1023,"title":{},"body":{"injectables/NetworkService.html":{}}}],["edges[i].durationintraff",{"_index":1025,"title":{},"body":{"injectables/NetworkService.html":{}}}],["edit",{"_index":822,"title":{},"body":{"injectables/MapService.html":{}}}],["effectsmodul",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["effectsmodule.forfeatur",{"_index":1297,"title":{},"body":{"modules/UiModule.html":{}}}],["effectsmodule.forroot",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["el",{"_index":529,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"injectables/MapService.html":{}}}],["element",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["element.innerhtml",{"_index":592,"title":{},"body":{"components/HomeComponent.html":{}}}],["element.innertext",{"_index":589,"title":{},"body":{"components/HomeComponent.html":{}}}],["element['typ",{"_index":986,"title":{},"body":{"injectables/NetworkService.html":{}}}],["elementref",{"_index":498,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{}}}],["elements.filter((el",{"_index":985,"title":{},"body":{"injectables/NetworkService.html":{}}}],["elementtyp",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["empti",{"_index":1162,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["enabl",{"_index":507,"title":{},"body":{"components/GoogleMapComponent.html":{},"index.html":{}}}],["enables/dis",{"_index":503,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["encapsul",{"_index":687,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["engin",{"_index":1518,"title":{},"body":{"index.html":{}}}],["enter",{"_index":1164,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["entrycompon",{"_index":1175,"title":{},"body":{"modules/SharedModule.html":{}}}],["enum",{"_index":468,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["enumer",{"_index":1507,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":961,"title":{},"body":{"injectables/NetworkService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.functions.trafficdata.url",{"_index":1009,"title":{},"body":{"injectables/NetworkService.html":{}}}],["environments/environ",{"_index":962,"title":{},"body":{"injectables/NetworkService.html":{}}}],["eppstein",{"_index":348,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["equal",{"_index":992,"title":{},"body":{"injectables/NetworkService.html":{}}}],["error",{"_index":405,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"injectables/LocationService.html":{},"injectables/NetworkService.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error.cod",{"_index":1119,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.permission_deni",{"_index":1120,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.position_unavail",{"_index":1123,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["error.timeout",{"_index":1125,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["est",{"_index":758,"title":{},"body":{"injectables/MapService.html":{}}}],["estim",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["estimateofdemandcompon",{"_index":35,"title":{"components/EstimateOfDemandComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["event",{"_index":803,"title":{},"body":{"injectables/MapService.html":{},"components/WizardComponent.html":{},"license.html":{}}}],["event.previouslyselectedindex",{"_index":1370,"title":{},"body":{"components/WizardComponent.html":{}}}],["event.selectedindex",{"_index":1371,"title":{},"body":{"components/WizardComponent.html":{}}}],["eventemitt",{"_index":789,"title":{},"body":{"injectables/MapService.html":{}}}],["existingnod",{"_index":319,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.incomingedg",{"_index":328,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.lat",{"_index":321,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.lon",{"_index":323,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.outgoingedg",{"_index":331,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["existingnode.tag",{"_index":325,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["exit",{"_index":1223,"title":{},"body":{"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["export",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":1574,"title":{},"body":{"license.html":{}}}],["extend",{"_index":355,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["extracttag",{"_index":900,"title":{},"body":{"injectables/NetworkService.html":{}}}],["extracttags(tag",{"_index":926,"title":{},"body":{"injectables/NetworkService.html":{}}}],["factor",{"_index":1333,"title":{},"body":{"injectables/WeatherService.html":{}}}],["fals",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/UiComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["featuretyp",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["featureuist",{"_index":1312,"title":{},"body":{"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["filter",{"_index":1003,"title":{},"body":{"injectables/NetworkService.html":{}}}],["filteredwaynod",{"_index":949,"title":{},"body":{"injectables/NetworkService.html":{}}}],["filteredwaynodes[i",{"_index":1046,"title":{},"body":{"injectables/NetworkService.html":{}}}],["final",{"_index":1007,"title":{},"body":{"injectables/NetworkService.html":{}}}],["firebas",{"_index":1527,"title":{},"body":{"index.html":{}}}],["firebaserc",{"_index":1536,"title":{},"body":{"index.html":{}}}],["first",{"_index":987,"title":{},"body":{"injectables/NetworkService.html":{}}}],["firstnode.lat",{"_index":1050,"title":{},"body":{"injectables/NetworkService.html":{}}}],["firstnode.lon",{"_index":1052,"title":{},"body":{"injectables/NetworkService.html":{}}}],["firstnode.outgoingedges.push(edg",{"_index":1056,"title":{},"body":{"injectables/NetworkService.html":{}}}],["firstnode.tag",{"_index":1054,"title":{},"body":{"injectables/NetworkService.html":{}}}],["fit",{"_index":1577,"title":{},"body":{"license.html":{}}}],["flexlayoutmodul",{"_index":1182,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":238,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{}}}],["follow",{"_index":370,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"license.html":{}}}],["footer",{"_index":441,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'nam",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["footer.component.html",{"_index":443,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":442,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.compon",{"_index":1186,"title":{},"body":{"modules/SharedModule.html":{}}}],["footercompon",{"_index":38,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":182,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"components/WizardComponent.html":{}}}],["formarray",{"_index":1358,"title":{},"body":{"components/WizardComponent.html":{}}}],["formbuild",{"_index":1342,"title":{},"body":{"components/WizardComponent.html":{}}}],["formgroup",{"_index":205,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["formsmodul",{"_index":1180,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["formstep",{"_index":1355,"title":{},"body":{"components/WizardComponent.html":{}}}],["forroot",{"_index":1191,"title":{},"body":{"modules/SharedModule.html":{}}}],["free",{"_index":1547,"title":{},"body":{"license.html":{}}}],["from(data).pip",{"_index":1019,"title":{},"body":{"injectables/NetworkService.html":{}}}],["fromui",{"_index":386,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["fromwizard",{"_index":1309,"title":{},"body":{"interfaces/UiState.html":{}}}],["fromwizard.getcurrentstep",{"_index":1317,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.geterror",{"_index":1318,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getpend",{"_index":1319,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.getstep",{"_index":1316,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardreduc",{"_index":1311,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fromwizard.wizardst",{"_index":1304,"title":{},"body":{"interfaces/UiState.html":{}}}],["full",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["function",{"_index":128,"title":{"miscellaneous/functions.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/NetworkService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["furnish",{"_index":1565,"title":{},"body":{"license.html":{}}}],["g",{"_index":1524,"title":{},"body":{"index.html":{}}}],["geocod",{"_index":647,"title":{},"body":{"injectables/LocationService.html":{},"index.html":{}}}],["geocoderresult",{"_index":660,"title":{},"body":{"injectables/LocationService.html":{}}}],["geograph",{"_index":644,"title":{},"body":{"injectables/LocationService.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geoloc",{"_index":648,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["geometri",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gestur",{"_index":510,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["gesturehandl",{"_index":491,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["get",{"_index":337,"title":{"index.html":{},"license.html":{}},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getarea",{"_index":737,"title":{},"body":{"injectables/MapService.html":{}}}],["getassignmentmatrix",{"_index":901,"title":{},"body":{"injectables/NetworkService.html":{}}}],["getbound",{"_index":738,"title":{},"body":{"injectables/MapService.html":{}}}],["getcurrentposit",{"_index":651,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["getcurrentstep",{"_index":1420,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getedg",{"_index":310,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["geterror",{"_index":1422,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getformstep",{"_index":1356,"title":{},"body":{"components/WizardComponent.html":{}}}],["getgraph",{"_index":902,"title":{},"body":{"injectables/NetworkService.html":{}}}],["getincidencematrix",{"_index":340,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getlatlng",{"_index":652,"title":{},"body":{"injectables/LocationService.html":{}}}],["getlinkflow",{"_index":903,"title":{},"body":{"injectables/NetworkService.html":{}}}],["getmax",{"_index":1146,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getmin",{"_index":1142,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["getnetwork",{"_index":409,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/NetworkService.html":{}}}],["getnod",{"_index":308,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getnode(nodeid",{"_index":314,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getpend",{"_index":1424,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrel",{"_index":312,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getscript",{"_index":1475,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getscript(src",{"_index":1511,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getshortestpath",{"_index":559,"title":{},"body":{"classes/Graph.html":{}}}],["getshortestpaths(origin",{"_index":351,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["getstep",{"_index":1418,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettim",{"_index":904,"title":{},"body":{"injectables/NetworkService.html":{}}}],["gettrafficdata",{"_index":422,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/NetworkService.html":{}}}],["given",{"_index":767,"title":{},"body":{"injectables/MapService.html":{}}}],["go",{"_index":474,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"miscellaneous/enumerations.html":{}}}],["googl",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"index.html":{}}}],["google.maps.event.adddomlistener(window",{"_index":807,"title":{},"body":{"injectables/MapService.html":{}}}],["google.maps.event.trigger(this.map",{"_index":814,"title":{},"body":{"injectables/MapService.html":{}}}],["google.maps.geocod",{"_index":668,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderresult",{"_index":675,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatu",{"_index":677,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["google.maps.geocoderstatus.ok",{"_index":678,"title":{},"body":{"injectables/LocationService.html":{}}}],["google.maps.geocoderstatus.zero_result",{"_index":1108,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["google.maps.infowindow",{"_index":783,"title":{},"body":{"injectables/MapService.html":{}}}],["google.maps.latlng",{"_index":752,"title":{},"body":{"injectables/MapService.html":{}}}],["google.maps.latlngbound",{"_index":830,"title":{},"body":{"injectables/MapService.html":{}}}],["google.maps.latlngboundsliter",{"_index":728,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{}}}],["google.maps.latlngliter",{"_index":501,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{}}}],["google.maps.map",{"_index":785,"title":{},"body":{"injectables/MapService.html":{}}}],["google.maps.map(el",{"_index":801,"title":{},"body":{"injectables/MapService.html":{}}}],["google.maps.maptypeid",{"_index":515,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["google.maps.maptypeid.roadmap",{"_index":711,"title":{},"body":{"components/MapComponent.html":{}}}],["google.maps.maptypestyl",{"_index":524,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"miscellaneous/variables.html":{}}}],["google.maps.rectangl",{"_index":787,"title":{},"body":{"injectables/MapService.html":{}}}],["googlemap",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["googlemapcompon",{"_index":40,"title":{"components/GoogleMapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["goon",{"_index":457,"title":{"classes/GoOn.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["goon(data",{"_index":1380,"title":{},"body":{"injectables/WizardService.html":{}}}],["grant",{"_index":1546,"title":{},"body":{"license.html":{}}}],["graph",{"_index":304,"title":{"classes/Graph.html":{}},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"modules.html":{}}}],["greater",{"_index":998,"title":{},"body":{"injectables/NetworkService.html":{}}}],["guard.servic",{"_index":1189,"title":{},"body":{"modules/SharedModule.html":{},"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["guard.service.t",{"_index":189,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"coverage.html":{}}}],["guard.service.ts:11",{"_index":197,"title":{},"body":{"injectables/CanDeactivateGuard.html":{}}}],["ha",{"_index":843,"title":{},"body":{"injectables/MapService.html":{}}}],["hammerj",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":511,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["hasbackdrop",{"_index":1265,"title":{},"body":{"components/UiComponent.html":{}}}],["header",{"_index":968,"title":{},"body":{"injectables/NetworkService.html":{}}}],["headlin",{"_index":597,"title":{},"body":{"components/HomeComponent.html":{}}}],["hectar",{"_index":755,"title":{},"body":{"injectables/MapService.html":{},"miscellaneous/variables.html":{}}}],["herebi",{"_index":1545,"title":{},"body":{"license.html":{}}}],["highway",{"_index":1040,"title":{},"body":{"injectables/NetworkService.html":{},"miscellaneous/variables.html":{}}}],["hold",{"_index":983,"title":{},"body":{"injectables/NetworkService.html":{}}}],["holder",{"_index":1580,"title":{},"body":{"license.html":{}}}],["home",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["home.component.html",{"_index":574,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":573,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.transit",{"_index":584,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.compon",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home_transit",{"_index":583,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["homecompon",{"_index":43,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hour",{"_index":1167,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["html5",{"_index":662,"title":{},"body":{"injectables/LocationService.html":{}}}],["htmlelement",{"_index":527,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"injectables/MapService.html":{}}}],["http",{"_index":912,"title":{},"body":{"injectables/NetworkService.html":{}}}],["http://localhost:4201",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":910,"title":{},"body":{"injectables/NetworkService.html":{}}}],["httpclientmodul",{"_index":1179,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["httpheader",{"_index":955,"title":{},"body":{"injectables/NetworkService.html":{}}}],["https://cloud.google.com/map",{"_index":1531,"title":{},"body":{"index.html":{}}}],["https://developers.google.com/maps/documentation/javascript/styl",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://lz4.overpass",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://maps.googleapis.com/maps/api/j",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://u",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://wiki.openstreetmap.org/wiki/key:highway",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifi",{"_index":643,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implement",{"_index":121,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["impli",{"_index":1575,"title":{},"body":{"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["incid",{"_index":338,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["includ",{"_index":1555,"title":{},"body":{"license.html":{}}}],["incomingedg",{"_index":290,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["index",{"_index":123,"title":{"index.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":249,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["infodialogcompon",{"_index":45,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infowindow",{"_index":733,"title":{},"body":{"injectables/MapService.html":{}}}],["inherit",{"_index":160,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["init",{"_index":534,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["initi",{"_index":513,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"interfaces/Step.html":{},"miscellaneous/variables.html":{}}}],["initialwizardst",{"_index":1409,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initmap",{"_index":739,"title":{},"body":{"injectables/MapService.html":{}}}],["initmap(el",{"_index":764,"title":{},"body":{"injectables/MapService.html":{}}}],["inject",{"_index":191,"title":{"injectables/CanDeactivateGuard.html":{},"injectables/DemandService.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"injectables/SimulationService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/DemandService.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"injectables/SimulationService.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["inject(mat_dialog_data",{"_index":635,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["input",{"_index":204,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{}}}],["insert",{"_index":1168,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["insid",{"_index":766,"title":{},"body":{"injectables/MapService.html":{}}}],["instal",{"_index":431,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"index.html":{}}}],["instanc",{"_index":732,"title":{},"body":{"injectables/MapService.html":{},"injectables/NetworkService.html":{}}}],["instanti",{"_index":924,"title":{},"body":{"injectables/NetworkService.html":{}}}],["interfac",{"_index":185,"title":{"interfaces/CanComponentDeactivate.html":{},"interfaces/Member.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Step.html":{},"interfaces/Tag.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["internet",{"_index":413,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["interpret",{"_index":922,"title":{},"body":{"injectables/NetworkService.html":{}}}],["invalid_request",{"_index":1110,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["invoc",{"_index":940,"title":{},"body":{"injectables/NetworkService.html":{}}}],["invok",{"_index":673,"title":{},"body":{"injectables/LocationService.html":{}}}],["javascript",{"_index":1533,"title":{},"body":{"index.html":{}}}],["js",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1027,"title":{},"body":{"injectables/NetworkService.html":{}}}],["json.stringifi",{"_index":1017,"title":{},"body":{"injectables/NetworkService.html":{}}}],["k",{"_index":345,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["key",{"_index":274,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1573,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["l",{"_index":613,"title":{},"body":{"components/HomeComponent.html":{}}}],["labels.icon",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["languag",{"_index":933,"title":{},"body":{"injectables/NetworkService.html":{}}}],["last",{"_index":997,"title":{},"body":{"injectables/NetworkService.html":{}}}],["lat",{"_index":288,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["latitud",{"_index":285,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["latlng",{"_index":649,"title":{},"body":{"injectables/LocationService.html":{},"injectables/MapService.html":{}}}],["layout",{"_index":1184,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["leav",{"_index":1161,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["legend",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangeOfConditionsComponent.html":{},"modules/DemandModule.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"components/WizardComponent.html":{},"overview.html":{}}}],["letter",{"_index":587,"title":{},"body":{"components/HomeComponent.html":{}}}],["level",{"_index":518,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["liabil",{"_index":1584,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1581,"title":{},"body":{"license.html":{}}}],["licens",{"_index":1542,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":426,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":608,"title":{},"body":{"components/HomeComponent.html":{}}}],["linear",{"_index":605,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":228,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["linkflow",{"_index":239,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["list",{"_index":980,"title":{},"body":{"injectables/NetworkService.html":{}}}],["listen",{"_index":804,"title":{},"body":{"injectables/MapService.html":{}}}],["liter",{"_index":462,"title":{},"body":{"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/StepChanged.html":{}}}],["lng",{"_index":1104,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":127,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["loadchildren",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadscript",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["local",{"_index":432,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["locat",{"_index":1086,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"injectables/WizardService.html":{}}}],["location.servic",{"_index":640,"title":{},"body":{"modules/LocationModule.html":{}}}],["location/location.modul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["location/location.servic",{"_index":1096,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"injectables/WizardService.html":{}}}],["locationmodul",{"_index":81,"title":{"modules/LocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationservic",{"_index":638,"title":{"injectables/LocationService.html":{}},"body":{"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":1530,"title":{},"body":{"index.html":{}}}],["lon",{"_index":289,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["longitud",{"_index":286,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"injectables/LocationService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["main",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manag",{"_index":1303,"title":{},"body":{"interfaces/UiState.html":{},"interfaces/WizardState.html":{}}}],["map",{"_index":485,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"injectables/WizardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map'},{'nam",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["map((respons",{"_index":977,"title":{},"body":{"injectables/NetworkService.html":{}}}],["map((valu",{"_index":1020,"title":{},"body":{"injectables/NetworkService.html":{}}}],["map.compon",{"_index":1292,"title":{},"body":{"modules/UiModule.html":{}}}],["map.component.html",{"_index":690,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":689,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.t",{"_index":483,"title":{},"body":{"components/GoogleMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:17",{"_index":502,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:26",{"_index":525,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:30",{"_index":504,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:34",{"_index":508,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:38",{"_index":516,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:42",{"_index":520,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:46",{"_index":521,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:50",{"_index":512,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:54",{"_index":499,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:56",{"_index":535,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:61",{"_index":533,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:71",{"_index":531,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.component.ts:76",{"_index":528,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["map.servic",{"_index":537,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["map.styl",{"_index":707,"title":{},"body":{"components/MapComponent.html":{}}}],["map/googl",{"_index":1291,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.compon",{"_index":1290,"title":{},"body":{"modules/UiModule.html":{}}}],["map/map.servic",{"_index":1294,"title":{},"body":{"modules/UiModule.html":{},"injectables/WizardService.html":{}}}],["mapcompon",{"_index":47,"title":{"components/MapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapopt",{"_index":538,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/MapService.html":{}}}],["mapservic",{"_index":497,"title":{"injectables/MapService.html":{}},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/UiModule.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["mapstyl",{"_index":706,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maptypeid",{"_index":492,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["mat_dialog_data",{"_index":633,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["mat_snack_bar_data",{"_index":887,"title":{},"body":{"components/MessageArchivedComponent.html":{}}}],["matbuttonmodul",{"_index":865,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodul",{"_index":863,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1230,"title":{},"body":{"components/UiComponent.html":{}}}],["matdialogmodul",{"_index":873,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":628,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["material.modul",{"_index":1185,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialmodul",{"_index":859,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.round(a",{"_index":857,"title":{},"body":{"injectables/MapService.html":{}}}],["maticonmodul",{"_index":866,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["maticonregistri",{"_index":864,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonregistry.addsvgicon",{"_index":876,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":869,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodul",{"_index":867,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodul",{"_index":871,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matrix",{"_index":221,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["matsidenavmodul",{"_index":861,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1229,"title":{},"body":{"components/UiComponent.html":{}}}],["matsnackbarmodul",{"_index":870,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matstepp",{"_index":1351,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["matsteppermodul",{"_index":868,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodul",{"_index":862,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodul",{"_index":872,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1145,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["maximum",{"_index":517,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["maxzoom",{"_index":493,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["mean",{"_index":271,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["member",{"_index":277,"title":{"interfaces/Member.html":{}},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["memoizedselector",{"_index":1308,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["merchant",{"_index":1576,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1558,"title":{},"body":{"license.html":{}}}],["messag",{"_index":406,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/UiComponent.html":{}}}],["messagearchivedcompon",{"_index":49,"title":{"components/MessageArchivedComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["meter",{"_index":250,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["method",{"_index":124,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["min",{"_index":1141,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["minimum",{"_index":343,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["minzoom",{"_index":494,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["miscellan",{"_index":1506,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1541,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":925,"title":{},"body":{"injectables/NetworkService.html":{},"interfaces/Step.html":{},"components/WizardComponent.html":{}}}],["models/actions/wizard.act",{"_index":1393,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/base.compon",{"_index":388,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["models/reduc",{"_index":387,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["models/reducers/wizard.reduc",{"_index":1394,"title":{},"body":{"injectables/WizardService.html":{}}}],["models/wizard",{"_index":708,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["modifi",{"_index":1557,"title":{},"body":{"license.html":{}}}],["modul",{"_index":69,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":1176,"title":{},"body":{"modules/SharedModule.html":{}}}],["moment",{"_index":1144,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["more",{"_index":300,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["more_vert",{"_index":877,"title":{},"body":{"modules/MaterialModule.html":{}}}],["motorway",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mout",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["mout/array/combin",{"_index":269,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["mout/lang/deepclon",{"_index":1407,"title":{},"body":{"interfaces/WizardState.html":{}}}],["multi",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["name",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["navigate_next",{"_index":1130,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["navigator.geoloc",{"_index":1115,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["navigator.geolocation.getcurrentposit",{"_index":682,"title":{},"body":{"injectables/LocationService.html":{}}}],["ne",{"_index":756,"title":{},"body":{"injectables/MapService.html":{}}}],["ne.lat",{"_index":851,"title":{},"body":{"injectables/MapService.html":{}}}],["ne.lng",{"_index":852,"title":{},"body":{"injectables/MapService.html":{}}}],["network",{"_index":306,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"injectables/WizardService.html":{}}}],["network.servic",{"_index":895,"title":{},"body":{"modules/NetworkModule.html":{}}}],["network/network.modul",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["network/network.servic",{"_index":385,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/WizardService.html":{}}}],["network/weather/weather.servic",{"_index":1390,"title":{},"body":{"injectables/WizardService.html":{}}}],["networkmodul",{"_index":82,"title":{"modules/NetworkModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NetworkModule.html":{},"modules.html":{},"overview.html":{}}}],["networkservic",{"_index":362,"title":{"injectables/NetworkService.html":{}},"body":{"components/EstimateOfDemandComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"components/SelectionOfTheAreaComponent.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["new",{"_index":446,"title":{},"body":{"components/FooterComponent.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/SelectionOfTheAreaComponent.html":{},"coverage.html":{}}}],["next",{"_index":1165,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["nextindex",{"_index":479,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["ng",{"_index":1276,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":576,"title":{},"body":{"components/HomeComponent.html":{}}}],["ngmodul",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":487,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngonchanges(chang",{"_index":530,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ngondestroy",{"_index":165,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["ngoninit",{"_index":166,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ngrx",{"_index":467,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["ngrx/effect",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"dependencies.html":{}}}],["ngzone",{"_index":746,"title":{},"body":{"injectables/MapService.html":{}}}],["node",{"_index":231,"title":{"classes/Node.html":{}},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["node(w",{"_index":1043,"title":{},"body":{"injectables/NetworkService.html":{}}}],["node.incomingedg",{"_index":330,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.j",{"_index":1521,"title":{},"body":{"index.html":{}}}],["node.lat",{"_index":322,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.lon",{"_index":324,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.nodeid",{"_index":317,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.outgoingedg",{"_index":333,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["node.tag",{"_index":327,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["nodeid",{"_index":287,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["nodes.find((valu",{"_index":1048,"title":{},"body":{"injectables/NetworkService.html":{}}}],["nodesdegre",{"_index":984,"title":{},"body":{"injectables/NetworkService.html":{}}}],["nodesdegrees.get(nod",{"_index":990,"title":{},"body":{"injectables/NetworkService.html":{}}}],["nodesdegrees.set(nod",{"_index":991,"title":{},"body":{"injectables/NetworkService.html":{}}}],["noninfring",{"_index":1578,"title":{},"body":{"license.html":{}}}],["north",{"_index":757,"title":{},"body":{"injectables/MapService.html":{}}}],["notic",{"_index":1568,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1522,"title":{},"body":{"index.html":{}}}],["npm@latest",{"_index":1523,"title":{},"body":{"index.html":{}}}],["null",{"_index":341,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":209,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["o/d",{"_index":220,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["object",{"_index":539,"title":{},"body":{"components/GoogleMapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(tags).map((key",{"_index":1067,"title":{},"body":{"injectables/NetworkService.html":{}}}],["observ",{"_index":135,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/UiComponent.html":{}}}],["observable.create((observ",{"_index":672,"title":{},"body":{"injectables/LocationService.html":{},"injectables/NetworkService.html":{}}}],["observer.complet",{"_index":680,"title":{},"body":{"injectables/LocationService.html":{},"injectables/NetworkService.html":{}}}],["observer.error('creategraph",{"_index":1006,"title":{},"body":{"injectables/NetworkService.html":{}}}],["observer.error(error",{"_index":685,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.error(statu",{"_index":681,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(nul",{"_index":1008,"title":{},"body":{"injectables/NetworkService.html":{}}}],["observer.next(posit",{"_index":683,"title":{},"body":{"injectables/LocationService.html":{}}}],["observer.next(result",{"_index":679,"title":{},"body":{"injectables/LocationService.html":{}}}],["obtain",{"_index":921,"title":{},"body":{"injectables/NetworkService.html":{},"license.html":{}}}],["of(nul",{"_index":140,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["offici",{"_index":1519,"title":{},"body":{"index.html":{}}}],["offset",{"_index":611,"title":{},"body":{"components/HomeComponent.html":{}}}],["on",{"_index":993,"title":{},"body":{"injectables/NetworkService.html":{}}}],["onchang",{"_index":484,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["ondestroy",{"_index":162,"title":{},"body":{"classes/BaseComponent.html":{},"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["oninit",{"_index":161,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["opac",{"_index":601,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":429,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["opendialog",{"_index":1224,"title":{},"body":{"components/UiComponent.html":{}}}],["opendialog(data",{"_index":1236,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar",{"_index":1225,"title":{},"body":{"components/UiComponent.html":{}}}],["opensnackbar(messag",{"_index":1238,"title":{},"body":{"components/UiComponent.html":{}}}],["openweathermap",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oper",{"_index":371,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["opnion",{"_index":1160,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["option",{"_index":133,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":1002,"title":{},"body":{"injectables/NetworkService.html":{}}}],["origin",{"_index":240,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["otherwis",{"_index":1588,"title":{},"body":{"license.html":{}}}],["out",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["out:json",{"_index":1028,"title":{},"body":{"injectables/NetworkService.html":{}}}],["outgoingedg",{"_index":291,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["output",{"_index":790,"title":{},"body":{"injectables/MapService.html":{},"injectables/NetworkService.html":{}}}],["outsid",{"_index":837,"title":{},"body":{"injectables/MapService.html":{}}}],["over_query_limit",{"_index":1111,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["overpass",{"_index":916,"title":{},"body":{"injectables/NetworkService.html":{}}}],["overpassapi",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":1593,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimemodul",{"_index":1274,"title":{},"body":{"modules/UiModule.html":{}}}],["owlnativedatetimemodul",{"_index":1275,"title":{},"body":{"modules/UiModule.html":{}}}],["p",{"_index":850,"title":{},"body":{"injectables/MapService.html":{}}}],["packag",{"_index":1480,"title":{"dependencies.html":{}},"body":{}}],["paid",{"_index":428,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["pair",{"_index":339,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["panelclass",{"_index":1261,"title":{},"body":{"components/UiComponent.html":{}}}],["param",{"_index":350,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"components/WizardComponent.html":{}}}],["paramet",{"_index":131,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"injectables/CanDeactivateGuard.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":272,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["past",{"_index":424,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["path",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"modules/UiRoutingModule.html":{}}}],["pathmatch",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["payload",{"_index":459,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{}}}],["pend",{"_index":473,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["perform",{"_index":368,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["permiss",{"_index":1121,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"license.html":{}}}],["permit",{"_index":1564,"title":{},"body":{"license.html":{}}}],["person",{"_index":1549,"title":{},"body":{"license.html":{}}}],["pick",{"_index":1277,"title":{},"body":{"modules/UiModule.html":{},"dependencies.html":{}}}],["pipe",{"_index":976,"title":{},"body":{"injectables/NetworkService.html":{}}}],["platform",{"_index":1532,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":1163,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["poi",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point",{"_index":282,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["polygon",{"_index":793,"title":{},"body":{"injectables/MapService.html":{}}}],["portion",{"_index":1571,"title":{},"body":{"license.html":{}}}],["posit",{"_index":663,"title":{},"body":{"injectables/LocationService.html":{},"injectables/MapService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["position.coords.latitud",{"_index":1117,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["position.coords.longitud",{"_index":1118,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["positionerror",{"_index":684,"title":{},"body":{"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["preload",{"_index":119,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["preload(rout",{"_index":125,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["preloadingstrategi",{"_index":122,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{}}}],["prerequisit",{"_index":1534,"title":{},"body":{"index.html":{}}}],["primari",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["privaci",{"_index":449,"title":{},"body":{"components/FooterComponent.html":{}}}],["privat",{"_index":307,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["process",{"_index":411,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["product",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":430,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"index.html":{}}}],["promis",{"_index":192,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["propag",{"_index":1204,"title":{},"body":{"injectables/SimulationService.html":{}}}],["properti",{"_index":163,"title":{},"body":{"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["propertynam",{"_index":542,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["provid",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DemandModule.html":{},"modules/LocationModule.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"interfaces/WizardState.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":224,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"modules/SharedModule.html":{},"injectables/SimulationService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["publish",{"_index":1559,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":296,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"license.html":{}}}],["putinerror",{"_index":1375,"title":{},"body":{"injectables/WizardService.html":{}}}],["putinerror(error",{"_index":1382,"title":{},"body":{"injectables/WizardService.html":{}}}],["putonhold",{"_index":1376,"title":{},"body":{"injectables/WizardService.html":{}}}],["ql",{"_index":917,"title":{},"body":{"injectables/NetworkService.html":{}}}],["qs",{"_index":959,"title":{},"body":{"injectables/NetworkService.html":{},"dependencies.html":{}}}],["qs.stringifi",{"_index":1044,"title":{},"body":{"injectables/NetworkService.html":{}}}],["queri",{"_index":915,"title":{},"body":{"injectables/NetworkService.html":{}}}],["quit",{"_index":1253,"title":{},"body":{"components/UiComponent.html":{}}}],["quota",{"_index":425,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["reactiveformsmodul",{"_index":1181,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["readonli",{"_index":460,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{}}}],["real",{"_index":619,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["receiveact",{"_index":167,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["rectangl",{"_index":726,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{}}}],["redirectto",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduc",{"_index":1295,"title":{},"body":{"modules/UiModule.html":{},"interfaces/UiState.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reducers/wizard.reduc",{"_index":1310,"title":{},"body":{"interfaces/UiState.html":{}}}],["reduct",{"_index":1332,"title":{},"body":{"injectables/WeatherService.html":{}}}],["ref",{"_index":278,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["reffirstnod",{"_index":1049,"title":{},"body":{"injectables/NetworkService.html":{}}}],["reffirstnode['lat",{"_index":1051,"title":{},"body":{"injectables/NetworkService.html":{}}}],["reffirstnode['lon",{"_index":1053,"title":{},"body":{"injectables/NetworkService.html":{}}}],["refsecondnod",{"_index":1047,"title":{},"body":{"injectables/NetworkService.html":{}}}],["refsecondnode['lat",{"_index":1058,"title":{},"body":{"injectables/NetworkService.html":{}}}],["refsecondnode['lon",{"_index":1060,"title":{},"body":{"injectables/NetworkService.html":{}}}],["reiter",{"_index":939,"title":{},"body":{"injectables/NetworkService.html":{}}}],["relat",{"_index":295,"title":{"classes/Relation.html":{}},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["relation'",{"_index":276,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationid",{"_index":301,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["relationship",{"_index":299,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["remov",{"_index":436,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/NetworkService.html":{}}}],["removefromwait",{"_index":1377,"title":{},"body":{"injectables/WizardService.html":{}}}],["repres",{"_index":280,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["request",{"_index":410,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{}}}],["request_deni",{"_index":1112,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["requir",{"_index":500,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"index.html":{}}}],["reset",{"_index":86,"title":{"classes/Reset.html":{}},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/GoOn.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Reset.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resetmap",{"_index":795,"title":{},"body":{"injectables/MapService.html":{}}}],["residenti",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resiz",{"_index":740,"title":{},"body":{"injectables/MapService.html":{}}}],["resourc",{"_index":923,"title":{},"body":{"injectables/NetworkService.html":{}}}],["respect",{"_index":1042,"title":{},"body":{"injectables/NetworkService.html":{}}}],["respons",{"_index":642,"title":{},"body":{"injectables/LocationService.html":{},"injectables/NetworkService.html":{}}}],["restor",{"_index":815,"title":{},"body":{"injectables/MapService.html":{}}}],["restrict",{"_index":1554,"title":{},"body":{"license.html":{}}}],["result",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results[0].geometry.location.lat",{"_index":1103,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["results[0].geometry.location.lng",{"_index":1105,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["retriev",{"_index":423,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["return",{"_index":134,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["revers",{"_index":1001,"title":{},"body":{"injectables/NetworkService.html":{}}}],["right",{"_index":1556,"title":{},"body":{"license.html":{}}}],["road",{"_index":1038,"title":{},"body":{"injectables/NetworkService.html":{},"miscellaneous/variables.html":{}}}],["roadmap",{"_index":514,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["roberto",{"_index":455,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["roberto&nbsp;simonetti",{"_index":453,"title":{},"body":{"components/FooterComponent.html":{}}}],["role",{"_index":279,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["rout",{"_index":126,"title":{"routes.html":{}},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"injectables/NetworkService.html":{},"modules/UiRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["route.data",{"_index":138,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["route.data.preload",{"_index":139,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["router",{"_index":1227,"title":{},"body":{"components/UiComponent.html":{}}}],["routermodul",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UiRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild(rout",{"_index":1299,"title":{},"body":{"modules/UiRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["routing.module.t",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UiRoutingModule.html":{}}}],["run",{"_index":836,"title":{},"body":{"injectables/MapService.html":{},"index.html":{}}}],["rxj",{"_index":137,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/LocationService.html":{},"injectables/MapService.html":{},"injectables/NetworkService.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":383,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/NetworkService.html":{},"components/UiComponent.html":{}}}],["save",{"_index":810,"title":{},"body":{"injectables/MapService.html":{}}}],["scale",{"_index":598,"title":{},"body":{"components/HomeComponent.html":{}}}],["scalex",{"_index":609,"title":{},"body":{"components/HomeComponent.html":{}}}],["schedul",{"_index":358,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["search",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["search(address",{"_index":1092,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["searchfortheareacompon",{"_index":52,"title":{"components/SearchForTheAreaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["second",{"_index":252,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["secondari",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secondnode.incomingedges.push(edg",{"_index":1063,"title":{},"body":{"injectables/NetworkService.html":{}}}],["secondnode.lat",{"_index":1057,"title":{},"body":{"injectables/NetworkService.html":{}}}],["secondnode.lon",{"_index":1059,"title":{},"body":{"injectables/NetworkService.html":{}}}],["secondnode.tag",{"_index":1061,"title":{},"body":{"injectables/NetworkService.html":{}}}],["select",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["selectionchang",{"_index":1350,"title":{},"body":{"components/WizardComponent.html":{}}}],["selectionoftheareacompon",{"_index":55,"title":{"components/SelectionOfTheAreaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["sell",{"_index":1563,"title":{},"body":{"license.html":{}}}],["send",{"_index":845,"title":{},"body":{"injectables/MapService.html":{}}}],["sendact",{"_index":168,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["sent",{"_index":179,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["sequenc",{"_index":369,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["serve:devapp",{"_index":1538,"title":{},"body":{"index.html":{}}}],["servic",{"_index":451,"title":{},"body":{"components/FooterComponent.html":{},"injectables/LocationService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["set",{"_index":342,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["setbound",{"_index":905,"title":{},"body":{"injectables/NetworkService.html":{}}}],["setbounds(bound",{"_index":942,"title":{},"body":{"injectables/NetworkService.html":{}}}],["setcent",{"_index":741,"title":{},"body":{"injectables/MapService.html":{}}}],["setcenter(latlng",{"_index":772,"title":{},"body":{"injectables/MapService.html":{}}}],["setinfowindow",{"_index":742,"title":{},"body":{"injectables/MapService.html":{}}}],["setinfowindow(cont",{"_index":774,"title":{},"body":{"injectables/MapService.html":{}}}],["setlatlng",{"_index":653,"title":{},"body":{"injectables/LocationService.html":{}}}],["setlatlng(latlng",{"_index":666,"title":{},"body":{"injectables/LocationService.html":{}}}],["settim",{"_index":906,"title":{},"body":{"injectables/NetworkService.html":{}}}],["settime(tim",{"_index":944,"title":{},"body":{"injectables/NetworkService.html":{}}}],["settimeout",{"_index":813,"title":{},"body":{"injectables/MapService.html":{}}}],["setzoom",{"_index":743,"title":{},"body":{"injectables/MapService.html":{}}}],["setzoom(zoom",{"_index":778,"title":{},"body":{"injectables/MapService.html":{}}}],["shall",{"_index":1569,"title":{},"body":{"license.html":{}}}],["shared/can",{"_index":1243,"title":{},"body":{"components/UiComponent.html":{},"modules/UiRoutingModule.html":{}}}],["shared/info",{"_index":1245,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/messag",{"_index":1244,"title":{},"body":{"components/UiComponent.html":{}}}],["shared/shared.modul",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["sharedmodul",{"_index":83,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UiModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sharedmodule.forroot",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["shortest",{"_index":346,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["show",{"_index":575,"title":{},"body":{"components/HomeComponent.html":{},"components/MapComponent.html":{}}}],["showrect",{"_index":744,"title":{},"body":{"injectables/MapService.html":{}}}],["showrect(bound",{"_index":780,"title":{},"body":{"injectables/MapService.html":{}}}],["simonetti",{"_index":456,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["simplechang",{"_index":536,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["simul",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"injectables/NetworkService.html":{},"components/SimulationComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["simulation'},{'nam",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["simulation.component.html",{"_index":1194,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.component.scss",{"_index":1193,"title":{},"body":{"components/SimulationComponent.html":{}}}],["simulation.servic",{"_index":1202,"title":{},"body":{"modules/SimulationModule.html":{}}}],["simulation/simulation.modul",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["simulation/simulation.servic",{"_index":1392,"title":{},"body":{"injectables/WizardService.html":{}}}],["simulationcompon",{"_index":57,"title":{"components/SimulationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simulationmodul",{"_index":84,"title":{"modules/SimulationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SimulationModule.html":{},"modules.html":{},"overview.html":{}}}],["simulationservic",{"_index":1200,"title":{"injectables/SimulationService.html":{}},"body":{"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["size",{"_index":806,"title":{},"body":{"injectables/MapService.html":{}}}],["snack",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["snackbar",{"_index":1228,"title":{},"body":{"components/UiComponent.html":{}}}],["softwar",{"_index":1551,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Clock.html":{},"modules/DemandModule.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/MaterialModule.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"modules/NetworkModule.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"modules/SharedModule.html":{},"components/SimulationComponent.html":{},"modules/SimulationModule.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["south",{"_index":759,"title":{},"body":{"injectables/MapService.html":{}}}],["specif",{"_index":281,"title":{},"body":{"classes/Edge.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["splitway",{"_index":907,"title":{},"body":{"injectables/NetworkService.html":{}}}],["splitway(filteredwaynod",{"_index":946,"title":{},"body":{"injectables/NetworkService.html":{}}}],["sponsor",{"_index":433,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["src",{"_index":1512,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.transition.t",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map.style.t",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.module.t",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../reducers.t",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.t",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ui",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.t",{"_index":1509,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../wizard.actions.t",{"_index":1508,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../wizard.reducer.t",{"_index":1510,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../wizard.t",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":118,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/demand/demand.module.t",{"_index":217,"title":{},"body":{"modules/DemandModule.html":{}}}],["src/app/demand/demand.service.t",{"_index":219,"title":{},"body":{"injectables/DemandService.html":{},"coverage.html":{}}}],["src/app/demand/demand.service.ts:8",{"_index":225,"title":{},"body":{"injectables/DemandService.html":{}}}],["src/app/home/home.component.t",{"_index":571,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:15",{"_index":578,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":580,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:23",{"_index":579,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.transition.t",{"_index":1437,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/location/location.module.t",{"_index":639,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/app/location/location.service.t",{"_index":641,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{}}}],["src/app/location/location.service.ts:13",{"_index":669,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:15",{"_index":654,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:21",{"_index":665,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:31",{"_index":656,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:53",{"_index":661,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:68",{"_index":664,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/location/location.service.ts:72",{"_index":667,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/network/graph.t",{"_index":227,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["src/app/network/graph.ts:101",{"_index":1077,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:103",{"_index":1076,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:105",{"_index":1075,"title":{},"body":{"classes/Relation.html":{}}}],["src/app/network/graph.ts:118",{"_index":561,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:120",{"_index":560,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:122",{"_index":562,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:124",{"_index":568,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:128",{"_index":565,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:132",{"_index":569,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:136",{"_index":567,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:140",{"_index":564,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:153",{"_index":563,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:160",{"_index":566,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:170",{"_index":570,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/network/graph.ts:29",{"_index":1073,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:31",{"_index":1071,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:33",{"_index":1072,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:35",{"_index":1074,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:37",{"_index":1070,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:39",{"_index":1069,"title":{},"body":{"classes/Node.html":{}}}],["src/app/network/graph.ts:52",{"_index":258,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:54",{"_index":260,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:56",{"_index":247,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:58",{"_index":261,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:63",{"_index":248,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:68",{"_index":251,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:73",{"_index":253,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:75",{"_index":262,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:77",{"_index":246,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:79",{"_index":259,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:81",{"_index":245,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/graph.ts:90",{"_index":263,"title":{},"body":{"classes/Edge.html":{}}}],["src/app/network/network.module.t",{"_index":893,"title":{},"body":{"modules/NetworkModule.html":{}}}],["src/app/network/network.service.t",{"_index":896,"title":{},"body":{"injectables/NetworkService.html":{},"coverage.html":{}}}],["src/app/network/network.service.ts:135",{"_index":936,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:164",{"_index":951,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:178",{"_index":930,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:185",{"_index":928,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:192",{"_index":918,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:20",{"_index":953,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:224",{"_index":914,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:228",{"_index":948,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:25",{"_index":952,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:260",{"_index":927,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:30",{"_index":954,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:32",{"_index":911,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:36",{"_index":941,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:43",{"_index":929,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:47",{"_index":943,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:51",{"_index":934,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:55",{"_index":945,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:62",{"_index":931,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:79",{"_index":920,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/weather/weather.module.t",{"_index":1329,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/network/weather/weather.service.t",{"_index":1331,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/app/network/weather/weather.service.ts:8",{"_index":1334,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/shared/can",{"_index":187,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.t",{"_index":440,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:10",{"_index":448,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:12",{"_index":445,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/info",{"_index":622,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["src/app/shared/material.module.t",{"_index":860,"title":{},"body":{"modules/MaterialModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/messag",{"_index":881,"title":{},"body":{"components/MessageArchivedComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.t",{"_index":1174,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/simulation/clock.t",{"_index":213,"title":{},"body":{"classes/Clock.html":{},"coverage.html":{}}}],["src/app/simulation/simulation.module.t",{"_index":1201,"title":{},"body":{"modules/SimulationModule.html":{}}}],["src/app/simulation/simulation.service.t",{"_index":1203,"title":{},"body":{"injectables/SimulationService.html":{},"coverage.html":{}}}],["src/app/simulation/simulation.service.ts:8",{"_index":1205,"title":{},"body":{"injectables/SimulationService.html":{}}}],["src/app/ui/map/googl",{"_index":482,"title":{},"body":{"components/GoogleMapComponent.html":{},"coverage.html":{}}}],["src/app/ui/map/map.component.t",{"_index":686,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/ui/map/map.component.ts:23",{"_index":696,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:26",{"_index":703,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:28",{"_index":697,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:29",{"_index":698,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:30",{"_index":700,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:31",{"_index":701,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:32",{"_index":702,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:33",{"_index":699,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:34",{"_index":691,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:52",{"_index":692,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:61",{"_index":695,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:65",{"_index":693,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.component.ts:95",{"_index":694,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/ui/map/map.service.t",{"_index":731,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/ui/map/map.service.ts:100",{"_index":763,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:110",{"_index":761,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:134",{"_index":775,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:146",{"_index":754,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:16",{"_index":786,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:18",{"_index":788,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:20",{"_index":784,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:22",{"_index":747,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:26",{"_index":770,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:38",{"_index":765,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:46",{"_index":773,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:53",{"_index":779,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:59",{"_index":771,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:70",{"_index":750,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:79",{"_index":781,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.service.ts:96",{"_index":762,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/ui/map/map.style.t",{"_index":1461,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/actions/wizard.actions.t",{"_index":458,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:20",{"_index":1214,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:22",{"_index":1215,"title":{},"body":{"classes/StepChanged.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:28",{"_index":1216,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:30",{"_index":1217,"title":{},"body":{"classes/StepError.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:36",{"_index":1218,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:38",{"_index":1219,"title":{},"body":{"classes/StepPending.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:44",{"_index":463,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:46",{"_index":464,"title":{},"body":{"classes/GoOn.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:52",{"_index":1078,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/ui/models/actions/wizard.actions.ts:54",{"_index":1079,"title":{},"body":{"classes/Reset.html":{}}}],["src/app/ui/models/base.component.t",{"_index":157,"title":{},"body":{"classes/BaseComponent.html":{},"coverage.html":{}}}],["src/app/ui/models/base.component.ts:11",{"_index":175,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:13",{"_index":173,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:22",{"_index":181,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:27",{"_index":176,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:32",{"_index":180,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/base.component.ts:9",{"_index":172,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/ui/models/reducers.t",{"_index":1301,"title":{},"body":{"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/reducers/wizard.reducer.t",{"_index":1405,"title":{},"body":{"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/models/wizard.t",{"_index":1213,"title":{},"body":{"interfaces/Step.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/ui",{"_index":1298,"title":{},"body":{"modules/UiRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/ui/ui.component.t",{"_index":1220,"title":{},"body":{"components/UiComponent.html":{},"coverage.html":{}}}],["src/app/ui/ui.component.ts:24",{"_index":1241,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:26",{"_index":1231,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:36",{"_index":1235,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:49",{"_index":1234,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:55",{"_index":1232,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:65",{"_index":1240,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:74",{"_index":1233,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:78",{"_index":1239,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.component.ts:86",{"_index":1237,"title":{},"body":{"components/UiComponent.html":{}}}],["src/app/ui/ui.module.t",{"_index":1273,"title":{},"body":{"modules/UiModule.html":{}}}],["src/app/ui/weather/weather.component.t",{"_index":1320,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/ui/weather/weather.component.ts:12",{"_index":1325,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/weather/weather.component.ts:8",{"_index":1324,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/ui/wizard/chang",{"_index":198,"title":{},"body":{"components/ChangeOfConditionsComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/estim",{"_index":352,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/search",{"_index":1080,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/select",{"_index":1131,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.t",{"_index":1192,"title":{},"body":{"components/SimulationComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:11",{"_index":1196,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:13",{"_index":1195,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/simulation/simulation.component.ts:17",{"_index":1197,"title":{},"body":{"components/SimulationComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.t",{"_index":1206,"title":{},"body":{"components/StatisticsComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:11",{"_index":1211,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:13",{"_index":1210,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/statistics/statistics.component.ts:17",{"_index":1212,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["src/app/ui/wizard/wizard.component.t",{"_index":1335,"title":{},"body":{"components/WizardComponent.html":{},"coverage.html":{}}}],["src/app/ui/wizard/wizard.component.ts:20",{"_index":1353,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:22",{"_index":1354,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:24",{"_index":1357,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:28",{"_index":1343,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:36",{"_index":1346,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:66",{"_index":1345,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:76",{"_index":1349,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.component.ts:88",{"_index":1344,"title":{},"body":{"components/WizardComponent.html":{}}}],["src/app/ui/wizard/wizard.service.t",{"_index":1374,"title":{},"body":{"injectables/WizardService.html":{},"coverage.html":{}}}],["src/app/ui/wizard/wizard.service.ts:19",{"_index":1389,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:21",{"_index":1379,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:37",{"_index":1388,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:44",{"_index":1383,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:51",{"_index":1384,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:58",{"_index":1385,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:65",{"_index":1381,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/ui/wizard/wizard.service.ts:72",{"_index":1386,"title":{},"body":{"injectables/WizardService.html":{}}}],["src/app/utils.t",{"_index":1474,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.t",{"_index":1476,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1477,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":621,"title":{"index.html":{},"license.html":{}},"body":{"components/HomeComponent.html":{}}}],["starttest",{"_index":1539,"title":{},"body":{"index.html":{}}}],["state",{"_index":1099,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.currentstep",{"_index":1421,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.error",{"_index":1423,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.pend",{"_index":1425,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.step",{"_index":1419,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["state.steps[action.payload.index",{"_index":1413,"title":{},"body":{"interfaces/WizardState.html":{}}}],["state.wizard",{"_index":1315,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1190,"title":{},"body":{"modules/SharedModule.html":{}}}],["statist",{"_index":1207,"title":{},"body":{"components/StatisticsComponent.html":{},"components/WizardComponent.html":{}}}],["statistics'},{'nam",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["statistics.component.html",{"_index":1209,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statistics.component.scss",{"_index":1208,"title":{},"body":{"components/StatisticsComponent.html":{}}}],["statisticscompon",{"_index":59,"title":{"components/StatisticsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statu",{"_index":676,"title":{},"body":{"injectables/LocationService.html":{}}}],["step",{"_index":466,"title":{"interfaces/Step.html":{}},"body":{"classes/GoOn.html":{},"components/MapComponent.html":{},"injectables/NetworkService.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["stepchang",{"_index":470,"title":{"classes/StepChanged.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepclick",{"_index":1340,"title":{},"body":{"components/WizardComponent.html":{}}}],["stepclick(ev",{"_index":1347,"title":{},"body":{"components/WizardComponent.html":{}}}],["steperror",{"_index":471,"title":{"classes/StepError.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["steppend",{"_index":472,"title":{"classes/StepPending.html":{}},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stepper",{"_index":1338,"title":{},"body":{"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["stepperselectionev",{"_index":1348,"title":{},"body":{"components/WizardComponent.html":{}}}],["steps[0",{"_index":719,"title":{},"body":{"components/MapComponent.html":{}}}],["steps[this.index",{"_index":1157,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["store",{"_index":360,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["storemodul",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/UiModule.html":{}}}],["storemodule.forfeature('ui",{"_index":1296,"title":{},"body":{"modules/UiModule.html":{}}}],["storemodule.forroot",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["strada",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["strategi",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["strategy.t",{"_index":120,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"coverage.html":{}}}],["strategy.ts:6",{"_index":130,"title":{},"body":{"classes/AppPreloadingStrategy.html":{}}}],["stream",{"_index":398,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["string",{"_index":275,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":297,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["style",{"_index":495,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"miscellaneous/variables.html":{}}}],["styler",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["subject",{"_index":1566,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":1561,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":177,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["subscript",{"_index":164,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["subscription.unsubscrib",{"_index":184,"title":{},"body":{"classes/BaseComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["substanti",{"_index":1570,"title":{},"body":{"license.html":{}}}],["super",{"_index":389,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["support",{"_index":1128,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"modules.html":{}}}],["sure",{"_index":1251,"title":{},"body":{"components/UiComponent.html":{}}}],["surfac",{"_index":284,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["svg",{"_index":1590,"title":{},"body":{"modules.html":{}}}],["sw",{"_index":753,"title":{},"body":{"injectables/MapService.html":{}}}],["sw.lat",{"_index":853,"title":{},"body":{"injectables/MapService.html":{}}}],["sw.lng",{"_index":854,"title":{},"body":{"injectables/MapService.html":{}}}],["switch",{"_index":407,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"interfaces/WizardState.html":{}}}],["switchmap",{"_index":382,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["switchmap((respons",{"_index":400,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["tabl",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":241,"title":{"interfaces/Tag.html":{}},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["tags[key",{"_index":1068,"title":{},"body":{"injectables/NetworkService.html":{}}}],["take",{"_index":255,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tap",{"_index":1242,"title":{},"body":{"components/UiComponent.html":{}}}],["tap((dialogresult",{"_index":1255,"title":{},"body":{"components/UiComponent.html":{}}}],["target",{"_index":596,"title":{},"body":{"components/HomeComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["term",{"_index":450,"title":{},"body":{"components/FooterComponent.html":{}}}],["tertiari",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testlicens",{"_index":1540,"title":{},"body":{"index.html":{}}}],["text",{"_index":588,"title":{},"body":{"components/HomeComponent.html":{}}}],["text.split",{"_index":590,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.area.asobserv",{"_index":829,"title":{},"body":{"injectables/MapService.html":{}}}],["this.area.next(a",{"_index":846,"title":{},"body":{"injectables/MapService.html":{}}}],["this.area.next(nul",{"_index":799,"title":{},"body":{"injectables/MapService.html":{}}}],["this.bound",{"_index":964,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.bounds.east",{"_index":1036,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.bounds.north",{"_index":1035,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.bounds.south",{"_index":1033,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.bounds.west",{"_index":1034,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.buildbody(queri",{"_index":974,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.buildqueri",{"_index":972,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.calcarea(n",{"_index":842,"title":{},"body":{"injectables/MapService.html":{}}}],["this.cent",{"_index":548,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.checkrect",{"_index":827,"title":{},"body":{"injectables/MapService.html":{}}}],["this.createmap(el",{"_index":541,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.demand.reset",{"_index":1401,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.dialog.open(infodialogcompon",{"_index":1262,"title":{},"body":{"components/UiComponent.html":{}}}],["this.disabledefaultui",{"_index":549,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.disabledoubleclickzoom",{"_index":550,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.edg",{"_index":311,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edgeid",{"_index":294,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.edges.push(edg",{"_index":336,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.elementref.nativeelement.queryselector('#map",{"_index":540,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.elementref.nativeelement.queryselector('.headlin",{"_index":586,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.extracttags(reffirstnode['tag",{"_index":1055,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.extracttags(refsecondnode['tag",{"_index":1062,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.formbuilder.array",{"_index":1364,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formbuilder.group",{"_index":1363,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.formgroup.get('bounds').setvalue(steps[this.index]['data']['bound",{"_index":1158,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.formgroup.get('center').setvalu",{"_index":1102,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.geocod",{"_index":670,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.geocoder.geocod",{"_index":674,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.gesturehandl",{"_index":554,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.getnode(node.nodeid",{"_index":320,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.graph",{"_index":963,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.graph.addedge(edg",{"_index":1066,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.graph.addorupdatenode(firstnod",{"_index":1064,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.graph.addorupdatenode(secondnod",{"_index":1065,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.graph.getedg",{"_index":1011,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.http.post(url",{"_index":975,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.index",{"_index":395,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.infowindow",{"_index":828,"title":{},"body":{"injectables/MapService.html":{}}}],["this.infowindow.clos",{"_index":798,"title":{},"body":{"injectables/MapService.html":{}}}],["this.infowindow.open(this.map",{"_index":849,"title":{},"body":{"injectables/MapService.html":{}}}],["this.infowindow.setcontent(cont",{"_index":847,"title":{},"body":{"injectables/MapService.html":{}}}],["this.infowindow.setposition(posit",{"_index":848,"title":{},"body":{"injectables/MapService.html":{}}}],["this.latlng",{"_index":671,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.location.codeaddress(address).foreach",{"_index":1101,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.getcurrentposition().subscrib",{"_index":1116,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.location.reset",{"_index":1398,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.location.setlatlng(this.formgroup.get('center').valu",{"_index":1098,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.map",{"_index":800,"title":{},"body":{"injectables/MapService.html":{}}}],["this.map.buildbounds(this.cent",{"_index":729,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map.getcent",{"_index":811,"title":{},"body":{"injectables/MapService.html":{}}}],["this.map.initmap(el",{"_index":547,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.panto(latlng",{"_index":808,"title":{},"body":{"injectables/MapService.html":{}}}],["this.map.reset",{"_index":1403,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.map.setcenter(latlng",{"_index":816,"title":{},"body":{"injectables/MapService.html":{}}}],["this.map.setcenter(this.cent",{"_index":544,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.setzoom(this.zoom",{"_index":546,"title":{},"body":{"components/GoogleMapComponent.html":{}}}],["this.map.setzoom(zoom",{"_index":809,"title":{},"body":{"injectables/MapService.html":{}}}],["this.map.showrect(bound",{"_index":730,"title":{},"body":{"components/MapComponent.html":{}}}],["this.maptypeid",{"_index":551,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.maxzoom",{"_index":552,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.min.getd",{"_index":1151,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getfullyear",{"_index":1149,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.gethour",{"_index":1152,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getminut",{"_index":1154,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.min.getmonth",{"_index":1150,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.minzoom",{"_index":553,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.network.creategraph(respons",{"_index":401,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.network.getnetwork().pip",{"_index":399,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.network.gettrafficdata",{"_index":402,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.network.reset",{"_index":1399,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.network.setbounds(this.formgroup.get('bounds').valu",{"_index":1155,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.settime(this.formgroup.get('time').valu",{"_index":1156,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["this.network.updategraph(respons",{"_index":403,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.nod",{"_index":309,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodeid",{"_index":293,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.find((nod",{"_index":316,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.nodes.push(nod",{"_index":334,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.opendialog('ar",{"_index":1250,"title":{},"body":{"components/UiComponent.html":{}}}],["this.opensnackbar(error",{"_index":1249,"title":{},"body":{"components/UiComponent.html":{}}}],["this.pend",{"_index":1247,"title":{},"body":{"components/UiComponent.html":{}}}],["this.receiveact",{"_index":391,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.rectangl",{"_index":823,"title":{},"body":{"injectables/MapService.html":{}}}],["this.rectangle.addlistener('bounds_chang",{"_index":826,"title":{},"body":{"injectables/MapService.html":{}}}],["this.rectangle.getbound",{"_index":831,"title":{},"body":{"injectables/MapService.html":{}}}],["this.rectangle.getbounds().getnortheast",{"_index":840,"title":{},"body":{"injectables/MapService.html":{}}}],["this.rectangle.getbounds().getsouthwest",{"_index":841,"title":{},"body":{"injectables/MapService.html":{}}}],["this.rectangle.setmap(nul",{"_index":797,"title":{},"body":{"injectables/MapService.html":{}}}],["this.rectangle.setmap(this.map",{"_index":825,"title":{},"body":{"injectables/MapService.html":{}}}],["this.rel",{"_index":313,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.relationid",{"_index":303,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["this.res",{"_index":802,"title":{},"body":{"injectables/MapService.html":{}}}],["this.resetmap.emit(nul",{"_index":796,"title":{},"body":{"injectables/MapService.html":{}}}],["this.router.navigate(['/hom",{"_index":1258,"title":{},"body":{"components/UiComponent.html":{}}}],["this.schedul",{"_index":396,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.sendact",{"_index":392,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.setinfowindow(cont",{"_index":844,"title":{},"body":{"injectables/MapService.html":{}}}],["this.show",{"_index":615,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.simulation.reset",{"_index":1402,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.snackbar.openfromcomponent(messagearchivedcompon",{"_index":1259,"title":{},"body":{"components/UiComponent.html":{}}}],["this.splitway(filteredwaynod",{"_index":999,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.splitway(filteredwaynodes.revers",{"_index":1004,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.stat",{"_index":1396,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.stepp",{"_index":1369,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.stepper.reset",{"_index":1404,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.store.dispatch",{"_index":1397,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.store.pipe(select(fromui.wizardstate)).subscribe((st",{"_index":1395,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.styl",{"_index":555,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["this.subscriptions.foreach((subscript",{"_index":183,"title":{},"body":{"classes/BaseComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["this.subscriptions.push(stream.subscrib",{"_index":404,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.subscriptions.push(this.formgroup.valuechanges.subscrib",{"_index":1097,"title":{},"body":{"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.subscriptions.push(this.map.getarea().subscribe((area",{"_index":722,"title":{},"body":{"components/MapComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.currentstep)).subscribe((currentstep",{"_index":393,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.error)).subscribe((error",{"_index":1248,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.pending)).subscribe((pend",{"_index":1246,"title":{},"body":{"components/UiComponent.html":{}}}],["this.subscriptions.push(this.store.pipe(select(fromui.steps)).subscribe((step",{"_index":717,"title":{},"body":{"components/MapComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.tim",{"_index":965,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.valuechang",{"_index":390,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["this.weather.reset",{"_index":1400,"title":{},"body":{"injectables/WizardService.html":{}}}],["this.wizard.goon",{"_index":1372,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.putinerror(\"brows",{"_index":1126,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('invalid",{"_index":1114,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror('zero",{"_index":1109,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putinerror(messag",{"_index":434,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.putonhold",{"_index":397,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{}}}],["this.wizard.removefromwait",{"_index":438,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["this.wizard.reset",{"_index":435,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/UiComponent.html":{}}}],["this.wizard.state.currentstep",{"_index":718,"title":{},"body":{"components/MapComponent.html":{}}}],["this.wizard.state.steps[0].data.cent",{"_index":720,"title":{},"body":{"components/MapComponent.html":{}}}],["this.wizard.state.steps[1",{"_index":724,"title":{},"body":{"components/MapComponent.html":{}}}],["this.wizard.stepp",{"_index":1368,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizard.updatestep(this.formgroup.valu",{"_index":1106,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["this.wizardform",{"_index":1362,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formstep",{"_index":1361,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.wizardform.get('formsteps').get([index]).valu",{"_index":1373,"title":{},"body":{"components/WizardComponent.html":{}}}],["this.zone.run",{"_index":839,"title":{},"body":{"injectables/MapService.html":{}}}],["this.zoom",{"_index":556,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{}}}],["through",{"_index":646,"title":{},"body":{"injectables/LocationService.html":{}}}],["throwerror",{"_index":957,"title":{},"body":{"injectables/NetworkService.html":{}}}],["throwerror('getnetwork",{"_index":979,"title":{},"body":{"injectables/NetworkService.html":{}}}],["throwerror('gettrafficdata",{"_index":1018,"title":{},"body":{"injectables/NetworkService.html":{}}}],["time",{"_index":620,"title":{},"body":{"components/HomeComponent.html":{},"injectables/NetworkService.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["timelimit",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeout",{"_index":1029,"title":{},"body":{"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":1529,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1587,"title":{},"body":{"license.html":{}}}],["total",{"_index":254,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["traffic",{"_index":222,"title":{},"body":{"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"injectables/SimulationService.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["trafficdata",{"_index":937,"title":{},"body":{"injectables/NetworkService.html":{},"miscellaneous/variables.html":{}}}],["transit",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('void",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatez",{"_index":603,"title":{},"body":{"components/HomeComponent.html":{}}}],["transport",{"_index":305,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["tri",{"_index":415,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"injectables/LocationService.html":{},"injectables/NetworkService.html":{}}}],["trigger",{"_index":812,"title":{},"body":{"injectables/MapService.html":{}}}],["trigger('hometransit",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/UiComponent.html":{},"injectables/WizardService.html":{},"miscellaneous/variables.html":{}}}],["trunk",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["turf/area",{"_index":792,"title":{},"body":{"injectables/MapService.html":{},"dependencies.html":{}}}],["turf/help",{"_index":794,"title":{},"body":{"injectables/MapService.html":{},"dependencies.html":{}}}],["two",{"_index":230,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["type",{"_index":132,"title":{},"body":{"classes/AppPreloadingStrategy.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ChangeOfConditionsComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"components/MessageArchivedComponent.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"interfaces/Step.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":1596,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["ui'},{'nam",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["ui.compon",{"_index":1279,"title":{},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{}}}],["ui.component.html",{"_index":1222,"title":{},"body":{"components/UiComponent.html":{}}}],["ui.component.scss",{"_index":1221,"title":{},"body":{"components/UiComponent.html":{}}}],["ui/ui.module#uimodul",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["uicompon",{"_index":61,"title":{"components/UiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uiconfig",{"_index":709,"title":{},"body":{"components/MapComponent.html":{},"injectables/MapService.html":{},"components/SelectionOfTheAreaComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uiconfig.areaminlimit",{"_index":723,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.map.cent",{"_index":715,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.map.zoom",{"_index":716,"title":{},"body":{"components/MapComponent.html":{}}}],["uiconfig.timelimit",{"_index":1153,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{}}}],["uimodul",{"_index":1267,"title":{"modules/UiModule.html":{}},"body":{"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["uiroutingmodul",{"_index":1272,"title":{"modules/UiRoutingModule.html":{}},"body":{"modules/UiModule.html":{},"modules/UiRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["uistat",{"_index":1300,"title":{"interfaces/UiState.html":{}},"body":{"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unavail",{"_index":1124,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["unclassifi",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefin",{"_index":315,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":1513,"title":{},"body":{"index.html":{}}}],["union",{"_index":1037,"title":{},"body":{"injectables/NetworkService.html":{}}}],["unknown_error",{"_index":1113,"title":{},"body":{"components/SearchForTheAreaComponent.html":{}}}],["updat",{"_index":532,"title":{},"body":{"components/GoogleMapComponent.html":{},"components/MapComponent.html":{},"injectables/NetworkService.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"index.html":{}}}],["updategraph",{"_index":908,"title":{},"body":{"injectables/NetworkService.html":{}}}],["updategraph(data",{"_index":950,"title":{},"body":{"injectables/NetworkService.html":{}}}],["updateon",{"_index":1366,"title":{},"body":{"components/WizardComponent.html":{}}}],["updatestep",{"_index":1378,"title":{},"body":{"injectables/WizardService.html":{}}}],["updatestep(data",{"_index":1387,"title":{},"body":{"injectables/WizardService.html":{}}}],["urban",{"_index":616,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["url",{"_index":966,"title":{},"body":{"injectables/NetworkService.html":{},"miscellaneous/variables.html":{}}}],["urlencod",{"_index":971,"title":{},"body":{"injectables/NetworkService.html":{}}}],["us",{"_index":618,"title":{},"body":{"components/HomeComponent.html":{},"injectables/NetworkService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["usefactori",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":1302,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["util",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["v.destination.lat",{"_index":1015,"title":{},"body":{"injectables/NetworkService.html":{}}}],["v.destination.lon",{"_index":1016,"title":{},"body":{"injectables/NetworkService.html":{}}}],["v.origin.lat",{"_index":1013,"title":{},"body":{"injectables/NetworkService.html":{}}}],["v.origin.lon",{"_index":1014,"title":{},"body":{"injectables/NetworkService.html":{}}}],["valid",{"_index":1169,"title":{},"body":{"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["validators.requir",{"_index":1365,"title":{},"body":{"components/WizardComponent.html":{}}}],["valu",{"_index":171,"title":{},"body":{"classes/BaseComponent.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.dist",{"_index":1022,"title":{},"body":{"injectables/NetworkService.html":{}}}],["value.dur",{"_index":1024,"title":{},"body":{"injectables/NetworkService.html":{}}}],["value.durationintraff",{"_index":1026,"title":{},"body":{"injectables/NetworkService.html":{}}}],["value['id",{"_index":1045,"title":{},"body":{"injectables/NetworkService.html":{}}}],["valuechang",{"_index":169,"title":{},"body":{"classes/BaseComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{}}}],["var",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["variabl",{"_index":1429,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["veloc",{"_index":242,"title":{},"body":{"classes/Edge.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["version",{"_index":349,"title":{},"body":{"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"classes/Graph.html":{},"interfaces/Member.html":{},"classes/Node.html":{},"classes/Relation.html":{},"interfaces/Tag.html":{}}}],["viewchild",{"_index":1352,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewchild('stepp",{"_index":1360,"title":{},"body":{"components/WizardComponent.html":{}}}],["viewencapsul",{"_index":704,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["viewencapsulation.non",{"_index":688,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"components/WizardComponent.html":{}}}],["visibl",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":174,"title":{},"body":{"classes/BaseComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"injectables/DemandService.html":{},"classes/Edge.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"classes/Graph.html":{},"components/HomeComponent.html":{},"injectables/LocationService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/Member.html":{},"injectables/NetworkService.html":{},"classes/Node.html":{},"classes/Relation.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"injectables/SimulationService.html":{},"components/StatisticsComponent.html":{},"interfaces/Tag.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{}}}],["wait",{"_index":437,"title":{},"body":{"components/EstimateOfDemandComponent.html":{}}}],["want",{"_index":1252,"title":{},"body":{"components/UiComponent.html":{}}}],["warranti",{"_index":1572,"title":{},"body":{"license.html":{}}}],["way",{"_index":947,"title":{},"body":{"injectables/NetworkService.html":{}}}],["way['nod",{"_index":989,"title":{},"body":{"injectables/NetworkService.html":{}}}],["way['tags']['oneway",{"_index":1000,"title":{},"body":{"injectables/NetworkService.html":{}}}],["way[highway",{"_index":1039,"title":{},"body":{"injectables/NetworkService.html":{}}}],["waynod",{"_index":988,"title":{},"body":{"injectables/NetworkService.html":{}}}],["waynodes.filter((nod",{"_index":994,"title":{},"body":{"injectables/NetworkService.html":{}}}],["weather",{"_index":1321,"title":{},"body":{"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{}}}],["weather'},{'nam",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{}}}],["weather.component.html",{"_index":1323,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":1322,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":1330,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.compon",{"_index":1293,"title":{},"body":{"modules/UiModule.html":{}}}],["weather/weather.modul",{"_index":894,"title":{},"body":{"modules/NetworkModule.html":{}}}],["weathercompon",{"_index":63,"title":{"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermodul",{"_index":892,"title":{"modules/WeatherModule.html":{}},"body":{"modules/NetworkModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservic",{"_index":1328,"title":{"injectables/WeatherService.html":{}},"body":{"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["web",{"_index":617,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{},"index.html":{}}}],["west",{"_index":760,"title":{},"body":{"injectables/MapService.html":{}}}],["whether",{"_index":1585,"title":{},"body":{"license.html":{}}}],["width",{"_index":1263,"title":{},"body":{"components/UiComponent.html":{}}}],["window",{"_index":805,"title":{},"body":{"injectables/MapService.html":{}}}],["window'",{"_index":776,"title":{},"body":{"injectables/MapService.html":{}}}],["without",{"_index":1553,"title":{},"body":{"license.html":{}}}],["wizard",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"classes/GoOn.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"classes/Reset.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"components/UiComponent.html":{},"interfaces/UiState.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["wizard.component.html",{"_index":1337,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.component.scss",{"_index":1336,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizard.servic",{"_index":384,"title":{},"body":{"components/EstimateOfDemandComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/WizardComponent.html":{}}}],["wizard/chang",{"_index":1286,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/estim",{"_index":1284,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/search",{"_index":1281,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/select",{"_index":1283,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/simulation/simulation.compon",{"_index":1288,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/statistics/statistics.compon",{"_index":1289,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.compon",{"_index":1280,"title":{},"body":{"modules/UiModule.html":{}}}],["wizard/wizard.servic",{"_index":705,"title":{},"body":{"components/MapComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{}}}],["wizardact",{"_index":481,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"interfaces/WizardState.html":{},"miscellaneous/typealiases.html":{}}}],["wizardactiontyp",{"_index":469,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"miscellaneous/enumerations.html":{}}}],["wizardactiontypes.goon",{"_index":465,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.reset",{"_index":480,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.stepchang",{"_index":475,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steperror",{"_index":477,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardactiontypes.steppend",{"_index":478,"title":{},"body":{"classes/GoOn.html":{},"classes/Reset.html":{},"classes/StepChanged.html":{},"classes/StepError.html":{},"classes/StepPending.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{}}}],["wizardcompon",{"_index":65,"title":{"components/WizardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangeOfConditionsComponent.html":{},"components/EstimateOfDemandComponent.html":{},"components/FooterComponent.html":{},"components/GoogleMapComponent.html":{},"components/HomeComponent.html":{},"components/InfoDialogComponent.html":{},"components/MapComponent.html":{},"components/MessageArchivedComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/SimulationComponent.html":{},"components/StatisticsComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WeatherComponent.html":{},"components/WizardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardform",{"_index":1339,"title":{},"body":{"components/WizardComponent.html":{}}}],["wizardreduc",{"_index":1463,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["wizardreducer(st",{"_index":1410,"title":{},"body":{"interfaces/WizardState.html":{},"miscellaneous/functions.html":{}}}],["wizardservic",{"_index":361,"title":{"injectables/WizardService.html":{}},"body":{"components/EstimateOfDemandComponent.html":{},"components/MapComponent.html":{},"components/SearchForTheAreaComponent.html":{},"components/SelectionOfTheAreaComponent.html":{},"components/UiComponent.html":{},"modules/UiModule.html":{},"components/WizardComponent.html":{},"injectables/WizardService.html":{},"coverage.html":{},"overview.html":{}}}],["wizardst",{"_index":1314,"title":{"interfaces/WizardState.html":{}},"body":{"interfaces/UiState.html":{},"injectables/WizardService.html":{},"interfaces/WizardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":657,"title":{},"body":{"injectables/LocationService.html":{}}}],["wrappedtext",{"_index":591,"title":{},"body":{"components/HomeComponent.html":{}}}],["www",{"_index":970,"title":{},"body":{"injectables/NetworkService.html":{}}}],["ye",{"_index":625,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["zone",{"_index":748,"title":{},"body":{"injectables/MapService.html":{}}}],["zone.j",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/DemandModule.html":{},"components/GoogleMapComponent.html":{},"modules/LocationModule.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"modules/NetworkModule.html":{},"modules/SharedModule.html":{},"modules/SimulationModule.html":{},"modules/UiModule.html":{},"modules/WeatherModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent { }\n\n    \n\n    \n        \n\n    \n        \n            \n            \n                STRADA\n            \n\n            \n\n            \n                \n            \n            \n                \n                    About\n                \n            \n        \n    \n\n    \n\n        \n            \n        \n\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    STRADA                                                                                                                About                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                HomeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    DemandModule\n                            \n                            \n                                    LocationModule\n                            \n                            \n                                    NetworkModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    SimulationModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LocationModule } from './location/location.module';\nimport { NetworkModule } from './network/network.module';\nimport { DemandModule } from './demand/demand.module';\nimport { SimulationModule } from './simulation/simulation.module';\n\nimport { loadScripts } from './utils';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HomeComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        SharedModule.forRoot(),\n        StoreModule.forRoot({}),\n        EffectsModule.forRoot([]),\n        LocationModule,\n        NetworkModule,\n        DemandModule,\n        SimulationModule\n    ],\n    providers: [\n        {\n            provide: APP_INITIALIZER,\n            useFactory: loadScripts,\n            deps: [],\n            multi: true\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPreloadingStrategy.html":{"url":"classes/AppPreloadingStrategy.html","title":"class - AppPreloadingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPreloadingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-preloading-strategy.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        PreloadingStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preload\n                            \n                            \n                        \n                    \n                \n                \n                    \npreload(route: Route, load: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-preloading-strategy.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    Route\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        load\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { PreloadingStrategy, Route } from \"@angular/router\";\nimport { Observable, of } from \"rxjs\";\n\nexport class AppPreloadingStrategy implements PreloadingStrategy {\n\n    preload(route: Route, load: Function): Observable {\n        return route.data && route.data.preload ? load() : of(null);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppPreloadingStrategy } from './app-preloading-strategy';\n\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\n    { path: 'home', component: HomeComponent },\n    {\n        path: 'simulation',\n        loadChildren: './ui/ui.module#UiModule',\n        data: { preload: false }\n    },\n    { path: '**', redirectTo: 'home' }\n];\n\n@NgModule({\n    providers: [AppPreloadingStrategy],\n    imports: [\n        RouterModule.forRoot(routes, {\n            preloadingStrategy: AppPreloadingStrategy\n        })\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseComponent.html":{"url":"classes/BaseComponent.html","title":"class - BaseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/base.component.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class inherited from UI components.\n\n            \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/models/base.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { OnInit, OnDestroy } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\n/**\n * Abstract class inherited from UI components.\n */\nexport abstract class BaseComponent implements OnInit, OnDestroy {\n\n    subscriptions: Subscription[] = [];\n\n    abstract ngOnInit(): void;\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    /**\n     * Subscribes to the form changes.\n     */\n    abstract valueChanges(): void;\n\n    /**\n     * Subscribes to the actions sent by other components.\n     */\n    abstract receiveActions(): void;\n\n    /**\n     * Subscribes to the actions sent to other components.\n     */\n    abstract sendActions(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanComponentDeactivate.html":{"url":"interfaces/CanComponentDeactivate.html","title":"interface - CanComponentDeactivate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CanComponentDeactivate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/can-deactivate-guard.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canDeactivate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canDeactivate\n                                    \n                                \n                                \n                                    \n                                        canDeactivate:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate) {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CanDeactivateGuard.html":{"url":"injectables/CanDeactivateGuard.html","title":"injectable - CanDeactivateGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CanDeactivateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/can-deactivate-guard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate(component: CanComponentDeactivate)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/can-deactivate-guard.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    CanComponentDeactivate\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n    canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate {\n    canDeactivate(component: CanComponentDeactivate) {\n        return component.canDeactivate ? component.canDeactivate() : true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeOfConditionsComponent.html":{"url":"components/ChangeOfConditionsComponent.html","title":"component - ChangeOfConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangeOfConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-change-of-conditions\n            \n\n            \n                styleUrls\n                change-of-conditions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-of-conditions.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'wizard-change-of-conditions',\n    templateUrl: './change-of-conditions.component.html',\n    styleUrls: ['./change-of-conditions.component.scss']\n})\nexport class ChangeOfConditionsComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangeOfConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Clock.html":{"url":"classes/Clock.html","title":"class - Clock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Clock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/clock.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Clock {\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DemandModule.html":{"url":"modules/DemandModule.html","title":"module - DemandModule","body":"\n                   \n\n\n\n\n  Modules\n  DemandModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\n\nDemandService\n\nDemandService\n\n\n\nDemandModule\n\nDemandModule\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/demand/demand.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     DemandService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { DemandService } from './demand.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [DemandService]\n})\nexport class DemandModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DemandService.html":{"url":"injectables/DemandService.html","title":"injectable - DemandService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DemandService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/demand/demand.service.ts\n        \n\n            \n                Description\n            \n            \n                Estimates the O/D matrix of the traffic demand.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/demand/demand.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Estimates the O/D matrix of the traffic demand.\n */\n@Injectable() export class DemandService {\n\n    public reset(): void {\n        //\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Edge.html":{"url":"classes/Edge.html","title":"class - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Link between two nodes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                density\n                            \n                            \n                                    Public\n                                destination\n                            \n                            \n                                    Public\n                                distance\n                            \n                            \n                                    Public\n                                duration\n                            \n                            \n                                    Public\n                                durationInTraffic\n                            \n                            \n                                    Public\n                                edgeId\n                            \n                            \n                                    Public\n                                flow\n                            \n                            \n                                    Public\n                                linkFlow\n                            \n                            \n                                    Public\n                                origin\n                            \n                            \n                                    Public\n                                tags\n                            \n                            \n                                    Public\n                                velocity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calcLinkFlow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(edgeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edgeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            density\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        density:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destination\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        destination:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            distance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        distance:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:63\n                            \n                        \n\n                \n                    \n                        Indicates the distance in meters.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            duration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        duration:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:68\n                            \n                        \n\n                \n                    \n                        Indicates the duration in seconds.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            durationInTraffic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        durationInTraffic:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:73\n                            \n                        \n\n                \n                    \n                        Indicates the total duration of the edge, taking into account current traffic conditions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            edgeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        edgeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            linkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        linkFlow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            origin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        origin:     Node\n\n                    \n                \n                    \n                        \n                            Type :     Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            velocity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        velocity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:75\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            calcLinkFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcLinkFlow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:90\n                            \n                        \n\n\n                \n                    \n                            Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as combine from 'mout/array/combine';\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * Gets the incidence matrix of paths for O/D pairs.\n     */\n    public getIncidenceMatrix(): boolean[][] {\n        return null;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     */\n    public getShortestPaths(origin: Node, destination: Node): Node[][] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EstimateOfDemandComponent.html":{"url":"components/EstimateOfDemandComponent.html","title":"component - EstimateOfDemandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EstimateOfDemandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-estimate-of-demand\n            \n\n            \n                styleUrls\n                estimate-of-demand.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./estimate-of-demand.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                schedule\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schedule\n                            \n                            \n                        \n                    \n                \n                \n                    \nschedule()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Performs in sequence the following operations:\n\nGetting network data\nCreation of the graph\nGetting traffic data\nAssociation of values to the graph\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { switchMap } from 'rxjs/operators';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport * as fromUi from '../../models/reducers';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-estimate-of-demand',\n    templateUrl: './estimate-of-demand.component.html',\n    styleUrls: ['./estimate-of-demand.component.scss']\n})\nexport class EstimateOfDemandComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        //\n    }\n\n    sendActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            if (currentStep == this.index) {\n                this.schedule();\n            }\n        }));\n    }\n\n    /**\n     * Performs in sequence the following operations:\n     * - Getting network data\n     * - Creation of the graph\n     * - Getting traffic data\n     * - Association of values to the graph\n     */\n    schedule(): void {\n        this.wizard.putOnHold();\n\n        const stream = this.network.getNetwork().pipe(\n            switchMap((response: any) => {\n                return this.network.createGraph(response);\n            }),\n            switchMap(() => {\n                return this.network.getTrafficData();\n            }),\n            switchMap((response: any) => {\n                return this.network.updateGraph(response);\n            })\n        );\n\n        this.subscriptions.push(stream.subscribe(\n            () => { },\n            (error: any) => {\n                let message: string;\n                switch (error) {\n                    case 'getNetwork':\n                        message = 'The request could not be processed. Check your Internet connection and try again';\n                        break;\n                    case 'createGraph':\n                        message = 'The graph can not be created. Try with another area';\n                        break;\n                    case 'getTrafficData':\n                        message = 'Traffic data cannot be retrieved. ' +\n                            'Past the quota limits traffic data become paid. ' +\n                            'This is an open source project: install a version of it locally or become a sponsor';\n                        break;\n                }\n                this.wizard.putInError(message);\n                this.wizard.reset();\n            },\n            () => {\n                // Removes from waiting.\n                this.wizard.removeFromWaiting();\n\n                console.log(this.network.getGraph());\n            }\n        ));\n    }\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EstimateOfDemandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : new Date().getFullYear()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n    currentYear: number = new Date().getFullYear();\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                \n                    \n                        Privacy\n                    \n                \n                \n                    \n                        Terms of service\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n            Copyright&nbsp;©&nbsp;{{ currentYear }} Roberto&nbsp;Simonetti\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                Privacy                                                                                                Terms of service                                                                                        Copyright © {{ currentYear }} Roberto Simonetti            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoOn.html":{"url":"classes/GoOn.html","title":"class - GoOn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoOn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.GoOn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GoogleMapComponent.html":{"url":"components/GoogleMapComponent.html","title":"component - GoogleMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GoogleMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/google-map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                google-map\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMap\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(map: MapService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/google-map.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                    \n                        Center map. Required.\n\n                            \n                            Type:    google.maps.LatLngLiteral\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDefaultUI\n                    \n                    \n                        Enables/disables all default UI.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDoubleClickZoom\n                    \n                    \n                        Enables/disables zoom and center on double click. Enabled by default.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gestureHandling\n                    \n                    \n                        This setting controls how gestures on the map are handled.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapTypeId\n                    \n                    \n                        The initial map mapTypeId. Defaults to ROADMAP.\n\n                            \n                            Type:    google.maps.MapTypeId\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                    \n                        The maximum zoom level which will be displayed on the map.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                    \n                        The minimum zoom level which will be displayed on the map.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                    \n                        Styles to apply to each of the default map types.\n\n                            \n                            Type:    google.maps.MapTypeStyle[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                    \n                        The initial map zoom level. Required.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createMap(el: HTMLElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLElement\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            On changes, updates center map & zoom.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            On init, creates map.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     MapService\n\n                    \n                \n                    \n                        \n                            Type :     MapService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/google-map.component.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChange, ElementRef } from '@angular/core';\n\nimport { MapService } from './/map.service';\n\n@Component({\n    selector: 'google-map',\n    template: `\n        \n        \n        `\n})\nexport class GoogleMapComponent implements OnInit, OnChanges {\n\n    /**\n     * Center map. Required.\n     */\n    @Input() center: google.maps.LatLngLiteral;\n\n    /*\n     * MapOptions object specification.\n     */\n\n    /**\n     * The initial map zoom level. Required.\n     */\n    @Input() zoom: number;\n    /**\n     * Enables/disables all default UI.\n     */\n    @Input() disableDefaultUI: boolean;\n    /**\n     * Enables/disables zoom and center on double click. Enabled by default.\n     */\n    @Input() disableDoubleClickZoom: boolean;\n    /**\n     * The initial map mapTypeId. Defaults to ROADMAP.\n     */\n    @Input() mapTypeId: google.maps.MapTypeId;\n    /**\n     * The maximum zoom level which will be displayed on the map.\n     */\n    @Input() maxZoom: number;\n    /**\n     * The minimum zoom level which will be displayed on the map.\n     */\n    @Input() minZoom: number;\n    /**\n     * This setting controls how gestures on the map are handled.\n     */\n    @Input() gestureHandling: string;\n    /**\n     * Styles to apply to each of the default map types.\n     */\n    @Input() styles: google.maps.MapTypeStyle[];\n\n    constructor(public map: MapService, private elementRef: ElementRef) { }\n\n    /**\n     * On init, creates map.\n     */\n    ngOnInit(): void {\n        // Gets the map element.\n        const el: HTMLElement = this.elementRef.nativeElement.querySelector('#map');\n\n        this.createMap(el);\n    }\n\n    /**\n     * On changes, updates center map & zoom.\n     */\n    ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n        if (changes['center']) { this.map.setCenter(this.center); }\n        if (changes['zoom']) { this.map.setZoom(this.zoom); }\n    }\n\n    private createMap(el: HTMLElement): void {\n        this.map.initMap(el, {\n            center: this.center,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            mapTypeId: this.mapTypeId,\n            maxZoom: this.maxZoom as number,\n            minZoom: this.minZoom as number,\n            gestureHandling: this.gestureHandling as string,\n            styles: this.styles,\n            zoom: this.zoom as number\n        });\n    }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GoogleMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Graph.html":{"url":"classes/Graph.html","title":"class - Graph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Graph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Graph of the transport network.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                edges\n                            \n                            \n                                    Private\n                                nodes\n                            \n                            \n                                    Private\n                                relations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addEdge\n                            \n                            \n                                    Public\n                                addOrUpdateNode\n                            \n                            \n                                    Public\n                                getEdges\n                            \n                            \n                                    Public\n                                getIncidenceMatrix\n                            \n                            \n                                    Public\n                                getNode\n                            \n                            \n                                    Public\n                                getNodes\n                            \n                            \n                                    Public\n                                getRelations\n                            \n                            \n                                    Public\n                                getShortestPaths\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            edges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        edges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodes:     Node[]\n\n                    \n                \n                    \n                        \n                            Type :     Node[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:118\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            relations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        relations:     Relation[]\n\n                    \n                \n                    \n                        \n                            Type :     Relation[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:122\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addEdge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addEdge(edge: Edge)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:153\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                        \n                                                                    Edge\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addOrUpdateNode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addOrUpdateNode(node: Node)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEdges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Edge[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIncidenceMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getIncidenceMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:160\n                            \n                        \n\n\n                \n                    \n                            Gets the incidence matrix of paths for O/D pairs.\n\n\n                            \n                                Returns :     [][]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNode(nodeId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodeId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Node | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNodes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Node[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRelations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRelations()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Relation[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getShortestPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getShortestPaths(origin: Node, destination: Node)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/graph.ts:170\n                            \n                        \n\n\n                \n                    \n                            Calculates the set of minimum paths between a source and destination node based on the link duration attribute.\nk Shortest Paths algorithm in the Eppstein version.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        origin\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Source node\n\n                                                        \n                                                \n                                                \n                                                        destination\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Destination node\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     [][]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as combine from 'mout/array/combine';\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * Gets the incidence matrix of paths for O/D pairs.\n     */\n    public getIncidenceMatrix(): boolean[][] {\n        return null;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     */\n    public getShortestPaths(origin: Node, destination: Node): Node[][] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        show:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, ElementRef } from '@angular/core';\n\nimport * as anime from 'animejs';\n\nimport { HOME_TRANSITION } from './home.transition';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss'],\n    animations: [HOME_TRANSITION]\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n\n    show = false;\n\n    constructor(private elementRef: ElementRef) { }\n\n    ngOnInit(): void {\n        //\n    }\n\n    ngAfterViewInit(): void {\n        const element: HTMLElement = this.elementRef.nativeElement.querySelector('.headline .letters');\n        const text: string = element.innerText;\n        const letters: string[] = text.split('');\n\n        let wrappedText = '';\n        for (const letter of letters) {\n            wrappedText += `${letter}`;\n        }\n\n        element.innerHTML = wrappedText;\n\n        // Anime.\n        const basicTimeline = anime.timeline();\n        basicTimeline\n            .add({\n                targets: '.headline .letter',\n                scale: [0.3, 1],\n                opacity: [0, 1],\n                translateZ: 0,\n                easing: 'linear',\n                delay: (el, i) => {\n                    return 70 * (i + 1);\n                }\n            }).add({\n                targets: '.headline .line',\n                scaleX: [0, 1],\n                opacity: [0.5, 1],\n                easing: 'linear',\n                offset: '-=840',\n                delay: (el, i, l) => {\n                    return 70 * (l - i);\n                },\n                complete: (anim) => {\n                    this.show = true;\n                }\n            });\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                STRADA\n                \n            \n        \n        \n            \n                Simulation of TRAffic DAta\n                An urban traffic web simulator that uses data in real time\n                GET STARTED\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        STRADA                                                                        Simulation of TRAffic DAta                An urban traffic web simulator that uses data in real time                GET STARTED                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/info-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                info-dialog\n            \n\n\n\n            \n                template\n                Info\n\n    {{ data }}\n\n\n    No\n    Yes\n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/info-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/info-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n    selector: 'info-dialog',\n    template: `\n        Info\n        \n            {{ data }}\n        \n        \n            No\n            Yes\n        \n    `,\n    styles: []\n})\nexport class InfoDialogComponent {\n\n    constructor(\n        public dialogRef: MatDialogRef,\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Info    {{ data }}    No    Yes'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationService\n\nLocationService\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/location/location.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     LocationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { LocationService } from './location.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [LocationService]\n})\nexport class LocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/location/location.service.ts\n        \n\n            \n                Description\n            \n            \n                Responsible for identifying the geographic coordinates of the simulation area,\nthrough geocoding or geolocation.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geocoder\n                            \n                            \n                                    Private\n                                latLng\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                codeAddress\n                            \n                            \n                                    Public\n                                getCurrentPosition\n                            \n                            \n                                    Public\n                                getLatLng\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                setLatLng\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/location/location.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            codeAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        codeAddress(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            Geocoding service.\nWraps the Google Maps API geocoding service into an observable.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The address to be searched\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    An observable of GeocoderResult\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Tries HTML5 geolocation.\nWraps the Geolocation API into an observable.\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    An observable of Position\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLatLng()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     google.maps.LatLngLiteral\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLatLng(latLng: google.maps.LatLngLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/location/location.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLngLiteral\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geocoder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocoder:     google.maps.Geocoder\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            latLng\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        latLng:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/location/location.service.ts:13\n                            \n                        \n\n                \n                    \n                        Center of the area (latitude, longitude).\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\n/**\n * Responsible for identifying the geographic coordinates of the simulation area,\n * through geocoding or geolocation.\n */\n@Injectable() export class LocationService {\n\n    /**\n     * Center of the area (latitude, longitude).\n     */\n    private latLng: google.maps.LatLngLiteral;\n\n    private geocoder: google.maps.Geocoder;\n\n    constructor() {\n        this.geocoder = new google.maps.Geocoder();\n    }\n\n    public reset(): void {\n        this.latLng = null;\n    }\n\n    /**\n     * Geocoding service.\n     * Wraps the Google Maps API geocoding service into an observable.\n     * @param address The address to be searched\n     * @return An observable of GeocoderResult\n     */\n    public codeAddress(address: string): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes geocode method of Google Maps API geocoding.\n            this.geocoder.geocode({ address: address }, (\n                (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        observer.next(results);\n                        observer.complete();\n                    } else {\n                        observer.error(status);\n                    }\n                })\n            );\n        });\n    }\n\n    /**\n     * Tries HTML5 geolocation.\n     * Wraps the Geolocation API into an observable.\n     *\n     * @return An observable of Position\n     */\n    public getCurrentPosition(): Observable {\n        return Observable.create((observer: Observer) => {\n            // Invokes getCurrentPosition method of Geolocation API.\n            navigator.geolocation.getCurrentPosition(\n                (position: Position) => {\n                    observer.next(position);\n                    observer.complete();\n                },\n                (error: PositionError) => {\n                    observer.error(error);\n                }\n            );\n        });\n    }\n\n    public getLatLng(): google.maps.LatLngLiteral {\n        return this.latLng;\n    }\n\n    public setLatLng(latLng: google.maps.LatLngLiteral): void {\n        this.latLng = latLng;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/map/map.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-map\n            \n\n            \n                styleUrls\n                map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                disableDefaultUI\n                            \n                            \n                                disableDoubleClickZoom\n                            \n                            \n                                gestureHandling\n                            \n                            \n                                mapTypeId\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minZoom\n                            \n                            \n                                styles\n                            \n                            \n                                zoom\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, map: MapService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/map.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            center\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        center:     google.maps.LatLngLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDefaultUI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDefaultUI:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableDoubleClickZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disableDoubleClickZoom:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gestureHandling\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gestureHandling:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapTypeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapTypeId:     google.maps.MapTypeId\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeId\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minZoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            styles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        styles:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zoom:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard/wizard.service';\nimport { MapService } from './map.service';\nimport { MapStyle } from './map.style';\nimport * as fromUi from '../models/reducers';\nimport { Step } from '../models/wizard';\nimport { uiConfig } from '../ui-config';\n\nimport { BaseComponent } from '../models/base.component';\n\n@Component({\n    selector: 'ui-map',\n    templateUrl: './map.component.html',\n    styleUrls: ['./map.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MapComponent extends BaseComponent implements OnInit {\n\n    // Center map. Required.\n    center: google.maps.LatLngLiteral;\n\n    // The initial map zoom level. Required.\n    zoom: number;\n\n    disableDefaultUI: boolean;\n    disableDoubleClickZoom: boolean;\n    mapTypeId: google.maps.MapTypeId;\n    maxZoom: number;\n    minZoom: number;\n    gestureHandling: string;\n    styles: google.maps.MapTypeStyle[];\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private map: MapService\n    ) {\n        super();\n        // Map options.\n        this.disableDefaultUI = true;\n        this.disableDoubleClickZoom = false;\n        this.mapTypeId = google.maps.MapTypeId.ROADMAP;\n        this.maxZoom = 18;\n        this.minZoom = 4;\n        this.gestureHandling = 'cooperative';\n        this.styles = MapStyle;\n    }\n\n    ngOnInit(): void {\n        this.center = uiConfig.map.center;\n        this.zoom = uiConfig.map.zoom;\n\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        //\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.steps)).subscribe((steps: Step[]) => {\n            switch (this.wizard.state.currentStep) {\n                case 0:\n                    if (steps[0]) {\n                        // Updates center map.\n                        this.center = this.wizard.state.steps[0].data.center;\n                        this.zoom = 16;\n                    }\n                    break;\n            }\n        }));\n\n        // Checks area limit.\n        this.subscriptions.push(this.map.getArea().subscribe((area: number) => {\n            if (area >= uiConfig.areaMinLimit && area  {\n            this.center = uiConfig.map.center;\n            this.zoom = uiConfig.map.zoom;\n        }));\n    }\n\n    sendActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.currentStep)).subscribe((currentStep: number) => {\n            switch (currentStep) {\n                case 1:\n                    if (!this.wizard.state.steps[1]) {\n                        // Builds & shows initial rectangle.\n                        const bounds: google.maps.LatLngBoundsLiteral = this.map.buildBounds(this.center);\n                        this.map.showRect(bounds);\n                    }\n                    break;\n            }\n        }));\n    }\n\n}\n\n    \n\n    \n        \n    \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/map/map.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances the map.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                area\n                            \n                            \n                                    Private\n                                infoWindow\n                            \n                            \n                                    Private\n                                map\n                            \n                            \n                                    Private\n                                rectangle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildBounds\n                            \n                            \n                                    Private\n                                calcArea\n                            \n                            \n                                    Private\n                                checkRect\n                            \n                            \n                                    Public\n                                getArea\n                            \n                            \n                                    Public\n                                getBounds\n                            \n                            \n                                    Public\n                                initMap\n                            \n                            \n                                reset\n                            \n                            \n                                    Public\n                                resize\n                            \n                            \n                                    Public\n                                setCenter\n                            \n                            \n                                    Private\n                                setInfoWindow\n                            \n                            \n                                    Public\n                                setZoom\n                            \n                            \n                                    Public\n                                showRect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/map/map.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buildBounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildBounds(center: google.maps.LatLngLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        center\n                                                        \n                                                                    google.maps.LatLngLiteral\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     google.maps.LatLngBoundsLiteral\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calcArea\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcArea(ne: google.maps.LatLng, sw: google.maps.LatLng)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:146\n                            \n                        \n\n\n                \n                    \n                            Calculates the area in hectares.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ne\n                                                        \n                                                                    google.maps.LatLng\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                north-est coordinates\n\n                                                        \n                                                \n                                                \n                                                        sw\n                                                        \n                                                                    google.maps.LatLng\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                south-west coordinates\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkRect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkRect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getArea\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getArea()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getBounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBounds()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     google.maps.LatLngBoundsLiteral\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initMap(el: HTMLElement, mapOptions: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Creates a new map inside of the given HTML container.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLElement\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                DIV element\n\n                                                        \n                                                \n                                                \n                                                        mapOptions\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                MapOptions object specification\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setCenter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setCenter(latLng: google.maps.LatLngLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLngLiteral\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setInfoWindow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setInfoWindow(content: string, position: google.maps.LatLng)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:134\n                            \n                        \n\n\n                \n                    \n                            Sets the info window's content and position.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        content\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Window's content\n\n                                                        \n                                                \n                                                \n                                                        position\n                                                        \n                                                                    google.maps.LatLng\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                LatLng\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setZoom(zoom: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zoom\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showRect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showRect(bounds: google.maps.LatLngBoundsLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bounds\n                                                        \n                                                                    google.maps.LatLngBoundsLiteral\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            area\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        area:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            infoWindow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        infoWindow:     google.maps.InfoWindow\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.InfoWindow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     google.maps.Map\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            rectangle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rectangle:     google.maps.Rectangle\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Rectangle\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/map/map.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone, EventEmitter, Output } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport area from '@turf/area';\nimport { point, polygon } from '@turf/helpers';\n\nimport { uiConfig } from '../ui-config';\n\n/**\n * Instances the map.\n */\n@Injectable() export class MapService {\n\n    @Output() public resetMap: EventEmitter = new EventEmitter();\n\n    private map: google.maps.Map;\n\n    private rectangle: google.maps.Rectangle;\n\n    private infoWindow: google.maps.InfoWindow;\n\n    private area = new BehaviorSubject(null);\n\n    constructor(private zone: NgZone) { }\n\n    reset(): void {\n        this.resetMap.emit(null);\n        this.rectangle.setMap(null);\n        this.infoWindow.close();\n        this.area.next(null);\n    }\n\n    /**\n     * Creates a new map inside of the given HTML container.\n     * @param el DIV element\n     * @param mapOptions MapOptions object specification\n     */\n    public initMap(el: HTMLElement, mapOptions: any): void {\n        this.map = new google.maps.Map(el, mapOptions);\n\n        this.resize();\n        // Adds event listener resize when the window changes size.\n        google.maps.event.addDomListener(window, 'resize', () => this.resize());\n    }\n\n    public setCenter(latLng: google.maps.LatLngLiteral): void {\n        if (this.map != null && latLng != null) {\n            // Changes the center of the map to the given LatLng.\n            this.map.panTo(latLng);\n        }\n    }\n\n    public setZoom(zoom: number): void {\n        if (this.map != null) {\n            this.map.setZoom(zoom);\n        }\n    }\n\n    public resize(): void {\n        // Saves the center.\n        const latLng: google.maps.LatLng = this.map.getCenter();\n        // Triggers resize event.\n        setTimeout(() => {\n            google.maps.event.trigger(this.map, 'resize');\n            // Restores the center.\n            this.map.setCenter(latLng);\n        });\n    }\n\n    public buildBounds(center: google.maps.LatLngLiteral): google.maps.LatLngBoundsLiteral {\n        return {\n            north: center.lat + 0.0012,\n            south: center.lat - 0.0012,\n            east: center.lng + 0.003,\n            west: center.lng - 0.003\n        };\n    }\n\n    public showRect(bounds: google.maps.LatLngBoundsLiteral) {\n        // Defines the rectangle and set its editable property to true.\n        this.rectangle = new google.maps.Rectangle({\n            bounds: bounds,\n            editable: true,\n            draggable: true\n        });\n\n        this.rectangle.setMap(this.map);\n\n        // Adds an event listener on the rectangle.\n        this.rectangle.addListener('bounds_changed', () => this.checkRect());\n\n        // Defines an info window on the map.\n        this.infoWindow = new google.maps.InfoWindow();\n    }\n\n    public getArea(): Observable {\n        return this.area.asObservable();\n    }\n\n    public getBounds(): google.maps.LatLngBoundsLiteral {\n        const bounds: google.maps.LatLngBounds = this.rectangle.getBounds();\n        return {\n            north: bounds.getNorthEast().lat(),\n            south: bounds.getSouthWest().lat(),\n            east: bounds.getNorthEast().lng(),\n            west: bounds.getSouthWest().lng()\n        };\n    }\n\n    private checkRect(): void {\n        // The event of Google maps runs outside Angular zone.\n        this.zone.run(() => {\n            const ne: google.maps.LatLng = this.rectangle.getBounds().getNorthEast();\n            const sw: google.maps.LatLng = this.rectangle.getBounds().getSouthWest();\n\n            // Area.\n            const a: number = this.calcArea(ne, sw);\n\n            // Info window.\n            const content: string = 'Area' +\n                a + ' ha';\n            this.setInfoWindow(content, ne);\n\n            // Sends the area to subscribers.\n            this.area.next(a);\n        });\n    }\n\n    /**\n     * Sets the info window's content and position.\n     * @param content Window's content\n     * @param position LatLng\n     */\n    private setInfoWindow(content: string, position: google.maps.LatLng): void {\n        this.infoWindow.setContent(content);\n        this.infoWindow.setPosition(position);\n\n        this.infoWindow.open(this.map);\n    }\n\n    /**\n     * Calculates the area in hectares.\n     * @param ne north-est coordinates\n     * @param sw south-west coordinates\n     */\n    private calcArea(ne: google.maps.LatLng, sw: google.maps.LatLng): number {\n        const p = polygon([[\n            [ne.lat(), ne.lng()], [sw.lat(), ne.lng()], [sw.lat(), sw.lng()], [ne.lat(), sw.lng()], [ne.lat(), ne.lng()]\n        ]]);\n        let a = area(p) / 10000;\n        a = Math.round(a * 10) / 10;\n        return a;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconRegistry,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule\n} from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nconst materialModules: any[] = [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule\n];\n\n@NgModule({\n    imports: materialModules,\n    exports: materialModules\n})\nexport class MaterialModule {\n\n    constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n        matIconRegistry.addSvgIcon(\n            'more_vert', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_more_vert_24px.svg')\n        );\n        matIconRegistry.addSvgIcon(\n            'code', domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ic_code_24px.svg')\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Member.html":{"url":"interfaces/Member.html","title":"interface - Member","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Member\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation's member.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ref\n                                \n                                \n                                        role\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                    \n                                \n                                \n                                    \n                                        ref:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as combine from 'mout/array/combine';\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * Gets the incidence matrix of paths for O/D pairs.\n     */\n    public getIncidenceMatrix(): boolean[][] {\n        return null;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     */\n    public getShortestPaths(origin: Node, destination: Node): Node[][] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageArchivedComponent.html":{"url":"components/MessageArchivedComponent.html","title":"component - MessageArchivedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MessageArchivedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/message-archived.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                snack-bar\n            \n\n\n\n            \n                template\n                {{ data }}\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/message-archived.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/message-archived.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\n@Component({\n    selector: 'snack-bar',\n    template: `\n        {{ data }}\n    `,\n    styles: []\n})\nexport class MessageArchivedComponent {\n\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageArchivedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NetworkModule.html":{"url":"modules/NetworkModule.html","title":"module - NetworkModule","body":"\n                   \n\n\n\n\n  Modules\n  NetworkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\n\nWeatherModule\n\nWeatherModule\n\n\n\nNetworkModule\n\nNetworkModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/network.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     NetworkService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    WeatherModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherModule } from './weather/weather.module';\n\nimport { NetworkService } from './network.service';\n\n@NgModule({\n    imports: [WeatherModule],\n    declarations: [],\n    providers: [NetworkService]\n})\nexport class NetworkModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NetworkService.html":{"url":"injectables/NetworkService.html","title":"injectable - NetworkService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NetworkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/network.service.ts\n        \n\n            \n                Description\n            \n            \n                Creates and develops the graph of the transport network in the selected area.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bounds\n                            \n                            \n                                    Private\n                                edgeId\n                            \n                            \n                                    Private\n                                graph\n                            \n                            \n                                    Private\n                                time\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildBody\n                            \n                            \n                                    Private\n                                buildQuery\n                            \n                            \n                                    Public\n                                createGraph\n                            \n                            \n                                    Private\n                                extractTags\n                            \n                            \n                                    Public\n                                getAssignmentMatrix\n                            \n                            \n                                    Public\n                                getGraph\n                            \n                            \n                                    Public\n                                getLinkFlows\n                            \n                            \n                                    Public\n                                getNetwork\n                            \n                            \n                                    Public\n                                getTime\n                            \n                            \n                                    Public\n                                getTrafficData\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                setBounds\n                            \n                            \n                                    Public\n                                setTime\n                            \n                            \n                                    Private\n                                splitWay\n                            \n                            \n                                    Public\n                                updateGraph\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/network.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            buildBody\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildBody(query: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:224\n                            \n                        \n\n\n                \n                    \n                            Builds the query string.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                In Overpass QL\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            buildQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildQuery()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:192\n                            \n                        \n\n\n                \n                    \n                            Builds the query in Overpass QL.\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createGraph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createGraph(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:79\n                            \n                        \n\n\n                \n                    \n                            With the data obtained from the Interpreter resource instantiate the Graph class\nand the associated classes Node and Edge that model the network graph.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Overpass API response\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            extractTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        extractTags(tags: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:260\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tags\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Tag[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAssignmentMatrix\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAssignmentMatrix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:185\n                            \n                        \n\n\n                \n                    \n                            Gets the routes assignment matrix.\n\n\n                            \n                                Returns :     [][]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGraph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGraph()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Graph\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLinkFlows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLinkFlows()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:178\n                            \n                        \n\n\n                \n                    \n                            Returns the values of the linkFlow attribute of the links.\n\n\n                            \n                                Returns :     number[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNetwork\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNetwork()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Calls the Interpreter resource by providing the query in the Overpass language.\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTime()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Date | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTrafficData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTrafficData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:135\n                            \n                        \n\n\n                \n                    \n                            Call the trafficData cloud function,\nthat reiterates the invocation of the Directions API to obtain all link traffic data.\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setBounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setBounds(bounds: google.maps.LatLngBoundsLiteral)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bounds\n                                                        \n                                                                    google.maps.LatLngBoundsLiteral\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTime(time: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            splitWay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        splitWay(filteredWayNodes: number[], nodes: any[], way: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:228\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filteredWayNodes\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nodes\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        way\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateGraph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateGraph(data: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/network.service.ts:164\n                            \n                        \n\n\n                \n                    \n                            Updates graph using the data obtained from Directions API.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Traffic data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bounds:     google.maps.LatLngBoundsLiteral\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.LatLngBoundsLiteral\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/network.service.ts:25\n                            \n                        \n\n                \n                    \n                        Rectangle in geographical coordinates of the area.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            edgeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        edgeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/network.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            graph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        graph:     Graph\n\n                    \n                \n                    \n                        \n                            Type :     Graph\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/network.service.ts:20\n                            \n                        \n\n                \n                    \n                        The instance of the network graph.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     Date | null\n\n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/network.service.ts:30\n                            \n                        \n\n                \n                    \n                        Time of the simulation.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError, Observer, of, from } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport * as qs from 'qs';\n\nimport { Graph, Node, Edge, Tag } from './graph';\nimport { appConfig } from '../app-config';\nimport { environment } from '../../environments/environment';\n\n/**\n * Creates and develops the graph of the transport network in the selected area.\n */\n@Injectable() export class NetworkService {\n\n    /**\n     * The instance of the network graph.\n     */\n    private graph: Graph;\n\n    /**\n     * Rectangle in geographical coordinates of the area.\n     */\n    private bounds: google.maps.LatLngBoundsLiteral;\n\n    /**\n     * Time of the simulation.\n     */\n    private time: Date | null;\n\n    private edgeId = 0;\n\n    constructor(private http: HttpClient) { }\n\n    public reset(): void {\n        this.graph = null;\n        this.bounds = null;\n        this.time = null;\n        this.edgeId = 0;\n    }\n\n    public getGraph(): Graph {\n        return this.graph;\n    }\n\n    public setBounds(bounds: google.maps.LatLngBoundsLiteral): void {\n        this.bounds = bounds;\n    }\n\n    public getTime(): Date | null {\n        return this.time;\n    }\n\n    public setTime(time: Date): void {\n        this.time = time;\n    }\n\n    /**\n     * Calls the Interpreter resource by providing the query in the Overpass language.\n     */\n    public getNetwork(): Observable {\n        const url: string = appConfig.apis.overpassApi.url;\n        const headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n        const query: string = this.buildQuery();\n        const body: string = this.buildBody(query);\n\n        return this.http.post(url, body, { headers: headers }).pipe(\n            map((response: any) => response),\n            catchError((error: any) => throwError('getNetwork'))\n        );\n    }\n\n    /**\n     * With the data obtained from the Interpreter resource instantiate the Graph class\n     * and the associated classes Node and Edge that model the network graph.\n     * @param data Overpass API response\n     */\n    public createGraph(data: any): Observable {\n        this.graph = new Graph();\n\n        // Gets the list of elements.\n        const elements: any[] = data.elements;\n        // Create a degree list of nodes:\n        // a Map object that holds nodeId-degree as key-value pairs.\n        const nodesDegrees: Map = new Map();\n        // Gets the list of ways.\n        const ways: any[] = elements.filter((element: any) => element['type'] == 'way');\n        // Gets the list of nodes.\n        const nodes: any[] = elements.filter((element: any) => element['type'] == 'node');\n\n        // Creation of the graph algorithm.\n        return Observable.create((observer: Observer) => {\n            try {\n                // First step.\n                for (const way of ways) {\n                    // Gets the list of nodes.\n                    const wayNodes: number[] = way['nodes'];\n                    for (const node of wayNodes) {\n                        const degree = nodesDegrees.get(node);\n                        nodesDegrees.set(node, degree ? degree + 1 : 1);\n                    }\n                }\n                // Second step.\n                for (const way of ways) {\n                    // Gets the list of nodes.\n                    const wayNodes: number[] = way['nodes'];\n                    // Removes the nodes that have degree equal to one.\n                    const filteredWayNodes = wayNodes.filter((node: number, i: number, arr: number[]) => {\n                        return i == 0 || // first node\n                            i == arr.length - 1 || // last node\n                            nodesDegrees.get(node) > 1; // degree greater than one\n                    });\n                    // First direction.\n                    this.splitWay(filteredWayNodes, nodes, way);\n                    // First direction (two-way).\n                    if (!way['tags']['oneway']) {\n                        // Reverse the order of filtered way nodes.\n                        this.splitWay(filteredWayNodes.reverse(), nodes, way);\n                    }\n                }\n            } catch (error) {\n                observer.error('createGraph');\n            } finally {\n                observer.next(null);\n                observer.complete();\n            }\n        });\n    }\n\n    /**\n     * Call the trafficData cloud function,\n     * that reiterates the invocation of the Directions API to obtain all link traffic data.\n     */\n    public getTrafficData(): Observable {\n        const url: string = environment.functions.trafficData.url;\n        const headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\n        const edges = this.graph.getEdges();\n        const data = edges.map((v: Edge, i: number, arr: Edge[]) => {\n            return {\n                origin: { lat: v.origin.lat, lon: v.origin.lon },\n                destination: { lat: v.destination.lat, lon: v.destination.lon },\n                distance: null,\n                duration: null,\n                durationInTraffic: null\n            };\n        });\n        const body = JSON.stringify({\n            edges: data,\n            time: this.time\n        });\n\n        // To trafficData function.\n        return this.http.post(url, body, { headers: headers }).pipe(\n            map((response: any) => response),\n            catchError((error: any) => throwError('getTrafficData'))\n        );\n    }\n\n    /**\n     * Updates graph using the data obtained from Directions API.\n     * @param data Traffic data\n     */\n    public updateGraph(data: any[]): Observable {\n        const edges = this.graph.getEdges();\n        return from(data).pipe(\n            map((value: any, i: number) => {\n                edges[i].distance = value.distance;\n                edges[i].duration = value.duration;\n                edges[i].durationInTraffic = value.durationInTraffic;\n            })\n        );\n    }\n\n    /**\n     * Returns the values of the linkFlow attribute of the links.\n     */\n    public getLinkFlows(): number[] {\n        return null;\n    }\n\n    /**\n     * Gets the routes assignment matrix.\n     */\n    public getAssignmentMatrix(): number[][] {\n        return null;\n    }\n\n    /**\n     * Builds the query in Overpass QL.\n     */\n    private buildQuery(): string {\n        // Result in JSON.\n        let query = '[out:json]';\n        // Request timeout.\n        query += '[timeout:' + appConfig.apis.overpassApi.timeout + ']';\n        // Bounding box.\n        query += '[bbox:' +\n            this.bounds.south + ',' +\n            this.bounds.west + ',' +\n            this.bounds.north + ',' +\n            this.bounds.east + ']';\n        query += ';';\n        // Union.\n        query += '(';\n        // Roads.\n        query += 'way[highway~\"^(';\n        for (const highway of appConfig.apis.overpassApi.highways) {\n            query += highway + '|';\n        }\n        query += ')$\"];';\n        // Respective nodes.\n        query += 'node(w);';\n        query += ');';\n        // Output.\n        query += 'out;';\n        return query;\n    }\n\n    /**\n     * Builds the query string.\n     * @param query In Overpass QL\n     */\n    private buildBody(query: any): string {\n        return qs.stringify({ data: query });\n    }\n\n    private splitWay(filteredWayNodes: number[], nodes: any[], way: any): void {\n        for (let i = 0; i  value['id'] == filteredWayNodes[i]);\n            const refSecondNode: any = nodes.find((value: any) => value['id'] == filteredWayNodes[i + 1]);\n            if (refFirstNode) {\n                firstNode.lat = refFirstNode['lat'];\n                firstNode.lon = refFirstNode['lon'];\n                firstNode.tags = this.extractTags(refFirstNode['tags']);\n                firstNode.outgoingEdges.push(edge);\n            }\n            if (refSecondNode) {\n                secondNode.lat = refSecondNode['lat'];\n                secondNode.lon = refSecondNode['lon'];\n                secondNode.tags = this.extractTags(refSecondNode['tags']);\n                secondNode.incomingEdges.push(edge);\n            }\n            this.graph.addOrUpdateNode(firstNode);\n            this.graph.addOrUpdateNode(secondNode);\n            // Add edge.\n            this.graph.addEdge(edge);\n        }\n    }\n\n    private extractTags(tags: any): Tag[] {\n        return tags ? Object.keys(tags).map((key: string) => {\n            return { key: key, value: tags[key] as string };\n        }) : [];\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Node.html":{"url":"classes/Node.html","title":"class - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Node represents a specific point on the earth's surface defined by its latitude and longitude.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                incomingEdges\n                            \n                            \n                                    Public\n                                lat\n                            \n                            \n                                    Public\n                                lon\n                            \n                            \n                                    Public\n                                nodeId\n                            \n                            \n                                    Public\n                                outgoingEdges\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nodeId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodeId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            incomingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        incomingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lat:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lon:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodeId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            outgoingEdges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outgoingEdges:     Edge[]\n\n                    \n                \n                    \n                        \n                            Type :     Edge[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as combine from 'mout/array/combine';\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * Gets the incidence matrix of paths for O/D pairs.\n     */\n    public getIncidenceMatrix(): boolean[][] {\n        return null;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     */\n    public getShortestPaths(origin: Node, destination: Node): Node[][] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Relation.html":{"url":"classes/Relation.html","title":"class - Relation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Relation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                relationId\n                            \n                            \n                                    Public\n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(relationId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/graph.ts:105\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relationId\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        members:     Member[]\n\n                    \n                \n                    \n                        \n                            Type :     Member[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            relationId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        relationId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     Tag[]\n\n                    \n                \n                    \n                        \n                            Type :     Tag[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/graph.ts:105\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as combine from 'mout/array/combine';\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * Gets the incidence matrix of paths for O/D pairs.\n     */\n    public getIncidenceMatrix(): boolean[][] {\n        return null;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     */\n    public getShortestPaths(origin: Node, destination: Node): Node[][] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.Reset\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchForTheAreaComponent.html":{"url":"components/SearchForTheAreaComponent.html","title":"component - SearchForTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchForTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-search-for-the-area\n            \n\n            \n                styleUrls\n                search-for-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-for-the-area.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentPosition\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                search\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wizard: WizardService, location: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearch(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { WizardService } from '../wizard.service';\nimport { LocationService } from '../../../location/location.service';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-search-for-the-area',\n    templateUrl: './search-for-the-area.component.html',\n    styleUrls: ['./search-for-the-area.component.scss']\n})\nexport class SearchForTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor(\n        private wizard: WizardService,\n        private location: LocationService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates location service data on value changes.\n        this.subscriptions.push(this.formGroup.valueChanges.subscribe(\n            () => {\n                this.location.setLatLng(this.formGroup.get('center').value);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        //\n    }\n\n    sendActions(): void {\n        //\n    }\n\n    search(address: string): void {\n        if (!!address) {\n            // Updates pending state.\n            this.wizard.putOnHold();\n            // Converts the address into geographic coordinates.\n            this.location.codeAddress(address).forEach(\n                (results: google.maps.GeocoderResult[]) => {\n                    this.formGroup.get('center').setValue({\n                        lat: results[0].geometry.location.lat(),\n                        lng: results[0].geometry.location.lng()\n                    });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                })\n                .then()\n                .catch((error: google.maps.GeocoderStatus) => {\n                    if (error === google.maps.GeocoderStatus.ZERO_RESULTS) {\n                        // Updates error state.\n                        this.wizard.putInError('Zero results');\n                    } else {\n                        // INVALID_REQUEST, OVER_QUERY_LIMIT, REQUEST_DENIED, UNKNOWN_ERROR\n                        // Updates error state.\n                        this.wizard.putInError('Invalid request');\n                    }\n                });\n        }\n    }\n\n    getCurrentPosition(): void {\n        if (navigator.geolocation) {\n            // Updates pending state.\n            this.wizard.putOnHold();\n            this.location.getCurrentPosition().subscribe(\n                (position: Position) => {\n                    this.formGroup.get('center').setValue({ lat: position.coords.latitude, lng: position.coords.longitude });\n                    // Updates step state.\n                    this.wizard.updateStep(this.formGroup.value, this.index);\n                },\n                (error: PositionError) => {\n                    if (error.code > 0) {\n                        let message: string;\n                        switch (error.code) {\n                            case error.PERMISSION_DENIED:\n                                message = 'Permission denied';\n                                break;\n                            case error.POSITION_UNAVAILABLE:\n                                message = 'Position unavailable';\n                                break;\n                            case error.TIMEOUT:\n                                message = 'Position timeout';\n                                break;\n                        }\n                        // Updates error state.\n                        this.wizard.putInError(message);\n                    }\n                });\n\n        } else {\n            // Updates error state.\n            this.wizard.putInError(\"Browser doesn't support geolocation\");\n        }\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                search\n            \n        \n        Get current position\n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    search                            Get current position                Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchForTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectionOfTheAreaComponent.html":{"url":"components/SelectionOfTheAreaComponent.html","title":"component - SelectionOfTheAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectionOfTheAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-selection-of-the-area\n            \n\n            \n                styleUrls\n                selection-of-the-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./selection-of-the-area.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveActions\n                            \n                            \n                                sendActions\n                            \n                            \n                                valueChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    \n                                receiveActions\n                            \n                            \n                                    \n                                sendActions\n                            \n                            \n                                    \n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, wizard: WizardService, network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalueChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            receiveActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        receiveActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:27\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent by other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            sendActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendActions()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:32\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the actions sent to other components.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        valueChanges()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n                            Subscribes to the form changes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n\n                \n                    \n                        getmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:28\n                                \n                            \n                    \n                        \n                                Min moment: current time.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n\n                \n                    \n                        getmax()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts:35\n                                \n                            \n                    \n                        \n                                Max moment: current day.\n\n\n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from '../wizard.service';\nimport { NetworkService } from '../../../network/network.service';\nimport { uiConfig } from '../../ui-config';\nimport * as fromUi from '../../models/reducers';\nimport { Step } from '../../models/wizard';\n\nimport { BaseComponent } from '../../models/base.component';\n\n@Component({\n    selector: 'wizard-selection-of-the-area',\n    templateUrl: './selection-of-the-area.component.html',\n    styleUrls: ['./selection-of-the-area.component.scss']\n})\nexport class SelectionOfTheAreaComponent extends BaseComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    /**\n     * Min moment: current time.\n     */\n    get min(): Date {\n        return new Date();\n    }\n\n    /**\n     * Max moment: current day.\n     */\n    get max(): Date {\n        return new Date(\n            this.min.getFullYear(),\n            this.min.getMonth(),\n            this.min.getDate(),\n            this.min.getHours() + uiConfig.timeLimit,\n            this.min.getMinutes()\n        );\n    }\n\n    constructor(\n        private store: Store,\n        private wizard: WizardService,\n        private network: NetworkService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.valueChanges();\n        this.receiveActions();\n        this.sendActions();\n    }\n\n    valueChanges(): void {\n        // Updates network service data on value changes.\n        this.subscriptions.push(this.formGroup.valueChanges.subscribe(\n            () => {\n                this.network.setBounds(this.formGroup.get('bounds').value);\n                this.network.setTime(this.formGroup.get('time').value);\n            }\n        ));\n    }\n\n    receiveActions(): void {\n        this.subscriptions.push(this.store.pipe(select(fromUi.steps)).subscribe((steps: Step[]) => {\n            if (steps[this.index]) {\n                this.formGroup.get('bounds').setValue(steps[this.index]['data']['bounds']);\n            }\n        }));\n    }\n\n    sendActions(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                calendar_today\n            \n            Opnional. Leave it empty for the current time\n            \n                \n                \n                    Please, enter a time between the current time and the next 24 hours\n                \n                \n                    Please, insert a valid time or select it\n                \n            \n        \n        \n    \n\n    \n        Continue\n            navigate_next\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    calendar_today                        Opnional. Leave it empty for the current time                                                                Please, enter a time between the current time and the next 24 hours                                                    Please, insert a valid time or select it                                                            Continue            navigate_next            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectionOfTheAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FooterComponent\n                            \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                InfoDialogComponent\n                            \n                            \n                                MessageArchivedComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FooterComponent\n                            \n                            \n                                    InfoDialogComponent\n                            \n                            \n                                    MaterialModule\n                            \n                            \n                                    MessageArchivedComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialModule } from './material.module';\n\nimport { FooterComponent } from './footer/footer.component';\nimport { MessageArchivedComponent } from './message-archived.component';\nimport { InfoDialogComponent } from './info-dialog.component';\n\nimport { CanDeactivateGuard } from './can-deactivate-guard.service';\n\nconst sharedModules: any[] = [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n];\n\n@NgModule({\n    entryComponents: [\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    declarations: [\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ],\n    imports: sharedModules,\n    exports: [\n        sharedModules,\n        FooterComponent,\n        MessageArchivedComponent,\n        InfoDialogComponent\n    ]\n})\nexport class SharedModule {\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: SharedModule,\n            providers: [\n                CanDeactivateGuard\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimulationComponent.html":{"url":"components/SimulationComponent.html","title":"component - SimulationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimulationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/simulation/simulation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-simulation\n            \n\n            \n                styleUrls\n                simulation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simulation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/simulation/simulation.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/simulation/simulation.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'wizard-simulation',\n    templateUrl: './simulation.component.html',\n    styleUrls: ['./simulation.component.scss']\n})\nexport class SimulationComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimulationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimulationModule.html":{"url":"modules/SimulationModule.html","title":"module - SimulationModule","body":"\n                   \n\n\n\n\n  Modules\n  SimulationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\n\nSimulationService\n\nSimulationService\n\n\n\nSimulationModule\n\nSimulationModule\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/simulation/simulation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     SimulationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { SimulationService } from './simulation.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [SimulationService]\n})\nexport class SimulationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SimulationService.html":{"url":"injectables/SimulationService.html","title":"injectable - SimulationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SimulationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/simulation/simulation.service.ts\n        \n\n            \n                Description\n            \n            \n                Applies the traffic flow propagation algorithm.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/simulation/simulation.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Applies the traffic flow propagation algorithm.\n */\n@Injectable() export class SimulationService {\n\n    public reset(): void {\n        //\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatisticsComponent.html":{"url":"components/StatisticsComponent.html","title":"component - StatisticsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatisticsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/statistics/statistics.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wizard-statistics\n            \n\n            \n                styleUrls\n                statistics.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./statistics.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/statistics/statistics.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/statistics/statistics.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'wizard-statistics',\n    templateUrl: './statistics.component.html',\n    styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent implements OnInit {\n\n    @Input() formGroup: FormGroup;\n\n    @Input() index: number;\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatisticsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Step.html":{"url":"interfaces/Step.html","title":"interface - Step","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Step\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/wizard.ts\n        \n\n            \n                Description\n            \n            \n                Step model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Form model data.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Step {\n\n    /**\n     * Form model data.\n     */\n    data: any;\n\n}\n\n/**\n * Initial steps.\n */\nexport const STEPS: Step[] = [];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepChanged.html":{"url":"classes/StepChanged.html","title":"class - StepChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepChanged\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepError.html":{"url":"classes/StepError.html","title":"class - StepError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StepPending.html":{"url":"classes/StepPending.html","title":"class - StepPending","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StepPending\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/actions/wizard.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/models/actions/wizard.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : WizardActionTypes.StepPending\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/models/actions/wizard.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Step } from '../wizard';\n\n/**\n * ngrx: wizard Actions.\n */\nexport enum WizardActionTypes {\n\n    StepChanged = '[Wizard] Step Changed',\n    StepError = '[Wizard] Step Error',\n    StepPending = '[Wizard] Step Pending',\n    GoOn = '[Wizard] Go On',\n    Reset = '[Wizard] Reset'\n\n}\n\nexport class StepChanged implements Action {\n\n    public readonly type: string = WizardActionTypes.StepChanged;\n\n    constructor(public payload: { step: Step, index: number }) { }\n\n}\n\nexport class StepError implements Action {\n\n    public readonly type: string = WizardActionTypes.StepError;\n\n    constructor(public payload: string) { }\n\n}\n\nexport class StepPending implements Action {\n\n    public readonly type: string = WizardActionTypes.StepPending;\n\n    constructor(public payload: boolean) { }\n\n}\n\nexport class GoOn implements Action {\n\n    public readonly type: string = WizardActionTypes.GoOn;\n\n    constructor(public payload: { step: Step, index: number, nextIndex: number }) { }\n\n}\n\nexport class Reset implements Action {\n\n    public readonly type: string = WizardActionTypes.Reset;\n\n    constructor(public payload: any) { }\n\n}\n\nexport type WizardActions = StepChanged | StepError | StepPending | GoOn | Reset;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/graph.ts\n        \n\n            \n                Description\n            \n            \n                Tag describes the meaning of the particular element to which it is attached.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as combine from 'mout/array/combine';\n\n/**\n * Tag describes the meaning of the particular element to which it is attached.\n */\nexport interface Tag {\n\n    key: string;\n    value: string;\n\n}\n\n/**\n * Relation's member.\n */\nexport interface Member {\n\n    type: string;\n    ref: number;\n    role: string;\n\n}\n\n/**\n * Node represents a specific point on the earth's surface defined by its latitude and longitude.\n */\nexport class Node {\n\n    public nodeId: number;\n\n    public lat: number;\n\n    public lon: number;\n\n    public tags: Tag[] = [];\n\n    public incomingEdges: Edge[] = [];\n\n    public outgoingEdges: Edge[] = [];\n\n    constructor(nodeId: number) {\n        this.nodeId = nodeId;\n    }\n\n}\n\n/**\n * Link between two nodes.\n */\nexport class Edge {\n\n    public edgeId: number;\n\n    public origin: Node;\n\n    public destination: Node;\n\n    public tags: Tag[] = [];\n\n    /**\n     * Indicates the distance in meters.\n     */\n    public distance: number;\n\n    /**\n     * Indicates the duration in seconds.\n     */\n    public duration: number;\n\n    /**\n     * Indicates the total duration of the edge, taking into account current traffic conditions.\n     */\n    public durationInTraffic: number;\n\n    public velocity: number;\n\n    public density: number;\n\n    public flow: number;\n\n    public linkFlow: number;\n\n    constructor(edgeId: number) {\n        this.edgeId = edgeId;\n    }\n\n    /**\n     * Calculates the value of the arc flow and assigns it to the linkFlow attribute.\n     */\n    public calcLinkFlow(): void {\n\n    }\n\n}\n\n/**\n * Relation is a multi-purpose data structure that documents a relationship between two or more data elements.\n */\nexport class Relation {\n\n    public relationId: number;\n\n    public members: Member[];\n\n    public tags: Tag[] = [];\n\n    constructor(relationId: number) {\n        this.relationId = relationId;\n    }\n\n}\n\n/**\n * Graph of the transport network.\n */\nexport class Graph {\n\n    private nodes: Node[] = [];\n\n    private edges: Edge[] = [];\n\n    private relations: Relation[] = [];\n\n    public getNodes(): Node[] {\n        return this.nodes;\n    }\n\n    public getEdges(): Edge[] {\n        return this.edges;\n    }\n\n    public getRelations(): Relation[] {\n        return this.relations;\n    }\n\n    public getNode(nodeId: number): Node | undefined {\n        return this.nodes.find((node: Node) => node.nodeId == nodeId);\n    }\n\n    public addOrUpdateNode(node: Node): void {\n        const existingNode = this.getNode(node.nodeId);\n        if (existingNode) {\n            existingNode.lat = node.lat;\n            existingNode.lon = node.lon;\n            existingNode.tags = combine(existingNode.tags, node.tags);\n            existingNode.incomingEdges = combine(existingNode.incomingEdges, node.incomingEdges);\n            existingNode.outgoingEdges = combine(existingNode.outgoingEdges, node.outgoingEdges);\n        } else {\n            this.nodes.push(node);\n        }\n    }\n\n    public addEdge(edge: Edge): void {\n        this.edges.push(edge);\n    }\n\n    /**\n     * Gets the incidence matrix of paths for O/D pairs.\n     */\n    public getIncidenceMatrix(): boolean[][] {\n        return null;\n    }\n\n    /**\n     * Calculates the set of minimum paths between a source and destination node based on the link duration attribute.\n     * k Shortest Paths algorithm in the Eppstein version.\n     * @param origin Source node\n     * @param destination Destination node\n     */\n    public getShortestPaths(origin: Node, destination: Node): Node[][] {\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UiComponent.html":{"url":"components/UiComponent.html","title":"component - UiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/ui.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                CanComponentDeactivate\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ui\n            \n\n            \n                styleUrls\n                ui.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ui.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pending\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                            \n                                exit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                openSnackBar\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, snackBar: MatSnackBar, dialog: MatDialog, store: Store, wizard: WizardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/ui.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable | boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDialog(data: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/ui.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { Subscription, Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { CanComponentDeactivate } from '../shared/can-deactivate-guard.service';\nimport { WizardService } from './wizard/wizard.service';\nimport * as fromUi from './models/reducers';\n\nimport { MessageArchivedComponent } from '../shared/message-archived.component';\nimport { InfoDialogComponent } from '../shared/info-dialog.component';\n\n@Component({\n    selector: 'app-ui',\n    templateUrl: './ui.component.html',\n    styleUrls: ['./ui.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UiComponent implements OnInit, OnDestroy, CanComponentDeactivate {\n\n    pending = false;\n\n    subscriptions: Subscription[] = [];\n\n    constructor(\n        private router: Router,\n        private snackBar: MatSnackBar,\n        private dialog: MatDialog,\n        private store: Store,\n        private wizard: WizardService\n    ) { }\n\n    ngOnInit(): void {\n        // Pending state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.pending)).subscribe((pending: boolean) => {\n            this.pending = pending;\n        }));\n        // Error state.\n        this.subscriptions.push(this.store.pipe(select(fromUi.error)).subscribe((error: string) => {\n            if (error) {\n                this.openSnackBar(error);\n            }\n        }));\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    canDeactivate(): Observable | boolean {\n        return this.openDialog('Are you sure you want to quit the application?').pipe(\n            tap((dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.wizard.reset();\n                }\n            })\n        );\n    }\n\n    reset(): void {\n        this.openDialog('Are you sure you want to reset the application?').subscribe(\n            (dialogResult: boolean) => {\n                if (dialogResult) {\n                    this.wizard.reset();\n                }\n            });\n    }\n\n    exit(): void {\n        this.router.navigate(['/home']);\n    }\n\n    openSnackBar(message: string): void {\n        this.snackBar.openFromComponent(MessageArchivedComponent, {\n            data: message,\n            duration: 5000,\n            panelClass: ['error-snackbar']\n        });\n    }\n\n    openDialog(data: string): Observable {\n        const dialogRef = this.dialog.open(InfoDialogComponent, {\n            width: '250px',\n            data: data,\n            hasBackdrop: true,\n            panelClass: 'info-dialog'\n        });\n\n        return dialogRef.afterClosed();\n    }\n\n}\n\n    \n\n    \n        \n    \n    \n\n\n\n    \n        \n            \n        \n        \n            \n        \n    \n    \n        \n        \n            Reset\n            Exit\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                        Reset            Exit            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n  Modules\n  UiModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ChangeOfConditionsComponent\n                            \n                            \n                                EstimateOfDemandComponent\n                            \n                            \n                                GoogleMapComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                SearchForTheAreaComponent\n                            \n                            \n                                SelectionOfTheAreaComponent\n                            \n                            \n                                SimulationComponent\n                            \n                            \n                                StatisticsComponent\n                            \n                            \n                                UiComponent\n                            \n                            \n                                WeatherComponent\n                            \n                            \n                                WizardComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapService\n                            \n                            \n                                     WizardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    UiRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { UiRoutingModule } from './ui-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { StoreModule } from \"@ngrx/store\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n\nimport { UiComponent } from './ui.component';\nimport { WizardComponent } from './wizard/wizard.component';\nimport { SearchForTheAreaComponent } from './wizard/search-for-the-area/search-for-the-area.component';\nimport { SelectionOfTheAreaComponent } from './wizard/selection-of-the-area/selection-of-the-area.component';\nimport { EstimateOfDemandComponent } from './wizard/estimate-of-demand/estimate-of-demand.component';\nimport { ChangeOfConditionsComponent } from './wizard/change-of-conditions/change-of-conditions.component';\nimport { SimulationComponent } from './wizard/simulation/simulation.component';\nimport { StatisticsComponent } from './wizard/statistics/statistics.component';\nimport { MapComponent } from './map/map.component';\nimport { GoogleMapComponent } from './map/google-map.component';\nimport { WeatherComponent } from './weather/weather.component';\n\nimport { WizardService } from './wizard/wizard.service';\nimport { MapService } from './map/map.service';\nimport { reducers } from './models/reducers';\n\n@NgModule({\n    imports: [\n        UiRoutingModule,\n        SharedModule,\n        StoreModule.forFeature('ui', reducers),\n        EffectsModule.forFeature([]),\n        OwlDateTimeModule,\n        OwlNativeDateTimeModule\n    ],\n    declarations: [\n        UiComponent,\n        WizardComponent,\n        SearchForTheAreaComponent,\n        SelectionOfTheAreaComponent,\n        EstimateOfDemandComponent,\n        ChangeOfConditionsComponent,\n        SimulationComponent,\n        StatisticsComponent,\n        MapComponent,\n        GoogleMapComponent,\n        WeatherComponent\n    ],\n    providers: [\n        WizardService,\n        MapService\n    ]\n})\nexport class UiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiRoutingModule.html":{"url":"modules/UiRoutingModule.html","title":"module - UiRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  UiRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ui/ui-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CanDeactivateGuard } from '../shared/can-deactivate-guard.service';\n\nimport { UiComponent } from './ui.component';\n\nconst routes: Routes = [\n    { path: '', component: UiComponent, pathMatch: 'full', canDeactivate: [CanDeactivateGuard] },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UiRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UiState.html":{"url":"interfaces/UiState.html","title":"interface - UiState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UiState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers.ts\n        \n\n            \n                Description\n            \n            \n                User interface state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        wizard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        wizard\n                                    \n                                \n                                \n                                    \n                                        wizard:     fromWizard.WizardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromWizard.WizardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector, MemoizedSelector } from \"@ngrx/store\";\n\nimport * as fromWizard from './reducers/wizard.reducer';\nimport { Step } from \"./wizard\";\n\n/**\n * User interface state management.\n */\nexport interface UiState {\n\n    wizard: fromWizard.WizardState;\n\n}\n\nexport const reducers: ActionReducerMap = {\n    wizard: fromWizard.wizardReducer\n};\n\nexport const featureUiState: MemoizedSelector = createFeatureSelector('ui');\n\n/**\n * Exports the wizard state.\n */\nexport const wizardState: MemoizedSelector = createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n);\n\n/**\n * Exports the steps state.\n */\nexport const steps: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getSteps\n);\n\n/**\n * Exports the current step state.\n */\nexport const currentStep: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n);\n\n/**\n * Exports the error state.\n */\nexport const error: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getError\n);\n\n/**\n * Exports the pending state.\n */\nexport const pending: MemoizedSelector = createSelector(\n    wizardState,\n    fromWizard.getPending\n);\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/weather/weather.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-weather\n            \n\n            \n                styleUrls\n                weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/weather/weather.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/weather/weather.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'ui-weather',\n    templateUrl: './weather.component.html',\n    styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    weather\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    weather'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherService\n\nWeatherService\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/network/weather/weather.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     WeatherService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { WeatherService } from './weather.service';\n\n@NgModule({\n    imports: [],\n    declarations: [],\n    providers: [WeatherService]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides reduction factors for graph values based on weather conditions.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/network/weather/weather.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Provides reduction factors for graph values based on weather conditions.\n */\n@Injectable() export class WeatherService {\n\n    public reset(): void {\n        //\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardComponent.html":{"url":"components/WizardComponent.html","title":"component - WizardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ui/wizard/wizard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ui-wizard\n            \n\n            \n                styleUrls\n                wizard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stepper\n                            \n                            \n                                subscriptions\n                            \n                            \n                                wizardForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                stepClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, wizard: WizardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wizard\n                                                  \n                                                        \n                                                                    WizardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nstepClick(event: StepperSelectionEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Updates current step and step data.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    StepperSelectionEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                SelectionChange stepper event.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formSteps\n                    \n                \n\n                \n                    \n                        getformSteps()\n                    \n                \n                            \n                                \n                                    Defined in src/app/ui/wizard/wizard.component.ts:24\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\nimport { Subscription } from 'rxjs';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { WizardService } from './wizard.service';\nimport * as fromUi from '../models/reducers';\n\n@Component({\n    selector: 'ui-wizard',\n    templateUrl: './wizard.component.html',\n    styleUrls: ['./wizard.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class WizardComponent implements OnInit, OnDestroy {\n\n    @ViewChild('stepper') stepper: MatStepper;\n\n    wizardForm: FormGroup;\n\n    get formSteps(): FormArray {\n        return this.wizardForm.get('formSteps') as FormArray;\n    }\n\n    subscriptions: Subscription[] = [];\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store,\n        private wizard: WizardService\n    ) { }\n\n    ngOnInit(): void {\n        // Creates form model.\n        this.wizardForm = this.formBuilder.group({\n            formSteps: this.formBuilder.array([\n                this.formBuilder.group({\n                    address: [''],\n                    center: [null, [Validators.required]]\n                }),\n                this.formBuilder.group({\n                    bounds: [null, [Validators.required]],\n                    time: [null]\n                }),\n                this.formBuilder.group({\n\n                }),\n                this.formBuilder.group({\n\n                }),\n                this.formBuilder.group({\n\n                }),\n                this.formBuilder.group({\n\n                })\n            ])\n        }, { updateOn: 'blur' });\n\n        this.wizard.stepper = this.stepper;\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            if (subscription) { subscription.unsubscribe(); }\n        });\n    }\n\n    /**\n     * Updates current step and step data.\n     * @param event SelectionChange stepper event.\n     */\n    stepClick(event: StepperSelectionEvent): void {\n        const index: number = event.previouslySelectedIndex;\n        const nextIndex: number = event.selectedIndex;\n        if (nextIndex > index) {\n            this.wizard.goOn(\n                this.wizardForm.get('formSteps').get([index]).value,\n                index,\n                nextIndex\n            );\n        }\n    }\n\n    exit(): void {\n        //\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        Search for the area\n                    \n                    \n                \n                \n                    \n                        Selection of the area\n                    \n                    \n                \n                \n                    Estimate of demand\n                    \n                \n                \n                    Change of conditions\n                    \n                \n                \n                    Simulation\n                    \n                \n                \n                    Statistics\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Search for the area                                                                                                                    Selection of the area                                                                                            Estimate of demand                                                                        Change of conditions                                                                        Simulation                                                                        Statistics                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangeOfConditionsComponent', 'selector': 'wizard-change-of-conditions'},{'name': 'EstimateOfDemandComponent', 'selector': 'wizard-estimate-of-demand'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GoogleMapComponent', 'selector': 'google-map'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoDialogComponent', 'selector': 'info-dialog'},{'name': 'MapComponent', 'selector': 'ui-map'},{'name': 'MessageArchivedComponent', 'selector': 'snack-bar'},{'name': 'SearchForTheAreaComponent', 'selector': 'wizard-search-for-the-area'},{'name': 'SelectionOfTheAreaComponent', 'selector': 'wizard-selection-of-the-area'},{'name': 'SimulationComponent', 'selector': 'wizard-simulation'},{'name': 'StatisticsComponent', 'selector': 'wizard-statistics'},{'name': 'UiComponent', 'selector': 'app-ui'},{'name': 'WeatherComponent', 'selector': 'ui-weather'},{'name': 'WizardComponent', 'selector': 'ui-wizard'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WizardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WizardService.html":{"url":"injectables/WizardService.html","title":"injectable - WizardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WizardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/wizard/wizard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                stepper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                goOn\n                            \n                            \n                                    Public\n                                putInError\n                            \n                            \n                                    Public\n                                putOnHold\n                            \n                            \n                                    Public\n                                removeFromWaiting\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                updateStep\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, map: MapService, location: LocationService, network: NetworkService, weather: WeatherService, demand: DemandService, simulation: SimulationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ui/wizard/wizard.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    LocationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    NetworkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        demand\n                                                  \n                                                        \n                                                                    DemandService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        simulation\n                                                  \n                                                        \n                                                                    SimulationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goOn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goOn(data: any, index: number, nextIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        nextIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putInError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putInError(error: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            putOnHold\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putOnHold()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFromWaiting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFromWaiting()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateStep(data: any, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stepper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepper:     MatStepper\n\n                    \n                \n                    \n                        \n                            Type :     MatStepper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ui/wizard/wizard.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { MatStepper } from \"@angular/material\";\n\nimport { Store, select } from '@ngrx/store';\n\nimport { MapService } from \"../map/map.service\";\nimport { LocationService } from \"../../location/location.service\";\nimport { NetworkService } from \"../../network/network.service\";\nimport { WeatherService } from \"../../network/weather/weather.service\";\nimport { DemandService } from \"../../demand/demand.service\";\nimport { SimulationService } from \"../../simulation/simulation.service\";\n\nimport * as fromUi from '../models/reducers';\nimport { WizardActionTypes } from '../models/actions/wizard.actions';\nimport { WizardState } from \"../models/reducers/wizard.reducer\";\n\n@Injectable() export class WizardService {\n\n    public state: WizardState;\n\n    public stepper: MatStepper;\n\n    constructor(\n        private store: Store,\n        private map: MapService,\n        private location: LocationService,\n        private network: NetworkService,\n        private weather: WeatherService,\n        private demand: DemandService,\n        private simulation: SimulationService\n    ) {\n        this.store.pipe(select(fromUi.wizardState)).subscribe((state: WizardState) => {\n            this.state = state;\n        });\n    }\n\n    public updateStep(data: any, index: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepChanged,\n            payload: { step: { data: data }, index: index }\n        });\n    }\n\n    public putInError(error: string): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepError,\n            payload: error\n        });\n    }\n\n    public putOnHold(): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: true\n        });\n    }\n\n    public removeFromWaiting(): void {\n        this.store.dispatch({\n            type: WizardActionTypes.StepPending,\n            payload: false\n        });\n    }\n\n    public goOn(data: any, index: number, nextIndex: number): void {\n        this.store.dispatch({\n            type: WizardActionTypes.GoOn,\n            payload: { step: { data: data }, index: index, nextIndex: nextIndex }\n        });\n    }\n\n    public reset(): void {\n        // App.\n        this.location.reset();\n        this.network.reset();\n        this.weather.reset();\n        this.demand.reset();\n        this.simulation.reset();\n        // UI.\n        this.map.reset();\n        // UI state.\n        this.store.dispatch({\n            type: WizardActionTypes.Reset\n        });\n        // Stepper.\n        this.stepper.reset();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardState.html":{"url":"interfaces/WizardState.html","title":"interface - WizardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ui/models/reducers/wizard.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Wizard state management.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentStep\n                                \n                                \n                                        error\n                                \n                                \n                                        pending\n                                \n                                \n                                        steps\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentStep\n                                    \n                                \n                                \n                                    \n                                        currentStep:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                    \n                                \n                                \n                                    \n                                        pending:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                    \n                                \n                                \n                                    \n                                        steps:     Step[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Step[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import deepClone from 'mout/lang/deepClone';\n\nimport { Step, STEPS } from \"../wizard\";\nimport { WizardActions, WizardActionTypes } from '../actions/wizard.actions';\n\n/**\n * Wizard state management.\n */\nexport interface WizardState {\n\n    steps: Step[];\n    currentStep: number;\n    error: string | null;\n    pending: boolean;\n\n}\n\nexport const initialWizardState: WizardState = {\n    steps: STEPS,\n    currentStep: 0,\n    error: null,\n    pending: false\n};\n\n/**\n * ngrx: wizard Reducer.\n */\nexport function wizardReducer(state: WizardState = deepClone(initialWizardState), action: WizardActions): WizardState {\n    switch (action.type) {\n        case WizardActionTypes.StepChanged: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: deepClone(state.steps),\n                error: null,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepError: {\n            return {\n                ...state,\n                error: action.payload,\n                pending: false\n            };\n        }\n        case WizardActionTypes.StepPending: {\n            return {\n                ...state,\n                error: null,\n                pending: action.payload\n            };\n        }\n        case WizardActionTypes.GoOn: {\n            // Updates the step at the provided index.\n            state.steps[action.payload.index] = action.payload.step;\n            return {\n                ...state,\n                steps: deepClone(state.steps),\n                currentStep: action.payload.nextIndex,\n                error: null,\n                pending: false\n            };\n        }\n        case WizardActionTypes.Reset: {\n            return deepClone(initialWizardState);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const getSteps: (state: WizardState) => Step[] = (state: WizardState) => state.steps;\n\nexport const getCurrentStep: (state: WizardState) => number = (state: WizardState) => state.currentStep;\n\nexport const getError: (state: WizardState) => string = (state: WizardState) => state.error;\n\nexport const getPending: (state: WizardState) => boolean = (state: WizardState) => state.pending;\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app-config.ts\n            \n            \n                variable\n            \n            \n                appConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/app-preloading-strategy.ts\n            \n            \n                class\n            \n            \n                AppPreloadingStrategy\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/demand/demand.service.ts\n            \n            \n                injectable\n            \n            \n                DemandService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/home/home.transition.ts\n            \n            \n                variable\n            \n            \n                HOME_TRANSITION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/location/location.service.ts\n            \n            \n                injectable\n            \n            \n                LocationService\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                class\n            \n            \n                Edge\n            \n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                class\n            \n            \n                Graph\n            \n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                class\n            \n            \n                Node\n            \n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                class\n            \n            \n                Relation\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                interface\n            \n            \n                Member\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    src/app/network/graph.ts\n            \n            \n                interface\n            \n            \n                Tag\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/app/network/network.service.ts\n            \n            \n                injectable\n            \n            \n                NetworkService\n            \n            \n                57 %\n                (12/21)\n            \n        \n        \n            \n                \n                    src/app/network/weather/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/shared/can-deactivate-guard.service.ts\n            \n            \n                injectable\n            \n            \n                CanDeactivateGuard\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/shared/can-deactivate-guard.service.ts\n            \n            \n                interface\n            \n            \n                CanComponentDeactivate\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/shared/footer/footer.component.ts\n            \n            \n                component\n            \n            \n                FooterComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/shared/info-dialog.component.ts\n            \n            \n                component\n            \n            \n                InfoDialogComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/shared/material.module.ts\n            \n            \n                variable\n            \n            \n                materialModules\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/shared/message-archived.component.ts\n            \n            \n                component\n            \n            \n                MessageArchivedComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/shared/shared.module.ts\n            \n            \n                variable\n            \n            \n                sharedModules\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/simulation/clock.ts\n            \n            \n                class\n            \n            \n                Clock\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/simulation/simulation.service.ts\n            \n            \n                injectable\n            \n            \n                SimulationService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/ui/map/google-map.component.ts\n            \n            \n                component\n            \n            \n                GoogleMapComponent\n            \n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                    src/app/ui/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                14 %\n                (3/21)\n            \n        \n        \n            \n                \n                    src/app/ui/map/map.service.ts\n            \n            \n                injectable\n            \n            \n                MapService\n            \n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                    src/app/ui/map/map.style.ts\n            \n            \n                variable\n            \n            \n                MapStyle\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                GoOn\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                Reset\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                StepChanged\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                StepError\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/actions/wizard.actions.ts\n            \n            \n                class\n            \n            \n                StepPending\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ui/models/base.component.ts\n            \n            \n                class\n            \n            \n                BaseComponent\n            \n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                interface\n            \n            \n                UiState\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                currentStep\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                error\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                featureUiState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                pending\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                reducers\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                steps\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers.ts\n            \n            \n                variable\n            \n            \n                wizardState\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                interface\n            \n            \n                WizardState\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                function\n            \n            \n                wizardReducer\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getCurrentStep\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getError\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getPending\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                getSteps\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/reducers/wizard.reducer.ts\n            \n            \n                variable\n            \n            \n                initialWizardState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/ui/models/wizard.ts\n            \n            \n                interface\n            \n            \n                Step\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/ui/models/wizard.ts\n            \n            \n                variable\n            \n            \n                STEPS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/ui-config.ts\n            \n            \n                variable\n            \n            \n                uiConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/ui/ui.component.ts\n            \n            \n                component\n            \n            \n                UiComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/ui/weather/weather.component.ts\n            \n            \n                component\n            \n            \n                WeatherComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/change-of-conditions/change-of-conditions.component.ts\n            \n            \n                component\n            \n            \n                ChangeOfConditionsComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/estimate-of-demand/estimate-of-demand.component.ts\n            \n            \n                component\n            \n            \n                EstimateOfDemandComponent\n            \n            \n                26 %\n                (4/15)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/search-for-the-area/search-for-the-area.component.ts\n            \n            \n                component\n            \n            \n                SearchForTheAreaComponent\n            \n            \n                18 %\n                (3/16)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/selection-of-the-area/selection-of-the-area.component.ts\n            \n            \n                component\n            \n            \n                SelectionOfTheAreaComponent\n            \n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/simulation/simulation.component.ts\n            \n            \n                component\n            \n            \n                SimulationComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/statistics/statistics.component.ts\n            \n            \n                component\n            \n            \n                StatisticsComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/wizard.component.ts\n            \n            \n                component\n            \n            \n                WizardComponent\n            \n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                    src/app/ui/wizard/wizard.service.ts\n            \n            \n                injectable\n            \n            \n                WizardService\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    src/app/utils.ts\n            \n            \n                function\n            \n            \n                getScript\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/utils.ts\n            \n            \n                function\n            \n            \n                loadScripts\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.0.3\n        \n            @angular/common : 6.0.3\n        \n            @angular/compiler : 6.0.3\n        \n            @angular/core : 6.0.3\n        \n            @angular/forms : 6.0.3\n        \n            @angular/http : 6.0.3\n        \n            @angular/platform-browser : 6.0.3\n        \n            @angular/platform-browser-dynamic : 6.0.3\n        \n            @angular/router : 6.0.3\n        \n            @angular/material : 6.2.1\n        \n            @angular/cdk : 6.2.1\n        \n            @angular/flex-layout : 6.0.0-beta.15\n        \n            @ngrx/store : 6.0.1\n        \n            @ngrx/effects : 6.0.1\n        \n            @turf/area : 6.0.1\n        \n            @turf/helpers : 6.1.4\n        \n            ng-pick-datetime : 6.0.5\n        \n            mout : 1.1.0\n        \n            web-animations-js : 2.3.1\n        \n            hammerjs : 2.0.8\n        \n            animejs : 2.2.0\n        \n            qs : 6.5.2\n        \n            core-js : 2.5.7\n        \n            rxjs : 6.2.0\n        \n            zone.js : 0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WizardActionTypes   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActionTypes\n                    \n                \n                    \n                        \n                            ngrx: wizard Actions.\n\n                        \n                    \n                        \n                            \n                                 StepChanged\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Changed\n                            \n                        \n                        \n                            \n                                 StepError\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Error\n                            \n                        \n                        \n                            \n                                 StepPending\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Step Pending\n                            \n                        \n                        \n                            \n                                 GoOn\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Go On\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n                        \n                            \n                                Value: [Wizard] Reset\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getScript   (src/.../utils.ts)\n                        \n                        \n                            loadScripts   (src/.../utils.ts)\n                        \n                        \n                            wizardReducer   (src/.../wizard.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getScript\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScript(src: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScripts\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScripts()\n                    \n                \n\n\n\n\n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            wizardReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nwizardReducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            ngrx: wizard Reducer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSTRADA\n\n\nSTRADA (Simulation of TRAffic DAta) is an urban traffic web simulator that uses data in real time.\n\n\nThis project is under active development for the dissertation of my bachelor's degree in computer engineering.\n\nDocumentation\nOfficial docs: STRADA documentation\nDevelopment\nRequirements\n\nNode.js and npm\nUpdate npm: npm install npm@latest -g\nAngular CLI: npm install -g @angular/cli\nFirebase\nCreate a Firebase project in the Firebase console\nFirebase CLI: npm install -g firebase-tools\nLogin: firebase login\n\n\nGoogle Maps \nGet your API keys: https://cloud.google.com/maps-platform/\nEnable Maps JavaScript API, Geocoding API and Directions API\n\n\n\nPrerequisites\n\nUpdate config.json file\nUpdate .firebaserc file\n\nFirebase Functions\ncd functions\nnpm install\nnpm run serve:devApp\nnpm install\nnpm startTest\nnpm testLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Roberto Simonetti\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DemandModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NetworkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimulationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DemandModule\n\n\n\ncluster_DemandModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_NetworkModule\n\n\n\ncluster_NetworkModule_imports\n\n\n\ncluster_NetworkModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SimulationModule\n\n\n\ncluster_SimulationModule_providers\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_declarations\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_providers\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDemandModule\n\nDemandModule\n\nAppModule -->\n\nDemandModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nNetworkModule\n\nNetworkModule\n\nAppModule -->\n\nNetworkModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nSharedModule->InfoDialogComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMessageArchivedComponent \n\nMessageArchivedComponent \n\nMessageArchivedComponent  -->\n\nSharedModule->MessageArchivedComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nSharedModule->UiModule\n\n\n\n\n\nSimulationModule\n\nSimulationModule\n\nAppModule -->\n\nSimulationModule->AppModule\n\n\n\n\n\nDemandService\n\nDemandService\n\nDemandModule -->\n\nDemandService->DemandModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nNetworkModule -->\n\nWeatherModule->NetworkModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nNetworkModule -->\n\nNetworkService->NetworkModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nSharedModule -->\n\nInfoDialogComponent->SharedModule\n\n\n\n\n\nMessageArchivedComponent\n\nMessageArchivedComponent\n\nSharedModule -->\n\nMessageArchivedComponent->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nSimulationService\n\nSimulationService\n\nSimulationModule -->\n\nSimulationService->SimulationModule\n\n\n\n\n\nChangeOfConditionsComponent\n\nChangeOfConditionsComponent\n\nUiModule -->\n\nChangeOfConditionsComponent->UiModule\n\n\n\n\n\nEstimateOfDemandComponent\n\nEstimateOfDemandComponent\n\nUiModule -->\n\nEstimateOfDemandComponent->UiModule\n\n\n\n\n\nGoogleMapComponent\n\nGoogleMapComponent\n\nUiModule -->\n\nGoogleMapComponent->UiModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nUiModule -->\n\nMapComponent->UiModule\n\n\n\n\n\nSearchForTheAreaComponent\n\nSearchForTheAreaComponent\n\nUiModule -->\n\nSearchForTheAreaComponent->UiModule\n\n\n\n\n\nSelectionOfTheAreaComponent\n\nSelectionOfTheAreaComponent\n\nUiModule -->\n\nSelectionOfTheAreaComponent->UiModule\n\n\n\n\n\nSimulationComponent\n\nSimulationComponent\n\nUiModule -->\n\nSimulationComponent->UiModule\n\n\n\n\n\nStatisticsComponent\n\nStatisticsComponent\n\nUiModule -->\n\nStatisticsComponent->UiModule\n\n\n\n\n\nUiComponent\n\nUiComponent\n\nUiModule -->\n\nUiComponent->UiModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nUiModule -->\n\nWeatherComponent->UiModule\n\n\n\n\n\nWizardComponent\n\nWizardComponent\n\nUiModule -->\n\nWizardComponent->UiModule\n\n\n\n\n\nUiRoutingModule\n\nUiRoutingModule\n\nUiModule -->\n\nUiRoutingModule->UiModule\n\n\n\n\n\nMapService\n\nMapService\n\nUiModule -->\n\nMapService->UiModule\n\n\n\n\n\nWizardService\n\nWizardService\n\nUiModule -->\n\nWizardService->UiModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            11 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        16 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        12 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            6 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WizardActions   (src/.../wizard.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ui/models/actions/wizard.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WizardActions\n                    \n                \n                \n                    \n                        WizardActions:     StepChanged | StepError | StepPending | GoOn | Reset\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app-config.ts)\n                        \n                        \n                            currentStep   (src/.../reducers.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            error   (src/.../reducers.ts)\n                        \n                        \n                            featureUiState   (src/.../reducers.ts)\n                        \n                        \n                            getCurrentStep   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getError   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getPending   (src/.../wizard.reducer.ts)\n                        \n                        \n                            getSteps   (src/.../wizard.reducer.ts)\n                        \n                        \n                            HOME_TRANSITION   (src/.../home.transition.ts)\n                        \n                        \n                            initialWizardState   (src/.../wizard.reducer.ts)\n                        \n                        \n                            MapStyle   (src/.../map.style.ts)\n                        \n                        \n                            materialModules   (src/.../material.module.ts)\n                        \n                        \n                            pending   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            sharedModules   (src/.../shared.module.ts)\n                        \n                        \n                            steps   (src/.../reducers.ts)\n                        \n                        \n                            STEPS   (src/.../wizard.ts)\n                        \n                        \n                            uiConfig   (src/.../ui-config.ts)\n                        \n                        \n                            wizardState   (src/.../reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        appConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    apis: {\n        overpassApi: {\n            url: 'https://lz4.overpass-api.de/api/interpreter',\n            timeout: 5000,\n            /**\n             * The main key used for identifying any kind of road.\n             * https://wiki.openstreetmap.org/wiki/Key:highway\n             */\n            highways: ['motorway', 'trunk', 'primary', 'secondary', 'tertiary', 'unclassified', 'residential']\n        },\n        googleMaps: {\n            url: 'https://maps.googleapis.com/maps/api/js',\n            apiKey: (config).googleMaps.apiKey\n        },\n        openWeatherMap: {\n            url: '',\n            apiKey: (config).openWeatherMap.apiKey\n        }\n    }\n}\n                        \n                    \n\n                \n                    \n                        App configuration.\n\n                    \n                \n\n            \n        \n\n    src/app/ui/models/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            currentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentStep:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getCurrentStep\n)\n                        \n                    \n\n                \n                    \n                        Exports the current step state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getError\n)\n                        \n                    \n\n                \n                    \n                        Exports the error state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featureUiState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        featureUiState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createFeatureSelector('ui')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pending:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getPending\n)\n                        \n                    \n\n                \n                    \n                        Exports the pending state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    wizard: fromWizard.wizardReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        steps:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    wizardState,\n    fromWizard.getSteps\n)\n                        \n                    \n\n                \n                    \n                        Exports the steps state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wizardState:     MemoizedSelector\n\n                    \n                \n                    \n                        \n                            Type :     MemoizedSelector\n\n                        \n                    \n                    \n                        \n                            Default value : createSelector(\n    featureUiState,\n    (state: UiState) => state.wizard\n)\n                        \n                    \n\n                \n                    \n                        Exports the wizard state.\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    functions: {\n        trafficData: {\n            url: 'http://localhost:4201/' + (config).firebase.projectId + '/us-central1/trafficData'\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    functions: {\n        trafficData: {\n            url: 'https://us-central1-' + (config).firebase.projectId + '.cloudfunctions.net/trafficData'\n        }\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/reducers/wizard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getCurrentStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.currentStep\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getError:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.error\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPending\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getPending:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.pending\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSteps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getSteps:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : (state: WizardState) => state.steps\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialWizardState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialWizardState:     WizardState\n\n                    \n                \n                    \n                        \n                            Type :     WizardState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    steps: STEPS,\n    currentStep: 0,\n    error: null,\n    pending: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/home/home.transition.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HOME_TRANSITION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HOME_TRANSITION:     AnimationTriggerMetadata\n\n                    \n                \n                    \n                        \n                            Type :     AnimationTriggerMetadata\n\n                        \n                    \n                    \n                        \n                            Default value : trigger('homeTransition', [\n    transition('void => *', [\n        style({\n            opacity: 0\n        }),\n        animate('500ms 0ms ease-in',\n            style({\n                opacity: 1\n            })\n        )\n    ])\n])\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/map/map.style.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MapStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MapStyle:     google.maps.MapTypeStyle[]\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.MapTypeStyle[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    }\n]\n                        \n                    \n\n                \n                    \n                        Styled Maps: https://developers.google.com/maps/documentation/javascript/styling\n\n                    \n                \n\n            \n        \n\n    src/app/shared/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        materialModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sharedModules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sharedModules:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/ui/models/wizard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STEPS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        STEPS:     Step[]\n\n                    \n                \n                    \n                        \n                            Type :     Step[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        Initial steps.\n\n                    \n                \n\n            \n        \n\n    src/app/ui/ui-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uiConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uiConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // Initial map.\n    map: {\n        center: { lat: 41.910943, lng: 12.476358 },\n        zoom: 4\n    },\n    /**\n     * Time of simulation limit in hours.\n     */\n    timeLimit: 24,\n    /**\n     * Area limit in hectares.\n     */\n    areaMaxLimit: 50,\n    areaMinLimit: 3,\n}\n                        \n                    \n\n                \n                    \n                        User interface configuration.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
